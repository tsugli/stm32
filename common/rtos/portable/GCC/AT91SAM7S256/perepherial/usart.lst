   1              		.file	"usart.c"
   9              	.Ltext0:
  10              		.section	.rodata.str1.4,"aMS",%progbits,1
  11              		.align	2
  12              	.LC0:
  13 0000 5553305F 		.ascii	"US0_Error\000"
  13      4572726F 
  13      7200
  14              		.global	__udivsi3
  15 000a 0000     		.align	2
  16              	.LC1:
  17 000c 5553315F 		.ascii	"US1_Error\000"
  17      4572726F 
  17      7200
  18 0016 0000     		.text
  19              		.align	2
  20              		.global	AT91F_USART_OPEN
  22              	AT91F_USART_OPEN:
  23              	.LFB297:
  24              		.file 1 "rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c"
   1:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //*----------------------------------------------------------------------------
   2:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //*      ATMEL Microcontroller Software Support  -  ROUSSET  -
   3:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //*----------------------------------------------------------------------------
   4:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //* The software is delivered "AS IS" without warranty or condition of any
   5:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //* kind, either express, implied or statutory. This includes without
   6:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //* limitation any warranty or condition with respect to merchantability or
   7:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //* fitness for any particular purpose, or against the infringements of
   8:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //* intellectual property rights of others.
   9:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //*----------------------------------------------------------------------------
  10:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //* File Name           : interrupt_Usart.c
  11:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //* Object              : USART Interrupt Management
  12:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //*
  13:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //* 1.0 03/Jun/03 JPP   : Creation
  14:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //*----------------------------------------------------------------------------
  15:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
  16:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** // Include Standard LIB  files
  17:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** #include <stdlib.h>
  18:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** #include "FreeRTOS.h"
  19:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** #include "task.h"
  20:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** #include "queue.h"
  21:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** #include "board.h"
  22:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** #include "error.h"
  23:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** #include "usart.h"
  24:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** #define TRACE
  25:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
  26:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** #define AT91F_US_TIMEOUT_SET(X,VOL) {X->US_CR |= AT91C_US_STTTO ;	X->US_RTOR = VOL;}
  27:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //#define AT91F_US_ENRXTX(X)      {X->US_CR  = AT91C_US_RXEN | AT91C_US_TXEN;}
  28:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** #define USART_INTERRUPT_LEVEL		7
  29:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
  30:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** AT91_USART_DEV COM0, COM1;
  31:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
  32:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** /* Interrupt entry point written in the assembler file serialISR.s79. */
  33:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** void AT91_US0_ISR_ENTRY(void) __attribute__((naked));
  34:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
  35:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** void AT91_US1_ISR_ENTRY(void) __attribute__((naked));
  36:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
  37:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** void AT91F_US_INTERRUPT(AT91_USART_DEV*);
  38:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
  39:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //*------------------------- Internal Function --------------------------------
  40:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** void AT91_US0_ISR_ENTRY(void)
  41:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** {
  42:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	portSAVE_CONTEXT();
  43:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	AT91F_US_INTERRUPT(&COM0);
  44:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	portRESTORE_CONTEXT();
  45:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** }
  46:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** void AT91_US1_ISR_ENTRY(void)
  47:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** {
  48:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	portSAVE_CONTEXT();
  49:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	AT91F_US_INTERRUPT(&COM1);
  50:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	portRESTORE_CONTEXT();
  51:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** }
  52:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
  53:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** void AT91F_US_INTERRUPT(AT91_USART_DEV *mdev)
  54:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** {
  55:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	unsigned int status = mdev->hPort->US_CSR;
  56:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	int size;
  57:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	portBASE_TYPE xTaskWokenByPost = pdFALSE;
  58:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	status &= mdev->hPort->US_IMR;
  59:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
  60:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	if ((status & AT91C_US_TIMEOUT))
  61:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	{
  62:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		mdev->rxSize = mdev->bufSize - (int) mdev->hPort->US_RCR;
  63:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		xQueueSendFromISR(mdev->hRxQueue, (void *) (&size), &xTaskWokenByPost);
  64:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		AT91F_US_DisableIt(mdev->hPort, AT91C_US_TIMEOUT | AT91C_US_RXBUFF);
  65:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		AT91F_US_DisableRx(mdev->hPort);
  66:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	}
  67:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	if ((status & AT91C_US_TXEMPTY))
  68:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	{
  69:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		xQueueSendFromISR(mdev->hTxQueue, (void *) &size, &xTaskWokenByPost);
  70:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		AT91F_US_DisableIt(mdev->hPort, AT91C_US_TXEMPTY);
  71:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		AT91F_US_DisableTx(mdev->hPort);
  72:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	}
  73:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
  74:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	if (xTaskWokenByPost)
  75:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	{
  76:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		portYIELD_FROM_ISR();
  77:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	}
  78:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
  79:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	AT91C_BASE_AIC->AIC_EOICR = 0;
  80:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** }
  81:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //===============================================================================================
  82:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** inline void AT91F_US_START_TRANSMITION(AT91PS_USART COM, uint8 *data, int size)
  83:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** {
  84:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	portENTER_CRITICAL();
  85:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	{
  86:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		AT91F_US_EnableIt(COM, AT91C_US_TXEMPTY);
  87:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		AT91F_US_EnableTx(COM);
  88:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		COM->US_TNCR = 0;
  89:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		COM->US_TNCR = 0;
  90:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		COM->US_TPR = (unsigned int) data;
  91:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		COM->US_TCR = size;
  92:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	}
  93:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	portEXIT_CRITICAL();
  94:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** }
  95:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //===============================================================================================
  96:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** inline void AT91F_US_START_RECEIVE(AT91PS_USART COM, uint8 *data, int size)
  97:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** {
  98:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	portENTER_CRITICAL();
  99:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	{
 100:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		AT91F_US_TIMEOUT_SET(COM,0x20);
 101:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		AT91F_US_EnableIt(COM, AT91C_US_TIMEOUT | AT91C_US_RXBUFF);
 102:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		COM->US_RNCR = 0;
 103:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		COM->US_RNCR = 0;
 104:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		COM->US_RPR = (unsigned int) data;
 105:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		COM->US_RCR = size;
 106:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		AT91F_US_EnableRx(COM);
 107:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	}
 108:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	portEXIT_CRITICAL();
 109:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** }
 110:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //===============================================================================================
 111:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** void AT91F_USART_SEND(AT91_USART_DEV *dev, uint8 *data, int size)
 112:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** {
 113:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	int Param;
 114:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	AT91F_US_START_TRANSMITION(dev->hPort, data, size);
 115:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	xQueueReceive(dev->hTxQueue, (void *) &Param, (portTickType) 1000);
 116:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	AT91F_US_DisableIt(dev->hPort, AT91C_US_TXEMPTY);
 117:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	AT91F_US_DisableTx(dev->hPort);
 118:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** }
 119:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //===============================================================================================
 120:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** int AT91F_USART_RECEIVE(AT91_USART_DEV *dev, uint8 *data, int dsize,
 121:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		int timeout)
 122:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** {
 123:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	dev->bufSize = dsize;
 124:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	dev->rxSize = 0;
 125:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	AT91F_US_START_RECEIVE(dev->hPort, data, dsize);
 126:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	xQueueReceive(dev->hRxQueue, (void *) &dsize, (portTickType) timeout);
 127:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	AT91F_US_DisableIt(dev->hPort, AT91C_US_TIMEOUT);
 128:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	AT91F_US_DisableRx(dev->hPort);
 129:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	return (dev->rxSize);
 130:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** }
 131:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** //===============================================================================================
 132:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** void AT91F_USART_OPEN(AT91_USART_ID idPort, long BaudRate, int mode)
 133:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** {
  25              		.loc 1 133 0
  26              		@ Function supports interworking.
  27              		@ args = 0, pretend = 0, frame = 0
  28              		@ frame_needed = 0, uses_anonymous_args = 0
  29              	.LVL0:
  30 0000 F0412DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32 0004 0040A0E1 		mov	r4, r0
  33 0008 0170A0E1 		mov	r7, r1
  34 000c 0280A0E1 		mov	r8, r2
 134:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	portENTER_CRITICAL();
  35              		.loc 1 134 0
  36 0010 FEFFFFEB 		bl	vPortEnterCritical
  37              	.LVL1:
 135:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	{
 136:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		switch (idPort)
  38              		.loc 1 136 0
  39 0014 000054E3 		cmp	r4, #0
  40 0018 0200000A 		beq	.L3
  41 001c 010054E3 		cmp	r4, #1
  42 0020 6B00000A 		beq	.L4
  43 0024 CB0000EA 		b	.L2
  44              	.L3:
 137:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		{
 138:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		case AT91_USART_COM0_ID:
 139:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			COM0.id = idPort;
  45              		.loc 1 139 0
  46 0028 48639FE5 		ldr	r6, .L19
  47 002c 0050A0E3 		mov	r5, #0
  48 0030 005086E5 		str	r5, [r6, #0]
 140:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			COM0.hPort = AT91C_BASE_US0;
  49              		.loc 1 140 0
  50 0034 0241A0E3 		mov	r4, #-2147483648
  51              	.LVL2:
  52 0038 C446A0E1 		mov	r4, r4, asr #13
  53 003c 044086E5 		str	r4, [r6, #4]
 141:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			COM0.hError = ErrorCreate("US0_Error");
  54              		.loc 1 141 0
  55 0040 34039FE5 		ldr	r0, .L19+4
  56 0044 FEFFFFEB 		bl	ErrorCreate
  57 0048 B800C6E1 		strh	r0, [r6, #8]	@ movhi
 142:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			COM0.hPDC = AT91C_BASE_PDC_US0;
  58              		.loc 1 142 0
  59 004c 014C84E2 		add	r4, r4, #256
  60 0050 144086E5 		str	r4, [r6, #20]
  61              	.LBB164:
  62              	.LBB165:
  63              	.LBB166:
  64              	.LBB167:
  65              		.file 2 "./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h"
   1:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
   2:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*         ATMEL Microcontroller Software Support  -  ROUSSET  -
   3:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
   4:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* DISCLAIMER:  THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
   5:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
   6:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
   7:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
   8:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
   9:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  10:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  11:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  12:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  13:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  14:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
  15:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* File Name           : lib_AT91SAM7S256.h
  16:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Object              : AT91SAM7S256 inlined functions
  17:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Generated           : AT91 SW Application Group  01/16/2006 (16:36:07)
  18:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*
  19:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_MC_SAM7S.h/1.1/Thu Mar 25 15:19:14 2004//
  20:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pdc.h/1.2/Tue Jul  2 13:29:40 2002//
  21:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_dbgu.h/1.1/Thu Aug 25 12:56:22 2005//
  22:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_VREG_6085B.h/1.1/Tue Feb  1 16:20:47 2005//
  23:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_ssc.h/1.4/Fri Jan 31 12:19:20 2003//
  24:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_spi2.h/1.2/Tue Aug 23 15:37:28 2005//
  25:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_PWM_SAM.h/1.3/Thu Jan 22 10:10:50 2004//
  26:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_tc_1753b.h/1.1/Fri Jan 31 12:20:02 2003//
  27:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pitc_6079A.h/1.2/Tue Nov  9 14:43:56 2004//
  28:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pmc_SAM7S.h/1.5/Fri Nov  4 09:37:21 2005//
  29:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_adc.h/1.6/Fri Oct 17 09:12:38 2003//
  30:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_rstc_6098A.h/1.1/Wed Oct  6 10:39:20 2004//
  31:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_rttc_6081A.h/1.1/Wed Oct  6 10:39:38 2004//
  32:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pio.h/1.3/Fri Jan 31 12:18:56 2003//
  33:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_twi.h/1.3/Mon Jul 19 14:27:58 2004//
  34:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_wdtc_6080A.h/1.1/Wed Oct  6 10:38:30 2004//
  35:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_usart.h/1.5/Thu Nov 21 16:01:54 2002//
  36:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_udp.h/1.5/Tue Aug 30 12:13:47 2005//
  37:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_aic_6075b.h/1.2/Thu Jul  7 07:48:22 2005//
  38:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
  39:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  40:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #ifndef lib_AT91SAM7S256_H
  41:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define lib_AT91SAM7S256_H
  42:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  43:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
  44:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR AIC
  45:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
  46:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_AIC_BRANCH_OPCODE ((void (*) ()) 0xE51FFF20) // ldr, pc, [pc, #-&F20]
  47:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  48:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  49:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_ConfigureIt
  50:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Interrupt Handler Initialization
  51:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  52:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_AIC_ConfigureIt (
  53:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,  // \arg pointer to the AIC registers
  54:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id,     // \arg interrupt number to initialize
  55:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int priority,   // \arg priority to give to the interrupt
  56:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int src_type,   // \arg activation and sense of activation
  57:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*newHandler) () ) // \arg address of the interrupt handler
  58:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
  59:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int oldHandler;
  60:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     unsigned int mask ;
  61:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  62:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     oldHandler = pAic->AIC_SVR[irq_id];
  63:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  64:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     mask = 0x1 << irq_id ;
  65:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable the interrupt on the interrupt controller
  66:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_IDCR = mask ;
  67:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Save the interrupt handler routine pointer and the interrupt priority
  68:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_SVR[irq_id] = (unsigned int) newHandler ;
  69:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Store the Source Mode Register
  70:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_SMR[irq_id] = src_type | priority  ;
  71:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Clear the interrupt on the interrupt controller
  72:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_ICCR = mask ;
  73:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  74:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return oldHandler;
  75:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
  76:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  77:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  78:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_EnableIt
  79:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable corresponding IT number
  80:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  81:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_EnableIt (
  82:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,      // \arg pointer to the AIC registers
  83:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id ) // \arg interrupt number to initialize
  84:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
  85:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Enable the interrupt on the interrupt controller
  86:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_IECR = 0x1 << irq_id ;
  87:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
  88:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  89:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  90:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_DisableIt
  91:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable corresponding IT number
  92:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  93:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_DisableIt (
  94:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,      // \arg pointer to the AIC registers
  95:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id ) // \arg interrupt number to initialize
  96:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
  97:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     unsigned int mask = 0x1 << irq_id;
  98:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable the interrupt on the interrupt controller
  99:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_IDCR = mask ;
 100:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Clear the interrupt on the Interrupt Controller ( if one is pending )
 101:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_ICCR = mask ;
 102:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 103:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 104:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 105:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_ClearIt
 106:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Clear corresponding IT number
 107:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 108:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_ClearIt (
 109:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 110:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg interrupt number to initialize
 111:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 112:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Clear the interrupt on the Interrupt Controller ( if one is pending )
 113:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_ICCR = (0x1 << irq_id);
 114:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 115:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 116:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 117:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_AcknowledgeIt
 118:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Acknowledge corresponding IT number
 119:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 120:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_AcknowledgeIt (
 121:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic)     // \arg pointer to the AIC registers
 122:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 123:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_EOICR = pAic->AIC_EOICR;
 124:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 125:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 126:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 127:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_SetExceptionVector
 128:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure vector handler
 129:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 130:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int  AT91F_AIC_SetExceptionVector (
 131:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int *pVector, // \arg pointer to the AIC registers
 132:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*Handler) () )   // \arg Interrupt Handler
 133:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 134:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int oldVector = *pVector;
 135:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 136:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	if ((unsigned int) Handler == (unsigned int) AT91C_AIC_BRANCH_OPCODE)
 137:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		*pVector = (unsigned int) AT91C_AIC_BRANCH_OPCODE;
 138:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	else
 139:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		*pVector = (((((unsigned int) Handler) - ((unsigned int) pVector) - 0x8) >> 2) & 0x00FFFFFF) | 0x
 140:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 141:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return oldVector;
 142:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 143:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 144:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 145:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_Trig
 146:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Trig an IT
 147:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 148:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void  AT91F_AIC_Trig (
 149:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 150:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg interrupt number
 151:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 152:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pAic->AIC_ISCR = (0x1 << irq_id) ;
 153:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 154:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 155:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 156:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_IsActive
 157:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if an IT is active
 158:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 159:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int  AT91F_AIC_IsActive (
 160:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 161:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg Interrupt Number
 162:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 163:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (pAic->AIC_ISR & (0x1 << irq_id));
 164:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 165:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 166:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 167:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_IsPending
 168:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if an IT is pending
 169:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 170:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int  AT91F_AIC_IsPending (
 171:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 172:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg Interrupt Number
 173:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 174:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (pAic->AIC_IPR & (0x1 << irq_id));
 175:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 176:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 177:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 178:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_Open
 179:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set exception vectors and AIC registers to default values
 180:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 181:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_Open(
 182:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,        // \arg pointer to the AIC registers
 183:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*IrqHandler) (),  // \arg Default IRQ vector exception
 184:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*FiqHandler) (),  // \arg Default FIQ vector exception
 185:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*DefaultHandler)  (), // \arg Default Handler set in ISR
 186:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*SpuriousHandler) (), // \arg Default Spurious Handler
 187:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int protectMode)   // \arg Debug Control Register
 188:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 189:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	int i;
 190:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 191:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Disable all interrupts and set IVR to the default handler
 192:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	for (i = 0; i < 32; ++i) {
 193:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_AIC_DisableIt(pAic, i);
 194:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_AIC_ConfigureIt(pAic, i, AT91C_AIC_PRIOR_LOWEST, AT91C_AIC_SRCTYPE_HIGH_LEVEL, DefaultHandl
 195:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 196:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 197:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Set the IRQ exception vector
 198:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_AIC_SetExceptionVector((unsigned int *) 0x18, IrqHandler);
 199:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Set the Fast Interrupt exception vector
 200:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_AIC_SetExceptionVector((unsigned int *) 0x1C, FiqHandler);
 201:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 202:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pAic->AIC_SPU = (unsigned int) SpuriousHandler;
 203:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pAic->AIC_DCR = protectMode;
 204:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 205:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
 206:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PDC
 207:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
 208:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 209:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetNextRx
 210:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the next receive transfer descriptor
 211:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 212:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetNextRx (
 213:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,     // \arg pointer to a PDC controller
 214:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *address,       // \arg address to the next bloc to be received
 215:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int bytes)  // \arg number of bytes to be received
 216:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 217:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_RNPR = (unsigned int) address;
 218:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_RNCR = bytes;
 219:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 220:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 221:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 222:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetNextTx
 223:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the next transmit transfer descriptor
 224:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 225:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetNextTx (
 226:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,       // \arg pointer to a PDC controller
 227:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *address,         // \arg address to the next bloc to be transmitted
 228:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int bytes)    // \arg number of bytes to be transmitted
 229:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 230:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_TNPR = (unsigned int) address;
 231:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_TNCR = bytes;
 232:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 233:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 234:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 235:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetRx
 236:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the receive transfer descriptor
 237:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 238:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetRx (
 239:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,       // \arg pointer to a PDC controller
 240:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *address,         // \arg address to the next bloc to be received
 241:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int bytes)    // \arg number of bytes to be received
 242:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 243:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_RPR = (unsigned int) address;
 244:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_RCR = bytes;
 245:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 246:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 247:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 248:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetTx
 249:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the transmit transfer descriptor
 250:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 251:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetTx (
 252:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,       // \arg pointer to a PDC controller
 253:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *address,         // \arg address to the next bloc to be transmitted
 254:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int bytes)    // \arg number of bytes to be transmitted
 255:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 256:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_TPR = (unsigned int) address;
 257:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_TCR = bytes;
 258:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 259:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 260:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 261:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_EnableTx
 262:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable transmit
 263:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 264:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_EnableTx (
 265:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 266:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 267:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_TXTEN;
 268:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 269:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 270:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 271:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_EnableRx
 272:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable receive
 273:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 274:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_EnableRx (
 275:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 276:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 277:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_RXTEN;
 278:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 279:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 280:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 281:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_DisableTx
 282:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable transmit
 283:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 284:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_DisableTx (
 285:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 286:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 287:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_TXTDIS;
 288:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 289:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 290:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 291:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_DisableRx
 292:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable receive
 293:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 294:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_DisableRx (
 295:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 296:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 297:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_RXTDIS;
  66              		.loc 2 297 0
  67 0054 0231A0E3 		mov	r3, #-2147483648
  68 0058 C336A0E1 		mov	r3, r3, asr #13
  69 005c A33B83E1 		orr	r3, r3, r3, lsr #23
  70 0060 0220A0E3 		mov	r2, #2
  71 0064 DF2003E5 		str	r2, [r3, #-223]
  72              	.LBE167:
  73              	.LBE166:
  74              	.LBB168:
  75              	.LBB169:
  76              		.loc 2 287 0
  77 0068 022CA0E3 		mov	r2, #512
  78 006c DF2003E5 		str	r2, [r3, #-223]
  79              	.LBE169:
  80              	.LBE168:
  81              	.LBB170:
  82              	.LBB171:
  83              		.loc 2 230 0
  84 0070 E75003E5 		str	r5, [r3, #-231]
  85              		.loc 2 231 0
  86 0074 E35003E5 		str	r5, [r3, #-227]
  87              	.LBE171:
  88              	.LBE170:
  89              	.LBB172:
  90              	.LBB173:
  91              		.loc 2 217 0
  92 0078 EF5003E5 		str	r5, [r3, #-239]
  93              		.loc 2 218 0
  94 007c EB5003E5 		str	r5, [r3, #-235]
  95              	.LBE173:
  96              	.LBE172:
  97              	.LBB174:
  98              	.LBB175:
  99              		.loc 2 256 0
 100 0080 F75003E5 		str	r5, [r3, #-247]
 101              		.loc 2 257 0
 102 0084 F35003E5 		str	r5, [r3, #-243]
 103              	.LBE175:
 104              	.LBE174:
 105              	.LBB176:
 106              	.LBB177:
 107              		.loc 2 243 0
 108 0088 FF5003E5 		str	r5, [r3, #-255]
 109              		.loc 2 244 0
 110 008c FB5003E5 		str	r5, [r3, #-251]
 111              	.LBE177:
 112              	.LBE176:
 113              	.LBB178:
 114              	.LBB179:
 115              		.loc 2 277 0
 116 0090 0120A0E3 		mov	r2, #1
 117 0094 DF2003E5 		str	r2, [r3, #-223]
 118              	.LBE179:
 119              	.LBE178:
 120              	.LBB180:
 121              	.LBB181:
 122              		.loc 2 267 0
 123 0098 FF2082E2 		add	r2, r2, #255
 124 009c DF2003E5 		str	r2, [r3, #-223]
 125              	.LBE181:
 126              	.LBE180:
 127              	.LBE165:
 128              	.LBE164:
 129              	.LBB182:
 130              	.LBB183:
 298:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 299:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 300:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 301:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsTxEmpty
 302:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if the current transfer descriptor has been sent
 303:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 304:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsTxEmpty ( // \return return 1 if transfer is complete
 305:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 306:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 307:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_TCR);
 308:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 309:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 310:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 311:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsNextTxEmpty
 312:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if the next transfer descriptor has been moved to the current td
 313:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 314:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsNextTxEmpty ( // \return return 1 if transfer is complete
 315:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 316:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 317:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_TNCR);
 318:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 319:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 320:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 321:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsRxEmpty
 322:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if the current transfer descriptor has been filled
 323:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 324:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsRxEmpty ( // \return return 1 if transfer is complete
 325:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 326:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 327:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_RCR);
 328:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 329:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 330:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 331:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsNextRxEmpty
 332:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if the next transfer descriptor has been moved to the current td
 333:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 334:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsNextRxEmpty ( // \return return 1 if transfer is complete
 335:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 336:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 337:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_RNCR);
 338:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 339:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 340:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 341:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_Open
 342:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Open PDC: disable TX and RX reset transfer descriptors, re-enable RX and TX
 343:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 344:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_Open (
 345:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC)       // \arg pointer to a PDC controller
 346:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 347:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable the RX and TX PDC transfer requests
 348:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableRx(pPDC);
 349:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableTx(pPDC);
 350:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 351:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Reset all Counter register Next buffer first
 352:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextTx(pPDC, (char *) 0, 0);
 353:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextRx(pPDC, (char *) 0, 0);
 354:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetTx(pPDC, (char *) 0, 0);
 355:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetRx(pPDC, (char *) 0, 0);
 356:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 357:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Enable the RX and TX PDC transfer requests
 358:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_EnableRx(pPDC);
 359:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_EnableTx(pPDC);
 360:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 361:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 362:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 363:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_Close
 364:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Close PDC: disable TX and RX reset transfer descriptors
 365:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 366:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_Close (
 367:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC)       // \arg pointer to a PDC controller
 368:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 369:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable the RX and TX PDC transfer requests
 370:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableRx(pPDC);
 371:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableTx(pPDC);
 372:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 373:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Reset all Counter register Next buffer first
 374:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextTx(pPDC, (char *) 0, 0);
 375:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextRx(pPDC, (char *) 0, 0);
 376:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetTx(pPDC, (char *) 0, 0);
 377:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetRx(pPDC, (char *) 0, 0);
 378:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 379:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 380:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 381:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 382:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SendFrame
 383:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Close PDC: disable TX and RX reset transfer descriptors
 384:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 385:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PDC_SendFrame(
 386:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,
 387:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pBuffer,
 388:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
 389:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
 390:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
 391:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 392:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	if (AT91F_PDC_IsTxEmpty(pPDC)) {
 393:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* Buffer and next buffer can be initialized
 394:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetTx(pPDC, pBuffer, szBuffer);
 395:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextTx(pPDC, pNextBuffer, szNextBuffer);
 396:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 2;
 397:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 398:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	else if (AT91F_PDC_IsNextTxEmpty(pPDC)) {
 399:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* Only one buffer can be initialized
 400:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextTx(pPDC, pBuffer, szBuffer);
 401:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 1;
 402:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 403:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	else {
 404:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* All buffer are in use...
 405:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 0;
 406:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 407:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 408:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 409:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 410:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_ReceiveFrame
 411:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Close PDC: disable TX and RX reset transfer descriptors
 412:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 413:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PDC_ReceiveFrame (
 414:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,
 415:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pBuffer,
 416:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
 417:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
 418:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
 419:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 420:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	if (AT91F_PDC_IsRxEmpty(pPDC)) {
 421:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* Buffer and next buffer can be initialized
 422:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetRx(pPDC, pBuffer, szBuffer);
 423:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextRx(pPDC, pNextBuffer, szNextBuffer);
 424:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 2;
 425:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 426:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	else if (AT91F_PDC_IsNextRxEmpty(pPDC)) {
 427:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* Only one buffer can be initialized
 428:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextRx(pPDC, pBuffer, szBuffer);
 429:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 1;
 430:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 431:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	else {
 432:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* All buffer are in use...
 433:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 0;
 434:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 435:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 436:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
 437:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR DBGU
 438:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
 439:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 440:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_InterruptEnable
 441:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable DBGU Interrupt
 442:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 443:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_DBGU_InterruptEnable(
 444:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu,   // \arg  pointer to a DBGU controller
 445:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  dbgu interrupt to be enabled
 446:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 447:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pDbgu->DBGU_IER = flag;
 448:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 449:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 450:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 451:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_InterruptDisable
 452:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable DBGU Interrupt
 453:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 454:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_DBGU_InterruptDisable(
 455:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu,   // \arg  pointer to a DBGU controller
 456:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  dbgu interrupt to be disabled
 457:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 458:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pDbgu->DBGU_IDR = flag;
 459:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 460:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 461:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 462:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_GetInterruptMaskStatus
 463:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return DBGU Interrupt Mask Status
 464:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 465:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_DBGU_GetInterruptMaskStatus( // \return DBGU Interrupt Mask Status
 466:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu) // \arg  pointer to a DBGU controller
 467:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 468:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pDbgu->DBGU_IMR;
 469:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 470:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 471:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 472:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_IsInterruptMasked
 473:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if DBGU Interrupt is Masked
 474:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 475:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_DBGU_IsInterruptMasked(
 476:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu,   // \arg  pointer to a DBGU controller
 477:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 478:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 479:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_DBGU_GetInterruptMaskStatus(pDbgu) & flag);
 480:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 481:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 482:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
 483:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PIO
 484:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
 485:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 486:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgPeriph
 487:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable pins to be drived by peripheral
 488:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 489:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgPeriph(
 490:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 491:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int periphAEnable,  // \arg PERIPH A to enable
 492:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int periphBEnable)  // \arg PERIPH B to enable
 493:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 494:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 495:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_ASR = periphAEnable;
 131              		.loc 2 495 0
 132 00a0 0B3CE0E3 		mvn	r3, #2816
 133 00a4 A02042E2 		sub	r2, r2, #160
 134 00a8 8F2003E5 		str	r2, [r3, #-143]
 496:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_BSR = periphBEnable;
 135              		.loc 2 496 0
 136 00ac 8B5003E5 		str	r5, [r3, #-139]
 497:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_PDR = (periphAEnable | periphBEnable); // Set in Periph mode
 137              		.loc 2 497 0
 138 00b0 FB2003E5 		str	r2, [r3, #-251]
 139              	.LBE183:
 140              	.LBE182:
 141              	.LBB184:
 142              	.LBB185:
 498:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 499:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 500:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 501:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgOutput
 502:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PIO in output mode
 503:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 504:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgOutput(
 505:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 506:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int pioEnable)      // \arg PIO to be enabled
 507:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 508:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_PER = pioEnable; // Set in PIO mode
 509:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_OER = pioEnable; // Configure in Output
 510:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 511:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 512:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 513:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgInput
 514:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PIO in input mode
 515:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 516:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgInput(
 517:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 518:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int inputEnable)      // \arg PIO to be enabled
 519:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 520:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Disable output
 521:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_ODR  = inputEnable;
 522:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_PER  = inputEnable;
 523:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 524:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 525:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 526:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgOpendrain
 527:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure PIO in open drain
 528:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 529:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgOpendrain(
 530:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 531:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int multiDrvEnable) // \arg pio to be configured in open drain
 532:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 533:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Configure the multi-drive option
 534:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_MDDR = ~multiDrvEnable;
 535:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_MDER = multiDrvEnable;
 536:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 537:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 538:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 539:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgPullup
 540:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable pullup on PIO
 541:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 542:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgPullup(
 543:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 544:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int pullupEnable)   // \arg enable pullup on PIO
 545:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 546:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		// Connect or not Pullup
 547:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_PPUDR = ~pullupEnable;
 548:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_PPUER = pullupEnable;
 549:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 550:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 551:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 552:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgDirectDrive
 553:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable direct drive on PIO
 554:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 555:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgDirectDrive(
 556:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 557:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int directDrive)    // \arg PIO to be configured with direct drive
 558:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 559:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 560:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Configure the Direct Drive
 561:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_OWDR  = ~directDrive;
 562:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_OWER  = directDrive;
 563:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 564:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 565:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 566:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgInputFilter
 567:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable input filter on input PIO
 568:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 569:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgInputFilter(
 570:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 571:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int inputFilter)    // \arg PIO to be configured with input filter
 572:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 573:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 574:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Configure the Direct Drive
 575:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_IFDR  = ~inputFilter;
 576:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_IFER  = inputFilter;
 577:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 578:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 579:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 580:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInput
 581:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO input value
 582:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 583:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInput( // \return PIO input
 584:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 585:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 586:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPio->PIO_PDSR;
 587:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 588:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 589:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 590:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInputSet
 591:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO is input flag is active
 592:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 593:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInputSet(
 594:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 595:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  flag to be tested
 596:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 597:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_PIO_GetInput(pPio) & flag);
 598:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 599:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 600:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 601:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 602:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_SetOutput
 603:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set to 1 output PIO
 604:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 605:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_SetOutput(
 606:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 607:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  output to be set
 608:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 609:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_SODR = flag;
 610:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 611:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 612:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 613:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_ClearOutput
 614:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set to 0 output PIO
 615:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 616:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_ClearOutput(
 617:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 618:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  output to be cleared
 619:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 620:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_CODR = flag;
 621:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 622:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 623:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 624:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_ForceOutput
 625:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Force output when Direct drive option is enabled
 626:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 627:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_ForceOutput(
 628:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 629:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  output to be forced
 630:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 631:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_ODSR = flag;
 632:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 633:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 634:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 635:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_Enable
 636:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PIO
 637:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 638:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_Enable(
 639:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 640:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be enabled
 641:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 642:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_PER = flag;
 643:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 644:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 645:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 646:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_Disable
 647:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable PIO
 648:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 649:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_Disable(
 650:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 651:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be disabled
 652:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 653:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_PDR = flag;
 654:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 655:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 656:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 657:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetStatus
 658:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Status
 659:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 660:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetStatus( // \return PIO Status
 661:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 662:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 663:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_PSR;
 664:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 665:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 666:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 667:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsSet
 668:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO is Set
 669:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 670:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsSet(
 671:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 672:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 673:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 674:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetStatus(pPio) & flag);
 675:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 676:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 677:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 678:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputEnable
 679:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Output Enable PIO
 680:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 681:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputEnable(
 682:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 683:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output to be enabled
 684:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 685:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_OER = flag;
 686:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 687:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 688:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 689:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputDisable
 690:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Output Enable PIO
 691:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 692:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputDisable(
 693:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 694:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output to be disabled
 695:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 696:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_ODR = flag;
 697:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 698:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 699:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 700:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetOutputStatus
 701:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Output Status
 702:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 703:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetOutputStatus( // \return PIO Output Status
 704:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 705:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 706:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_OSR;
 707:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 708:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 709:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 710:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsOuputSet
 711:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Output is Set
 712:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 713:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsOutputSet(
 714:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 715:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 716:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 717:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetOutputStatus(pPio) & flag);
 718:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 719:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 720:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 721:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InputFilterEnable
 722:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Input Filter Enable PIO
 723:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 724:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InputFilterEnable(
 725:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 726:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio input filter to be enabled
 727:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 728:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_IFER = flag;
 729:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 730:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 731:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 732:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InputFilterDisable
 733:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Input Filter Disable PIO
 734:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 735:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InputFilterDisable(
 736:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 737:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio input filter to be disabled
 738:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 739:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_IFDR = flag;
 740:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 741:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 742:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 743:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInputFilterStatus
 744:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Input Filter Status
 745:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 746:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInputFilterStatus( // \return PIO Input Filter Status
 747:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 748:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 749:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_IFSR;
 750:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 751:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 752:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 753:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInputFilterSet
 754:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Input filter is Set
 755:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 756:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInputFilterSet(
 757:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 758:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 759:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 760:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetInputFilterStatus(pPio) & flag);
 761:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 762:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 763:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 764:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetOutputDataStatus
 765:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Output Data Status
 766:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 767:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetOutputDataStatus( // \return PIO Output Data Status
 768:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 769:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 770:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_ODSR;
 771:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 772:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 773:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 774:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InterruptEnable
 775:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PIO Interrupt
 776:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 777:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InterruptEnable(
 778:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 779:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio interrupt to be enabled
 780:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 781:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_IER = flag;
 782:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 783:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 784:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 785:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InterruptDisable
 786:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable PIO Interrupt
 787:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 788:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InterruptDisable(
 789:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 790:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio interrupt to be disabled
 791:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 792:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_IDR = flag;
 793:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 794:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 795:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 796:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInterruptMaskStatus
 797:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Interrupt Mask Status
 798:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 799:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInterruptMaskStatus( // \return PIO Interrupt Mask Status
 800:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 801:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 802:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_IMR;
 803:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 804:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 805:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 806:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInterruptStatus
 807:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Interrupt Status
 808:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 809:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInterruptStatus( // \return PIO Interrupt Status
 810:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 811:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 812:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_ISR;
 813:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 814:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 815:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 816:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInterruptMasked
 817:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Interrupt is Masked
 818:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 819:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInterruptMasked(
 820:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 821:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 822:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 823:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetInterruptMaskStatus(pPio) & flag);
 824:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 825:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 826:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 827:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInterruptSet
 828:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Interrupt is Set
 829:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 830:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInterruptSet(
 831:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 832:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 833:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 834:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetInterruptStatus(pPio) & flag);
 835:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 836:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 837:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 838:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_MultiDriverEnable
 839:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Multi Driver Enable PIO
 840:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 841:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_MultiDriverEnable(
 842:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 843:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be enabled
 844:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 845:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_MDER = flag;
 846:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 847:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 848:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 849:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_MultiDriverDisable
 850:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Multi Driver Disable PIO
 851:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 852:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_MultiDriverDisable(
 853:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 854:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be disabled
 855:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 856:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_MDDR = flag;
 857:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 858:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 859:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 860:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetMultiDriverStatus
 861:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Multi Driver Status
 862:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 863:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetMultiDriverStatus( // \return PIO Multi Driver Status
 864:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 865:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 866:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_MDSR;
 867:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 868:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 869:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 870:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsMultiDriverSet
 871:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO MultiDriver is Set
 872:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 873:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsMultiDriverSet(
 874:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 875:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 876:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 877:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetMultiDriverStatus(pPio) & flag);
 878:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 879:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 880:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 881:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_A_RegisterSelection
 882:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief PIO A Register Selection
 883:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 884:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_A_RegisterSelection(
 885:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 886:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio A register selection
 887:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 888:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_ASR = flag;
 889:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 890:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 891:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 892:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_B_RegisterSelection
 893:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief PIO B Register Selection
 894:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 895:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_B_RegisterSelection(
 896:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 897:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio B register selection
 898:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 899:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_BSR = flag;
 900:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 901:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 902:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 903:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_Get_AB_RegisterStatus
 904:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Interrupt Status
 905:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 906:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_Get_AB_RegisterStatus( // \return PIO AB Register Status
 907:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 908:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 909:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_ABSR;
 910:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 911:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 912:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 913:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsAB_RegisterSet
 914:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO AB Register is Set
 915:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 916:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsAB_RegisterSet(
 917:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 918:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 919:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 920:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_Get_AB_RegisterStatus(pPio) & flag);
 921:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 922:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 923:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 924:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputWriteEnable
 925:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Output Write Enable PIO
 926:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 927:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputWriteEnable(
 928:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 929:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output write to be enabled
 930:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 931:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_OWER = flag;
 932:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 933:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 934:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 935:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputWriteDisable
 936:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Output Write Disable PIO
 937:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 938:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputWriteDisable(
 939:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 940:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output write to be disabled
 941:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 942:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_OWDR = flag;
 943:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 944:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 945:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 946:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetOutputWriteStatus
 947:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Output Write Status
 948:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 949:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetOutputWriteStatus( // \return PIO Output Write Status
 950:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 951:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 952:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_OWSR;
 953:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 954:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 955:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 956:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsOutputWriteSet
 957:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO OutputWrite is Set
 958:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 959:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsOutputWriteSet(
 960:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 961:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 962:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 963:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetOutputWriteStatus(pPio) & flag);
 964:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 965:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 966:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 967:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetCfgPullup
 968:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Configuration Pullup
 969:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 970:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetCfgPullup( // \return PIO Configuration Pullup
 971:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 972:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 973:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_PPUSR;
 974:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 975:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 976:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 977:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsOutputDataStatusSet
 978:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Output Data Status is Set
 979:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 980:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsOutputDataStatusSet(
 981:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 982:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 983:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 984:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetOutputDataStatus(pPio) & flag);
 985:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 986:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 987:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 988:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsCfgPullupStatusSet
 989:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Configuration Pullup Status is Set
 990:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 991:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsCfgPullupStatusSet(
 992:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 993:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 994:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 995:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (~AT91F_PIO_GetCfgPullup(pPio) & flag);
 996:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 997:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 998:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
 999:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PMC
1000:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1001:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1002:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_CfgSysClkEnableReg
1003:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure the System Clock Enable Register of the PMC controller
1004:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1005:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_CfgSysClkEnableReg (
1006:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1007:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1008:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1009:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the SCER register
1010:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_SCER = mode;
1011:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1012:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1013:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1014:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_CfgSysClkDisableReg
1015:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure the System Clock Disable Register of the PMC controller
1016:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1017:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_CfgSysClkDisableReg (
1018:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1019:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1020:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1021:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the SCDR register
1022:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_SCDR = mode;
1023:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1024:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1025:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1026:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetSysClkStatusReg
1027:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the System Clock Status Register of the PMC controller
1028:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1029:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetSysClkStatusReg (
1030:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC // pointer to a CAN controller
1031:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
1032:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1033:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPMC->PMC_SCSR;
1034:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1035:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1036:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1037:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_EnablePeriphClock
1038:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable peripheral clock
1039:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1040:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_EnablePeriphClock (
1041:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1042:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int periphIds)  // \arg IDs of peripherals
1043:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1044:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_PCER = periphIds;
 143              		.loc 2 1044 0
 144 00b4 202042E2 		sub	r2, r2, #32
 145 00b8 023B83E2 		add	r3, r3, #2048
 146 00bc EF2003E5 		str	r2, [r3, #-239]
 147              	.LBE185:
 148              	.LBE184:
 143:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
 144:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			AT91F_PDC_Open(COM0.hPDC);
 145:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			// AT91F_US0_CfgPIO(); //* Define RXD and TXD as peripheral
 146:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			AT91F_PIO_CfgPeriph(AT91C_BASE_PIOA, // PIO controller base address
 147:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 					(((unsigned int) AT91C_PA5_RXD0)
 148:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 							| ((unsigned int) AT91C_PA6_TXD0)), // Peripheral A
 149:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 					0);
 150:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			AT91F_PMC_EnablePeriphClock(AT91C_BASE_PMC, 1 << AT91C_ID_US0); // First, enable the clock of th
 151:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			AT91F_US_Configure(COM0.hPort, MCK, mode, BaudRate, 0); // Usart Configure
 149              		.loc 1 151 0
 150 00c0 044096E5 		ldr	r4, [r6, #4]
 151              	.LBB186:
 152              	.LBB187:
1045:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1046:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1047:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1048:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_DisablePeriphClock
1049:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable peripheral clock
1050:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1051:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_DisablePeriphClock (
1052:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1053:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int periphIds)  // \arg IDs of peripherals
1054:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1055:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_PCDR = periphIds;
1056:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1057:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1058:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1059:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetPeriphClock
1060:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Get peripheral clock status
1061:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1062:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetPeriphClock (
1063:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC) // \arg pointer to PMC controller
1064:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1065:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPMC->PMC_PCSR;
1066:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1067:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1068:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1069:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_CfgMainOscillatorReg
1070:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Cfg the main oscillator
1071:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1072:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_CKGR_CfgMainOscillatorReg (
1073:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
1074:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1075:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1076:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_MOR = mode;
1077:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1078:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1079:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1080:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_GetMainOscillatorReg
1081:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Cfg the main oscillator
1082:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1083:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_CKGR_GetMainOscillatorReg (
1084:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
1085:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1086:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pCKGR->CKGR_MOR;
1087:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1088:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1089:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1090:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_EnableMainOscillator
1091:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable the main oscillator
1092:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1093:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_CKGR_EnableMainOscillator(
1094:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
1095:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1096:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_MOR |= AT91C_CKGR_MOSCEN;
1097:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1098:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1099:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1100:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_DisableMainOscillator
1101:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable the main oscillator
1102:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1103:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_CKGR_DisableMainOscillator (
1104:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
1105:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1106:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_MOR &= ~AT91C_CKGR_MOSCEN;
1107:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1108:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1109:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1110:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_CfgMainOscStartUpTime
1111:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Cfg MOR Register according to the main osc startup time
1112:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1113:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_CKGR_CfgMainOscStartUpTime (
1114:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
1115:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int startup_time,  // \arg main osc startup time in microsecond (us)
1116:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int slowClock)  // \arg slowClock in Hz
1117:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1118:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_MOR &= ~AT91C_CKGR_OSCOUNT;
1119:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_MOR |= ((slowClock * startup_time)/(8*1000000)) << 8;
1120:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1121:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1122:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1123:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_GetMainClockFreqReg
1124:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Cfg the main oscillator
1125:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1126:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_CKGR_GetMainClockFreqReg (
1127:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
1128:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1129:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pCKGR->CKGR_MCFR;
1130:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1131:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1132:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1133:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_GetMainClock
1134:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return Main clock in Hz
1135:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1136:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_CKGR_GetMainClock (
1137:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
1138:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int slowClock)  // \arg slowClock in Hz
1139:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1140:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return ((pCKGR->CKGR_MCFR  & AT91C_CKGR_MAINF) * slowClock) >> 4;
1141:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1142:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1143:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1144:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_CfgMCKReg
1145:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Cfg Master Clock Register
1146:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1147:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_CfgMCKReg (
1148:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1149:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1150:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1151:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_MCKR = mode;
1152:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1153:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1154:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1155:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetMCKReg
1156:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return Master Clock Register
1157:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1158:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetMCKReg(
1159:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC) // \arg pointer to PMC controller
1160:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1161:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPMC->PMC_MCKR;
1162:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1163:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1164:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*------------------------------------------------------------------------------
1165:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetMasterClock
1166:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return master clock in Hz which correponds to processor clock for ARM7
1167:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*------------------------------------------------------------------------------
1168:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetMasterClock (
1169:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1170:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
1171:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int slowClock)  // \arg slowClock in Hz
1172:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1173:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int reg = pPMC->PMC_MCKR;
1174:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int prescaler = (1 << ((reg & AT91C_PMC_PRES) >> 2));
1175:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int pllDivider, pllMultiplier;
1176:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1177:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	switch (reg & AT91C_PMC_CSS) {
1178:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		case AT91C_PMC_CSS_SLOW_CLK: // Slow clock selected
1179:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			return slowClock / prescaler;
1180:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		case AT91C_PMC_CSS_MAIN_CLK: // Main clock is selected
1181:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			return AT91F_CKGR_GetMainClock(pCKGR, slowClock) / prescaler;
1182:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		case AT91C_PMC_CSS_PLL_CLK: // PLLB clock is selected
1183:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			reg = pCKGR->CKGR_PLLR;
1184:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			pllDivider    = (reg  & AT91C_CKGR_DIV);
1185:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			pllMultiplier = ((reg  & AT91C_CKGR_MUL) >> 16) + 1;
1186:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			return AT91F_CKGR_GetMainClock(pCKGR, slowClock) / pllDivider * pllMultiplier / prescaler;
1187:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
1188:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return 0;
1189:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1190:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1191:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1192:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_EnablePCK
1193:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable Programmable Clock x Output
1194:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1195:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_EnablePCK (
1196:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1197:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int pck,  // \arg Programmable Clock x Output
1198:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1199:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1200:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_PCKR[pck] = mode;
1201:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_SCER = (1 << pck) << 8;
1202:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1203:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1204:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1205:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_DisablePCK
1206:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable Programmable Clock x Output
1207:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1208:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_DisablePCK (
1209:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1210:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int pck)  // \arg Programmable Clock x Output
1211:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1212:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_SCDR = (1 << pck) << 8;
1213:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1214:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1215:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1216:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_EnableIt
1217:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PMC interrupt
1218:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1219:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_EnableIt (
1220:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC,     // pointer to a PMC controller
1221:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // IT to be enabled
1222:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1223:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IER register
1224:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_IER = flag;
1225:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1226:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1227:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1228:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_DisableIt
1229:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable PMC interrupt
1230:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1231:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_DisableIt (
1232:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // pointer to a PMC controller
1233:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // IT to be disabled
1234:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1235:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IDR register
1236:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_IDR = flag;
1237:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1238:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1239:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1240:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetStatus
1241:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PMC Interrupt Status
1242:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1243:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetStatus( // \return PMC Interrupt Status
1244:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC) // pointer to a PMC controller
1245:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1246:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPMC->PMC_SR;
1247:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1248:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1249:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1250:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetInterruptMaskStatus
1251:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PMC Interrupt Mask Status
1252:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1253:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetInterruptMaskStatus( // \return PMC Interrupt Mask Status
1254:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC) // pointer to a PMC controller
1255:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1256:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPMC->PMC_IMR;
1257:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1258:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1259:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1260:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_IsInterruptMasked
1261:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PMC Interrupt is Masked
1262:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1263:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_IsInterruptMasked(
1264:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PMC pPMC,   // \arg  pointer to a PMC controller
1265:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
1266:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1267:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_PMC_GetInterruptMaskStatus(pPMC) & flag);
1268:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1269:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1270:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1271:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_IsStatusSet
1272:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PMC Status is Set
1273:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1274:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_IsStatusSet(
1275:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PMC pPMC,   // \arg  pointer to a PMC controller
1276:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
1277:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1278:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_PMC_GetStatus(pPMC) & flag);
1279:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1280:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1281:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** // ----------------------------------------------------------------------------
1282:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //  \fn    AT91F_CKGR_CfgPLLReg
1283:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //  \brief Cfg the PLL Register
1284:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** // ----------------------------------------------------------------------------
1285:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_CKGR_CfgPLLReg (
1286:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
1287:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1288:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1289:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_PLLR = mode;
1290:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1291:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1292:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** // ----------------------------------------------------------------------------
1293:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //  \fn    AT91F_CKGR_GetPLLReg
1294:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //  \brief Get the PLL Register
1295:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** // ----------------------------------------------------------------------------
1296:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_CKGR_GetPLLReg (
1297:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
1298:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1299:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pCKGR->CKGR_PLLR;
1300:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1301:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1302:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1303:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1304:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1305:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR RSTC
1306:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1307:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1308:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_RSTSoftReset
1309:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Start Software Reset
1310:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1311:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RSTSoftReset(
1312:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RSTC pRSTC,
1313:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int reset)
1314:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1315:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRSTC->RSTC_RCR = (0xA5000000 | reset);
1316:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1317:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1318:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1319:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_RSTSetMode
1320:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set Reset Mode
1321:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1322:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RSTSetMode(
1323:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RSTC pRSTC,
1324:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int mode)
1325:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1326:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRSTC->RSTC_RMR = (0xA5000000 | mode);
1327:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1328:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1329:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1330:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_RSTGetMode
1331:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Get Reset Mode
1332:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1333:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RSTGetMode(
1334:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RSTC pRSTC)
1335:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1336:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (pRSTC->RSTC_RMR);
1337:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1338:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1339:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1340:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_RSTGetStatus
1341:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Get Reset Status
1342:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1343:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RSTGetStatus(
1344:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RSTC pRSTC)
1345:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1346:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (pRSTC->RSTC_RSR);
1347:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1348:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1349:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1350:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_RSTIsSoftRstActive
1351:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return !=0 if software reset is still not completed
1352:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1353:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RSTIsSoftRstActive(
1354:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RSTC pRSTC)
1355:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1356:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return ((pRSTC->RSTC_RSR) & AT91C_RSTC_SRCMP);
1357:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1358:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1359:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR RTTC
1360:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1361:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1362:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_SetRTT_TimeBase()
1363:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Set the RTT prescaler according to the TimeBase in ms
1364:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1365:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RTTSetTimeBase(
1366:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC,
1367:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int ms)
1368:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1369:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	if (ms > 2000)
1370:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 1;   // AT91C_TIME_OUT_OF_RANGE
1371:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR &= ~0xFFFF;
1372:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR |= (((ms << 15) /1000) & 0xFFFF);
1373:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return 0;
1374:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1375:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1376:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1377:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTTSetPrescaler()
1378:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Set the new prescaler value
1379:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1380:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RTTSetPrescaler(
1381:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC,
1382:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int rtpres)
1383:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1384:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR &= ~0xFFFF;
1385:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR |= (rtpres & 0xFFFF);
1386:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (pRTTC->RTTC_RTMR);
1387:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1388:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1389:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1390:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTTRestart()
1391:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Restart the RTT prescaler
1392:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1393:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTRestart(
1394:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1395:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1396:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR |= AT91C_RTTC_RTTRST;
1397:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1398:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1399:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1400:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1401:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_SetAlarmINT()
1402:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Enable RTT Alarm Interrupt
1403:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1404:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTSetAlarmINT(
1405:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1406:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1407:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR |= AT91C_RTTC_ALMIEN;
1408:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1409:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1410:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1411:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_ClearAlarmINT()
1412:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Disable RTT Alarm Interrupt
1413:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1414:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTClearAlarmINT(
1415:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1416:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1417:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR &= ~AT91C_RTTC_ALMIEN;
1418:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1419:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1420:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1421:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_SetRttIncINT()
1422:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Enable RTT INC Interrupt
1423:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1424:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTSetRttIncINT(
1425:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1426:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1427:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR |= AT91C_RTTC_RTTINCIEN;
1428:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1429:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1430:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1431:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_ClearRttIncINT()
1432:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Disable RTT INC Interrupt
1433:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1434:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTClearRttIncINT(
1435:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1436:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1437:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR &= ~AT91C_RTTC_RTTINCIEN;
1438:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1439:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1440:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1441:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_SetAlarmValue()
1442:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Set RTT Alarm Value
1443:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1444:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTSetAlarmValue(
1445:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC, unsigned int alarm)
1446:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1447:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTAR = alarm;
1448:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1449:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1450:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1451:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_GetAlarmValue()
1452:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Get RTT Alarm Value
1453:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1454:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RTTGetAlarmValue(
1455:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1456:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1457:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pRTTC->RTTC_RTAR);
1458:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1459:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1460:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1461:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTTGetStatus()
1462:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Read the RTT status
1463:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1464:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RTTGetStatus(
1465:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1466:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1467:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pRTTC->RTTC_RTSR);
1468:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1469:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1470:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1471:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_ReadValue()
1472:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Read the RTT value
1473:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1474:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RTTReadValue(
1475:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1476:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1477:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         register volatile unsigned int val1,val2;
1478:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	do
1479:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	{
1480:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		val1 = pRTTC->RTTC_RTVR;
1481:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		val2 = pRTTC->RTTC_RTVR;
1482:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
1483:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	while(val1 != val2);
1484:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(val1);
1485:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1486:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1487:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PITC
1488:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1489:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1490:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITInit
1491:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief System timer init : period in �second, system clock freq in MHz
1492:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1493:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PITInit(
1494:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC,
1495:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int period,
1496:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int pit_frequency)
1497:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1498:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPITC->PITC_PIMR = period? (period * pit_frequency + 8) >> 4 : 0; // +8 to avoid %10 and /10
1499:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPITC->PITC_PIMR |= AT91C_PITC_PITEN;
1500:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1501:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1502:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1503:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITSetPIV
1504:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the PIT Periodic Interval Value
1505:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1506:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PITSetPIV(
1507:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC,
1508:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int piv)
1509:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1510:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPITC->PITC_PIMR = piv | (pPITC->PITC_PIMR & (AT91C_PITC_PITEN | AT91C_PITC_PITIEN));
1511:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1512:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1513:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1514:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITEnableInt
1515:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PIT periodic interrupt
1516:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1517:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PITEnableInt(
1518:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1519:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1520:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPITC->PITC_PIMR |= AT91C_PITC_PITIEN;
1521:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1522:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1523:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1524:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITDisableInt
1525:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable PIT periodic interrupt
1526:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1527:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PITDisableInt(
1528:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1529:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1530:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPITC->PITC_PIMR &= ~AT91C_PITC_PITIEN;
1531:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1532:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1533:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1534:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITGetMode
1535:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Read PIT mode register
1536:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1537:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PITGetMode(
1538:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1539:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1540:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pPITC->PITC_PIMR);
1541:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1542:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1543:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1544:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITGetStatus
1545:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Read PIT status register
1546:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1547:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PITGetStatus(
1548:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1549:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1550:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pPITC->PITC_PISR);
1551:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1552:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1553:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1554:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITGetPIIR
1555:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Read PIT CPIV and PICNT without ressetting the counters
1556:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1557:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PITGetPIIR(
1558:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1559:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1560:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pPITC->PITC_PIIR);
1561:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1562:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1563:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1564:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITGetPIVR
1565:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Read System timer CPIV and PICNT without ressetting the counters
1566:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1567:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PITGetPIVR(
1568:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1569:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1570:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pPITC->PITC_PIVR);
1571:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1572:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1573:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR WDTC
1574:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1575:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1576:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_WDTSetMode
1577:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set Watchdog Mode Register
1578:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1579:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_WDTSetMode(
1580:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_WDTC pWDTC,
1581:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int Mode)
1582:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1583:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pWDTC->WDTC_WDMR = Mode;
1584:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1585:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1586:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1587:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_WDTRestart
1588:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Restart Watchdog
1589:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1590:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_WDTRestart(
1591:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_WDTC pWDTC)
1592:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1593:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pWDTC->WDTC_WDCR = 0xA5000001;
1594:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1595:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1596:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1597:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_WDTSGettatus
1598:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Get Watchdog Status
1599:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1600:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_WDTSGettatus(
1601:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_WDTC pWDTC)
1602:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1603:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pWDTC->WDTC_WDSR & 0x3);
1604:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1605:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1606:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1607:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_WDTGetPeriod
1608:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Translate ms into Watchdog Compatible value
1609:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1610:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_WDTGetPeriod(unsigned int ms)
1611:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1612:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	if ((ms < 4) || (ms > 16000))
1613:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 0;
1614:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return((ms << 8) / 1000);
1615:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1616:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1617:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR VREG
1618:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1619:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1620:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_VREG_Enable_LowPowerMode
1621:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable VREG Low Power Mode
1622:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1623:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_VREG_Enable_LowPowerMode(
1624:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_VREG pVREG)
1625:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1626:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pVREG->VREG_MR |= AT91C_VREG_PSTDBY;
1627:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1628:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1629:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1630:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_VREG_Disable_LowPowerMode
1631:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable VREG Low Power Mode
1632:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1633:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_VREG_Disable_LowPowerMode(
1634:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_VREG pVREG)
1635:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1636:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pVREG->VREG_MR &= ~AT91C_VREG_PSTDBY;
1637:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }/* *****************************************************************************
1638:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR MC
1639:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1640:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1641:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_MC_CORRECT_KEY  ((unsigned int) 0x5A << 24) // (MC) Correct Protect Key
1642:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1643:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1644:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_Remap
1645:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Make Remap
1646:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1647:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_MC_Remap (void)     //
1648:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1649:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     AT91PS_MC pMC = (AT91PS_MC) AT91C_BASE_MC;
1650:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1651:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pMC->MC_RCR = AT91C_MC_RCB;
1652:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1653:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1654:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1655:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_CfgModeReg
1656:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure the EFC Mode Register of the MC controller
1657:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1658:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_MC_EFC_CfgModeReg (
1659:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_MC pMC, // pointer to a MC controller
1660:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)        // mode register
1661:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1662:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Write to the FMR register
1663:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pMC->MC_FMR = mode;
1664:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1665:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1666:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1667:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_GetModeReg
1668:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return MC EFC Mode Regsiter
1669:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1670:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_MC_EFC_GetModeReg(
1671:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_MC pMC) // pointer to a MC controller
1672:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1673:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pMC->MC_FMR;
1674:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1675:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1676:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1677:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_ComputeFMCN
1678:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return MC EFC Mode Regsiter
1679:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1680:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_MC_EFC_ComputeFMCN(
1681:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	int master_clock) // master clock in Hz
1682:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1683:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (master_clock/1000000 +2);
1684:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1685:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1686:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1687:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_PerformCmd
1688:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Perform EFC Command
1689:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1690:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_MC_EFC_PerformCmd (
1691:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_MC pMC, // pointer to a MC controller
1692:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     unsigned int transfer_cmd)
1693:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1694:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pMC->MC_FCR = transfer_cmd;
1695:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1696:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1697:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1698:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_GetStatus
1699:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return MC EFC Status
1700:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1701:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_MC_EFC_GetStatus(
1702:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_MC pMC) // pointer to a MC controller
1703:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1704:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pMC->MC_FSR;
1705:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1706:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1707:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1708:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_IsInterruptMasked
1709:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if EFC MC Interrupt is Masked
1710:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1711:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_MC_EFC_IsInterruptMasked(
1712:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_MC pMC,   // \arg  pointer to a MC controller
1713:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
1714:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1715:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_MC_EFC_GetModeReg(pMC) & flag);
1716:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1717:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1718:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1719:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_IsInterruptSet
1720:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if EFC MC Interrupt is Set
1721:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1722:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_MC_EFC_IsInterruptSet(
1723:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_MC pMC,   // \arg  pointer to a MC controller
1724:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
1725:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1726:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_MC_EFC_GetStatus(pMC) & flag);
1727:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1728:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1729:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1730:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR SPI
1731:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1732:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1733:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_CfgCs
1734:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure SPI chip select register
1735:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1736:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_CfgCs (
1737:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI,     // pointer to a SPI controller
1738:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	int cs,     // SPI cs number (0 to 3)
1739:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****  	int val)   //  chip select register
1740:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1741:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the CSR register
1742:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	*(pSPI->SPI_CSR + cs) = val;
1743:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1744:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1745:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1746:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_EnableIt
1747:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable SPI interrupt
1748:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1749:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_EnableIt (
1750:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI,     // pointer to a SPI controller
1751:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // IT to be enabled
1752:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1753:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IER register
1754:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_IER = flag;
1755:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1756:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1757:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1758:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_DisableIt
1759:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable SPI interrupt
1760:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1761:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_DisableIt (
1762:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI, // pointer to a SPI controller
1763:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // IT to be disabled
1764:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1765:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IDR register
1766:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_IDR = flag;
1767:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1768:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1769:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1770:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_Reset
1771:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Reset the SPI controller
1772:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1773:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_Reset (
1774:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI // pointer to a SPI controller
1775:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
1776:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1777:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the CR register
1778:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_CR = AT91C_SPI_SWRST;
1779:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1780:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1781:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1782:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_Enable
1783:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable the SPI controller
1784:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1785:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_Enable (
1786:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI // pointer to a SPI controller
1787:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
1788:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1789:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the CR register
1790:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_CR = AT91C_SPI_SPIEN;
1791:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1792:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1793:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1794:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_Disable
1795:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable the SPI controller
1796:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1797:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_Disable (
1798:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI // pointer to a SPI controller
1799:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
1800:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1801:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the CR register
1802:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_CR = AT91C_SPI_SPIDIS;
1803:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1804:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1805:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1806:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_CfgMode
1807:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable the SPI controller
1808:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1809:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_CfgMode (
1810:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI, // pointer to a SPI controller
1811:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	int mode)        // mode register
1812:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1813:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the MR register
1814:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_MR = mode;
1815:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1816:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1817:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1818:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_CfgPCS
1819:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Switch to the correct PCS of SPI Mode Register : Fixed Peripheral Selected
1820:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1821:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_CfgPCS (
1822:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI, // pointer to a SPI controller
1823:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char PCS_Device) // PCS of the Device
1824:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1825:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****  	//* Write to the MR register
1826:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_MR &= 0xFFF0FFFF;
1827:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_MR |= ( (PCS_Device<<16) & AT91C_SPI_PCS );
1828:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1829:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1830:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1831:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_ReceiveFrame
1832:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return 2 if PDC has been initialized with Buffer and Next Buffer, 1 if PDC has been init
1833:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1834:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_SPI_ReceiveFrame (
1835:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI,
1836:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pBuffer,
1837:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
1838:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
1839:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
1840:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1841:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return AT91F_PDC_ReceiveFrame(
1842:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		(AT91PS_PDC) &(pSPI->SPI_RPR),
1843:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pBuffer,
1844:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szBuffer,
1845:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pNextBuffer,
1846:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szNextBuffer);
1847:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1848:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1849:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1850:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_SendFrame
1851:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return 2 if PDC has been initialized with Buffer and Next Buffer, 1 if PDC has been init
1852:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1853:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_SPI_SendFrame(
1854:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI,
1855:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pBuffer,
1856:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
1857:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
1858:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
1859:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1860:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return AT91F_PDC_SendFrame(
1861:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		(AT91PS_PDC) &(pSPI->SPI_RPR),
1862:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pBuffer,
1863:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szBuffer,
1864:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pNextBuffer,
1865:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szNextBuffer);
1866:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1867:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1868:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1869:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_Close
1870:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Close SPI: disable IT disable transfert, close PDC
1871:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1872:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_Close (
1873:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI)     // \arg pointer to a SPI controller
1874:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1875:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Reset all the Chip Select register
1876:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSPI->SPI_CSR[0] = 0 ;
1877:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSPI->SPI_CSR[1] = 0 ;
1878:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSPI->SPI_CSR[2] = 0 ;
1879:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSPI->SPI_CSR[3] = 0 ;
1880:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1881:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Reset the SPI mode
1882:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSPI->SPI_MR = 0  ;
1883:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1884:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable all interrupts
1885:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSPI->SPI_IDR = 0xFFFFFFFF ;
1886:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1887:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Abort the Peripheral Data Transfers
1888:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     AT91F_PDC_Close((AT91PS_PDC) &(pSPI->SPI_RPR));
1889:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1890:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable receiver and transmitter and stop any activity immediately
1891:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSPI->SPI_CR = AT91C_SPI_SPIDIS;
1892:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1893:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1894:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1895:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_PutChar
1896:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Send a character,does not check if ready to send
1897:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1898:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_PutChar (
1899:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI,
1900:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int character,
1901:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****              unsigned int cs_number )
1902:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1903:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     unsigned int value_for_cs;
1904:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     value_for_cs = (~(1 << cs_number)) & 0xF;  //Place a zero among a 4 ONEs number
1905:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSPI->SPI_TDR = (character & 0xFFFF) | (value_for_cs << 16);
1906:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1907:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1908:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1909:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_GetChar
1910:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Receive a character,does not check if a character is available
1911:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1912:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_SPI_GetChar (
1913:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	const AT91PS_SPI pSPI)
1914:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1915:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     return((pSPI->SPI_RDR) & 0xFFFF);
1916:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1917:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1918:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1919:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_GetInterruptMaskStatus
1920:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return SPI Interrupt Mask Status
1921:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1922:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_SPI_GetInterruptMaskStatus( // \return SPI Interrupt Mask Status
1923:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_SPI pSpi) // \arg  pointer to a SPI controller
1924:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1925:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pSpi->SPI_IMR;
1926:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1927:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1928:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1929:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_IsInterruptMasked
1930:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if SPI Interrupt is Masked
1931:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1932:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_SPI_IsInterruptMasked(
1933:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_SPI pSpi,   // \arg  pointer to a SPI controller
1934:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
1935:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1936:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_SPI_GetInterruptMaskStatus(pSpi) & flag);
1937:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1938:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1939:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1940:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR ADC
1941:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1942:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1943:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_EnableIt
1944:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable ADC interrupt
1945:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1946:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_ADC_EnableIt (
1947:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC,     // pointer to a ADC controller
1948:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // IT to be enabled
1949:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1950:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IER register
1951:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pADC->ADC_IER = flag;
1952:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1953:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1954:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1955:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_DisableIt
1956:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable ADC interrupt
1957:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1958:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_ADC_DisableIt (
1959:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC, // pointer to a ADC controller
1960:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // IT to be disabled
1961:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1962:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IDR register
1963:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pADC->ADC_IDR = flag;
1964:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1965:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1966:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1967:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetStatus
1968:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return ADC Interrupt Status
1969:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1970:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetStatus( // \return ADC Interrupt Status
1971:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC) // pointer to a ADC controller
1972:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1973:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_SR;
1974:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1975:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1976:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1977:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetInterruptMaskStatus
1978:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return ADC Interrupt Mask Status
1979:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1980:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetInterruptMaskStatus( // \return ADC Interrupt Mask Status
1981:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC) // pointer to a ADC controller
1982:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1983:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_IMR;
1984:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1985:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1986:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1987:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_IsInterruptMasked
1988:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if ADC Interrupt is Masked
1989:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1990:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_IsInterruptMasked(
1991:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_ADC pADC,   // \arg  pointer to a ADC controller
1992:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
1993:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1994:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_ADC_GetInterruptMaskStatus(pADC) & flag);
1995:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1996:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1997:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1998:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_IsStatusSet
1999:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if ADC Status is Set
2000:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2001:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_IsStatusSet(
2002:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_ADC pADC,   // \arg  pointer to a ADC controller
2003:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
2004:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2005:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_ADC_GetStatus(pADC) & flag);
2006:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2007:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2008:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2009:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_CfgModeReg
2010:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure the Mode Register of the ADC controller
2011:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2012:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_ADC_CfgModeReg (
2013:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC, // pointer to a ADC controller
2014:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)        // mode register
2015:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2016:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the MR register
2017:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pADC->ADC_MR = mode;
2018:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2019:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2020:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2021:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetModeReg
2022:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Mode Register of the ADC controller value
2023:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2024:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetModeReg (
2025:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2026:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2027:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2028:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_MR;
2029:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2030:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2031:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2032:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_CfgTimings
2033:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure the different necessary timings of the ADC controller
2034:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2035:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_ADC_CfgTimings (
2036:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC, // pointer to a ADC controller
2037:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mck_clock, // in MHz
2038:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int adc_clock, // in MHz
2039:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int startup_time, // in us
2040:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int sample_and_hold_time)	// in ns
2041:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2042:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int prescal,startup,shtim;
2043:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2044:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	prescal = mck_clock/(2*adc_clock) - 1;
2045:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	startup = adc_clock*startup_time/8 - 1;
2046:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	shtim = adc_clock*sample_and_hold_time/1000 - 1;
2047:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2048:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the MR register
2049:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pADC->ADC_MR = ( (prescal<<8) & AT91C_ADC_PRESCAL) | ( (startup<<16) & AT91C_ADC_STARTUP) | ( (sht
2050:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2051:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2052:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2053:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_EnableChannel
2054:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return ADC Timer Register Value
2055:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2056:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_ADC_EnableChannel (
2057:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC, // pointer to a ADC controller
2058:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int channel)        // mode register
2059:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2060:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the CHER register
2061:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pADC->ADC_CHER = channel;
2062:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2063:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2064:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2065:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_DisableChannel
2066:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return ADC Timer Register Value
2067:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2068:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_ADC_DisableChannel (
2069:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC, // pointer to a ADC controller
2070:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int channel)        // mode register
2071:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2072:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the CHDR register
2073:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pADC->ADC_CHDR = channel;
2074:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2075:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2076:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2077:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetChannelStatus
2078:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return ADC Timer Register Value
2079:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2080:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetChannelStatus (
2081:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2082:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2083:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2084:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CHSR;
2085:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2086:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2087:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2088:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_StartConversion
2089:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Software request for a analog to digital conversion
2090:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2091:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_ADC_StartConversion (
2092:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2093:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2094:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2095:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pADC->ADC_CR = AT91C_ADC_START;
2096:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2097:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2098:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2099:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_SoftReset
2100:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Software reset
2101:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2102:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_ADC_SoftReset (
2103:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2104:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2105:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2106:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pADC->ADC_CR = AT91C_ADC_SWRST;
2107:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2108:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2109:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2110:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetLastConvertedData
2111:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Last Converted Data
2112:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2113:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetLastConvertedData (
2114:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2115:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2116:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2117:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_LCDR;
2118:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2119:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2120:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2121:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetConvertedDataCH0
2122:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Channel 0 Converted Data
2123:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2124:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetConvertedDataCH0 (
2125:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2126:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2127:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2128:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CDR0;
2129:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2130:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2131:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2132:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetConvertedDataCH1
2133:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Channel 1 Converted Data
2134:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2135:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetConvertedDataCH1 (
2136:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2137:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2138:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2139:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CDR1;
2140:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2141:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2142:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2143:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetConvertedDataCH2
2144:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Channel 2 Converted Data
2145:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2146:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetConvertedDataCH2 (
2147:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2148:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2149:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2150:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CDR2;
2151:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2152:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2153:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2154:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetConvertedDataCH3
2155:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Channel 3 Converted Data
2156:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2157:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetConvertedDataCH3 (
2158:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2159:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2160:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2161:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CDR3;
2162:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2163:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2164:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2165:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetConvertedDataCH4
2166:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Channel 4 Converted Data
2167:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2168:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetConvertedDataCH4 (
2169:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2170:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2171:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2172:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CDR4;
2173:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2174:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2175:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2176:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetConvertedDataCH5
2177:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Channel 5 Converted Data
2178:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2179:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetConvertedDataCH5 (
2180:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2181:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2182:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2183:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CDR5;
2184:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2185:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2186:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2187:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetConvertedDataCH6
2188:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Channel 6 Converted Data
2189:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2190:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetConvertedDataCH6 (
2191:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2192:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2193:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2194:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CDR6;
2195:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2196:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2197:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2198:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetConvertedDataCH7
2199:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Channel 7 Converted Data
2200:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2201:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetConvertedDataCH7 (
2202:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2203:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2204:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2205:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CDR7;
2206:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2207:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2208:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
2209:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR SSC
2210:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
2211:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Define the standard I2S mode configuration
2212:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2213:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Configuration to set in the SSC Transmit Clock Mode Register
2214:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Parameters :  nb_bit_by_slot : 8, 16 or 32 bits
2215:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* 			  nb_slot_by_frame : number of channels
2216:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_I2S_ASY_MASTER_TX_SETTING(nb_bit_by_slot, nb_slot_by_frame)( +\
2217:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 									   AT91C_SSC_CKS_DIV   +\
2218:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             		   AT91C_SSC_CKO_CONTINOUS      +\
2219:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             		   AT91C_SSC_CKG_NONE    +\
2220:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                                        AT91C_SSC_START_FALL_RF +\
2221:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                            			   AT91C_SSC_STTOUT  +\
2222:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             		   ((1<<16) & AT91C_SSC_STTDLY) +\
2223:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             		   ((((nb_bit_by_slot*nb_slot_by_frame)/2)-1) <<24))
2224:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2225:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2226:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Configuration to set in the SSC Transmit Frame Mode Register
2227:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Parameters : nb_bit_by_slot : 8, 16 or 32 bits
2228:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* 			 nb_slot_by_frame : number of channels
2229:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_I2S_ASY_TX_FRAME_SETTING(nb_bit_by_slot, nb_slot_by_frame)( +\
2230:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 									(nb_bit_by_slot-1)  +\
2231:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             		AT91C_SSC_MSBF   +\
2232:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             		(((nb_slot_by_frame-1)<<8) & AT91C_SSC_DATNB)  +\
2233:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             		(((nb_bit_by_slot-1)<<16) & AT91C_SSC_FSLEN) +\
2234:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             		AT91C_SSC_FSOS_NEGATIVE)
2235:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2236:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2237:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2238:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_SetBaudrate
2239:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the baudrate according to the CPU clock
2240:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2241:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SSC_SetBaudrate (
2242:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_SSC pSSC,        // \arg pointer to a SSC controller
2243:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int mainClock, // \arg peripheral clock
2244:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int speed)     // \arg SSC baudrate
2245:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2246:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int baud_value;
2247:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         //* Define the baud rate divisor register
2248:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         if (speed == 0)
2249:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****            baud_value = 0;
2250:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         else
2251:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         {
2252:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****            baud_value = (unsigned int) (mainClock * 10)/(2*speed);
2253:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****            if ((baud_value % 10) >= 5)
2254:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                   baud_value = (baud_value / 10) + 1;
2255:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****            else
2256:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                   baud_value /= 10;
2257:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         }
2258:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2259:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pSSC->SSC_CMR = baud_value;
2260:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2261:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2262:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2263:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_Configure
2264:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure SSC
2265:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2266:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SSC_Configure (
2267:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****              AT91PS_SSC pSSC,          // \arg pointer to a SSC controller
2268:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****              unsigned int syst_clock,  // \arg System Clock Frequency
2269:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****              unsigned int baud_rate,   // \arg Expected Baud Rate Frequency
2270:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****              unsigned int clock_rx,    // \arg Receiver Clock Parameters
2271:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****              unsigned int mode_rx,     // \arg mode Register to be programmed
2272:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****              unsigned int clock_tx,    // \arg Transmitter Clock Parameters
2273:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****              unsigned int mode_tx)     // \arg mode Register to be programmed
2274:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2275:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable interrupts
2276:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSSC->SSC_IDR = (unsigned int) -1;
2277:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2278:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Reset receiver and transmitter
2279:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSSC->SSC_CR = AT91C_SSC_SWRST | AT91C_SSC_RXDIS | AT91C_SSC_TXDIS ;
2280:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2281:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Define the Clock Mode Register
2282:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_SSC_SetBaudrate(pSSC, syst_clock, baud_rate);
2283:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2284:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****      //* Write the Receive Clock Mode Register
2285:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSSC->SSC_RCMR =  clock_rx;
2286:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2287:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****      //* Write the Transmit Clock Mode Register
2288:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSSC->SSC_TCMR =  clock_tx;
2289:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2290:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****      //* Write the Receive Frame Mode Register
2291:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSSC->SSC_RFMR =  mode_rx;
2292:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2293:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****      //* Write the Transmit Frame Mode Register
2294:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSSC->SSC_TFMR =  mode_tx;
2295:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2296:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Clear Transmit and Receive Counters
2297:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_Open((AT91PS_PDC) &(pSSC->SSC_RPR));
2298:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2299:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2300:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2301:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2302:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2303:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_EnableRx
2304:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable receiving datas
2305:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2306:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SSC_EnableRx (
2307:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SSC pSSC)     // \arg pointer to a SSC controller
2308:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2309:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Enable receiver
2310:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSSC->SSC_CR = AT91C_SSC_RXEN;
2311:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2312:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2313:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2314:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_DisableRx
2315:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable receiving datas
2316:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2317:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SSC_DisableRx (
2318:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SSC pSSC)     // \arg pointer to a SSC controller
2319:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2320:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable receiver
2321:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSSC->SSC_CR = AT91C_SSC_RXDIS;
2322:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2323:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2324:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2325:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_EnableTx
2326:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable sending datas
2327:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2328:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SSC_EnableTx (
2329:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SSC pSSC)     // \arg pointer to a SSC controller
2330:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2331:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Enable  transmitter
2332:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSSC->SSC_CR = AT91C_SSC_TXEN;
2333:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2334:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2335:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2336:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_DisableTx
2337:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable sending datas
2338:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2339:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SSC_DisableTx (
2340:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SSC pSSC)     // \arg pointer to a SSC controller
2341:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2342:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable  transmitter
2343:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSSC->SSC_CR = AT91C_SSC_TXDIS;
2344:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2345:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2346:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2347:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_EnableIt
2348:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable SSC IT
2349:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2350:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SSC_EnableIt (
2351:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SSC pSSC, // \arg pointer to a SSC controller
2352:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // \arg IT to be enabled
2353:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2354:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IER register
2355:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSSC->SSC_IER = flag;
2356:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2357:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2358:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2359:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_DisableIt
2360:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable SSC IT
2361:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2362:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SSC_DisableIt (
2363:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SSC pSSC, // \arg pointer to a SSC controller
2364:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // \arg IT to be disabled
2365:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2366:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IDR register
2367:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSSC->SSC_IDR = flag;
2368:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2369:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2370:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2371:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_ReceiveFrame
2372:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return 2 if PDC has been initialized with Buffer and Next Buffer, 1 if PDC has been init
2373:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2374:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_SSC_ReceiveFrame (
2375:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SSC pSSC,
2376:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pBuffer,
2377:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
2378:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
2379:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
2380:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2381:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return AT91F_PDC_ReceiveFrame(
2382:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		(AT91PS_PDC) &(pSSC->SSC_RPR),
2383:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pBuffer,
2384:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szBuffer,
2385:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pNextBuffer,
2386:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szNextBuffer);
2387:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2388:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2389:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2390:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_SendFrame
2391:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return 2 if PDC has been initialized with Buffer and Next Buffer, 1 if PDC has been init
2392:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2393:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_SSC_SendFrame(
2394:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SSC pSSC,
2395:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pBuffer,
2396:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
2397:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
2398:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
2399:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2400:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return AT91F_PDC_SendFrame(
2401:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		(AT91PS_PDC) &(pSSC->SSC_RPR),
2402:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pBuffer,
2403:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szBuffer,
2404:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pNextBuffer,
2405:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szNextBuffer);
2406:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2407:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2408:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2409:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_GetInterruptMaskStatus
2410:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return SSC Interrupt Mask Status
2411:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2412:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_SSC_GetInterruptMaskStatus( // \return SSC Interrupt Mask Status
2413:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_SSC pSsc) // \arg  pointer to a SSC controller
2414:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2415:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pSsc->SSC_IMR;
2416:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2417:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2418:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2419:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_IsInterruptMasked
2420:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if SSC Interrupt is Masked
2421:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2422:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_SSC_IsInterruptMasked(
2423:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_SSC pSsc,   // \arg  pointer to a SSC controller
2424:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
2425:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2426:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_SSC_GetInterruptMaskStatus(pSsc) & flag);
2427:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2428:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2429:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
2430:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR USART
2431:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
2432:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_Baudrate
2433:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Calculate the baudrate
2434:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Standard Asynchronous Mode : 8 bits , 1 stop , no parity
2435:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_US_ASYNC_MODE ( AT91C_US_USMODE_NORMAL + \
2436:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                         AT91C_US_NBSTOP_1_BIT + \
2437:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                         AT91C_US_PAR_NONE + \
2438:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                         AT91C_US_CHRL_8_BITS + \
2439:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                         AT91C_US_CLKS_CLOCK )
2440:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2441:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Standard External Asynchronous Mode : 8 bits , 1 stop , no parity
2442:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_US_ASYNC_SCK_MODE ( AT91C_US_USMODE_NORMAL + \
2443:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             AT91C_US_NBSTOP_1_BIT + \
2444:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             AT91C_US_PAR_NONE + \
2445:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             AT91C_US_CHRL_8_BITS + \
2446:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             AT91C_US_CLKS_EXT )
2447:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2448:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Standard Synchronous Mode : 8 bits , 1 stop , no parity
2449:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_US_SYNC_MODE ( AT91C_US_SYNC + \
2450:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        AT91C_US_USMODE_NORMAL + \
2451:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        AT91C_US_NBSTOP_1_BIT + \
2452:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        AT91C_US_PAR_NONE + \
2453:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        AT91C_US_CHRL_8_BITS + \
2454:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        AT91C_US_CLKS_CLOCK )
2455:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2456:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* SCK used Label
2457:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_US_SCK_USED (AT91C_US_CKLO | AT91C_US_CLKS_EXT)
2458:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2459:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Standard ISO T=0 Mode : 8 bits , 1 stop , parity
2460:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_US_ISO_READER_MODE ( AT91C_US_USMODE_ISO7816_0 + \
2461:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 					   		 AT91C_US_CLKS_CLOCK +\
2462:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        		 AT91C_US_NBSTOP_1_BIT + \
2463:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        		 AT91C_US_PAR_EVEN + \
2464:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        		 AT91C_US_CHRL_8_BITS + \
2465:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        		 AT91C_US_CKLO +\
2466:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        		 AT91C_US_OVER)
2467:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2468:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Standard IRDA mode
2469:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_US_ASYNC_IRDA_MODE (  AT91C_US_USMODE_IRDA + \
2470:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             AT91C_US_NBSTOP_1_BIT + \
2471:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             AT91C_US_PAR_NONE + \
2472:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             AT91C_US_CHRL_8_BITS + \
2473:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             AT91C_US_CLKS_CLOCK )
2474:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2475:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2476:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2477:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_Baudrate
2478:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Caluculate baud_value according to the main clock and the baud rate
2479:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2480:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_US_Baudrate (
2481:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	const unsigned int main_clock, // \arg peripheral clock
2482:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	const unsigned int baud_rate)  // \arg UART baudrate
2483:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2484:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int baud_value = ((main_clock*10)/(baud_rate * 16));
2485:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	if ((baud_value % 10) >= 5)
2486:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		baud_value = (baud_value / 10) + 1;
2487:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	else
2488:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		baud_value /= 10;
2489:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return baud_value;
2490:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2491:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2492:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2493:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_SetBaudrate
2494:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the baudrate according to the CPU clock
2495:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2496:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_SetBaudrate (
2497:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART,    // \arg pointer to a USART controller
2498:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mainClock, // \arg peripheral clock
2499:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int speed)     // \arg UART baudrate
2500:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2501:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Define the baud rate divisor register
2502:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pUSART->US_BRGR = AT91F_US_Baudrate(mainClock, speed);
2503:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2504:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2505:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2506:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_SetTimeguard
2507:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set USART timeguard
2508:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2509:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_SetTimeguard (
2510:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART,    // \arg pointer to a USART controller
2511:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int timeguard) // \arg timeguard value
2512:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2513:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write the Timeguard Register
2514:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pUSART->US_TTGR = timeguard ;
2515:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2516:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2517:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2518:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_EnableIt
2519:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable USART IT
2520:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2521:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_EnableIt (
2522:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART, // \arg pointer to a USART controller
2523:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // \arg IT to be enabled
2524:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2525:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IER register
2526:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pUSART->US_IER = flag;
2527:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2528:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2529:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2530:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_DisableIt
2531:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable USART IT
2532:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2533:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_DisableIt (
2534:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART, // \arg pointer to a USART controller
2535:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // \arg IT to be disabled
2536:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2537:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IER register
2538:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pUSART->US_IDR = flag;
2539:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2540:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2541:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2542:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_Configure
2543:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure USART
2544:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2545:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_Configure (
2546:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART,     // \arg pointer to a USART controller
2547:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mainClock,  // \arg peripheral clock
2548:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode ,      // \arg mode Register to be programmed
2549:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int baudRate ,  // \arg baudrate to be programmed
2550:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int timeguard ) // \arg timeguard to be programmed
2551:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2552:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable interrupts
2553:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_IDR = (unsigned int) -1;
 153              		.loc 2 2553 0
 154 00c4 033C83E2 		add	r3, r3, #768
 155 00c8 0C3084E5 		str	r3, [r4, #12]
2554:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2555:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Reset receiver and transmitter
2556:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_CR = AT91C_US_RSTRX | AT91C_US_RSTTX | AT91C_US_RXDIS | AT91C_US_TXDIS ;
 156              		.loc 2 2556 0
 157 00cc AD3083E2 		add	r3, r3, #173
 158 00d0 003084E5 		str	r3, [r4, #0]
 159              	.LBB188:
 160              	.LBB189:
 161              	.LBB190:
 162              	.LBB191:
 163              		.loc 2 2484 0
 164 00d4 7205A0E3 		mov	r0, #478150656
 165 00d8 420980E2 		add	r0, r0, #1081344
 166 00dc 0712A0E1 		mov	r1, r7, asl #4
 167 00e0 FEFFFFEB 		bl	__udivsi3
 168              		.loc 2 2485 0
 169 00e4 94329FE5 		ldr	r3, .L19+8
 170 00e8 902383E0 		umull	r2, r3, r0, r3
 171              	.LVL3:
 172 00ec A331A0E1 		mov	r3, r3, lsr #3
 173 00f0 8320A0E1 		mov	r2, r3, asl #1
 174 00f4 8331A0E1 		mov	r3, r3, asl #3
 175 00f8 032082E0 		add	r2, r2, r3
 176 00fc 002062E0 		rsb	r2, r2, r0
 177 0100 040052E3 		cmp	r2, #4
 178              		.loc 2 2486 0
 179 0104 74329F85 		ldrhi	r3, .L19+8
 180 0108 90238380 		umullhi	r2, r3, r0, r3
 181 010c A331A081 		movhi	r3, r3, lsr #3
 182 0110 01308382 		addhi	r3, r3, #1
 183              	.LVL4:
 184              		.loc 2 2488 0
 185 0114 64329F95 		ldrls	r3, .L19+8
 186              	.LVL5:
 187 0118 90238390 		umullls	r2, r3, r0, r3
 188              	.LVL6:
 189 011c A331A091 		movls	r3, r3, lsr #3
 190              	.LVL7:
 191              	.LBE191:
 192              	.LBE190:
 193              		.loc 2 2502 0
 194 0120 203084E5 		str	r3, [r4, #32]
 195              	.LBE189:
 196              	.LBE188:
 197              	.LBB192:
 198              	.LBB193:
 199              		.loc 2 2514 0
 200 0124 0020A0E3 		mov	r2, #0
 201 0128 282084E5 		str	r2, [r4, #40]
 202              	.LBE193:
 203              	.LBE192:
2557:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2558:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Define the baud rate divisor register
2559:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_US_SetBaudrate(pUSART, mainClock, baudRate);
2560:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2561:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write the Timeguard Register
2562:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_US_SetTimeguard(pUSART, timeguard);
2563:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2564:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Clear Transmit and Receive Counters
2565:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     AT91F_PDC_Open((AT91PS_PDC) &(pUSART->US_RPR));
 204              		.loc 2 2565 0
 205 012c 013C84E2 		add	r3, r4, #256
 206              	.LVL8:
 207              	.LBB194:
 208              	.LBB195:
 209              	.LBB196:
 210              	.LBB197:
 211              		.loc 2 297 0
 212 0130 0210A0E3 		mov	r1, #2
 213 0134 201083E5 		str	r1, [r3, #32]
 214              	.LBE197:
 215              	.LBE196:
 216              	.LBB198:
 217              	.LBB199:
 218              		.loc 2 287 0
 219 0138 021CA0E3 		mov	r1, #512
 220 013c 201083E5 		str	r1, [r3, #32]
 221              	.LBE199:
 222              	.LBE198:
 223              	.LBB200:
 224              	.LBB201:
 225              		.loc 2 230 0
 226 0140 182083E5 		str	r2, [r3, #24]
 227              		.loc 2 231 0
 228 0144 1C2083E5 		str	r2, [r3, #28]
 229              	.LBE201:
 230              	.LBE200:
 231              	.LBB202:
 232              	.LBB203:
 233              		.loc 2 217 0
 234 0148 102083E5 		str	r2, [r3, #16]
 235              		.loc 2 218 0
 236 014c 142083E5 		str	r2, [r3, #20]
 237              	.LBE203:
 238              	.LBE202:
 239              	.LBB204:
 240              	.LBB205:
 241              		.loc 2 256 0
 242 0150 082083E5 		str	r2, [r3, #8]
 243              		.loc 2 257 0
 244 0154 0C2083E5 		str	r2, [r3, #12]
 245              	.LBE205:
 246              	.LBE204:
 247              	.LBB206:
 248              	.LBB207:
 249              		.loc 2 243 0
 250 0158 002083E5 		str	r2, [r3, #0]
 251              		.loc 2 244 0
 252 015c 042083E5 		str	r2, [r3, #4]
 253              	.LBE207:
 254              	.LBE206:
 255              	.LBB208:
 256              	.LBB209:
 257              		.loc 2 277 0
 258 0160 0100A0E3 		mov	r0, #1
 259 0164 200083E5 		str	r0, [r3, #32]
 260              	.LBE209:
 261              	.LBE208:
 262              	.LBB210:
 263              	.LBB211:
 264              		.loc 2 267 0
 265 0168 012C82E2 		add	r2, r2, #256
 266 016c 202083E5 		str	r2, [r3, #32]
 267              	.LBE211:
 268              	.LBE210:
 269              	.LBE195:
 270              	.LBE194:
2566:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2567:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Define the USART mode
2568:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_MR = mode  ;
 271              		.loc 2 2568 0
 272 0170 048084E5 		str	r8, [r4, #4]
 273              	.LBE187:
 274              	.LBE186:
 275              	.LBB212:
 276              	.LBB213:
 277              		.loc 2 62 0
 278 0174 0F2CE0E3 		mvn	r2, #3840
 279 0178 673012E5 		ldr	r3, [r2, #-103]
 280              	.LVL9:
 281              		.loc 2 66 0
 282 017c 071D41E2 		sub	r1, r1, #448
 283 0180 251082E5 		str	r1, [r2, #37]
 284              		.loc 2 68 0
 285 0184 F8319FE5 		ldr	r3, .L19+12
 286              	.LVL10:
 287 0188 673002E5 		str	r3, [r2, #-103]
 288              		.loc 2 70 0
 289 018c 0730A0E3 		mov	r3, #7
 290 0190 E73002E5 		str	r3, [r2, #-231]
 291              		.loc 2 72 0
 292 0194 291082E5 		str	r1, [r2, #41]
 293              	.LBE213:
 294              	.LBE212:
 295              	.LBB214:
 296              	.LBB215:
 297              		.loc 2 86 0
 298 0198 211082E5 		str	r1, [r2, #33]
 299              	.LBE215:
 300              	.LBE214:
 152:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
 153:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			AT91F_AIC_ConfigureIt(AT91C_BASE_AIC, AT91C_ID_US0,
 154:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 					USART_INTERRUPT_LEVEL, AT91C_AIC_SRCTYPE_INT_HIGH_LEVEL,
 155:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 					(void(*)(void)) AT91_US0_ISR_ENTRY);
 156:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
 157:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			AT91F_AIC_EnableIt(AT91C_BASE_AIC, AT91C_ID_US0);
 158:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			COM0.hRxQueue = xQueueCreate(1, sizeof(int));
 301              		.loc 1 158 0
 302 019c 3C1041E2 		sub	r1, r1, #60
 303 01a0 FEFFFFEB 		bl	xQueueCreate
 304 01a4 CC319FE5 		ldr	r3, .L19
 305 01a8 0C0083E5 		str	r0, [r3, #12]
 159:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			while (COM0.hRxQueue == 0)
 306              		.loc 1 159 0
 307 01ac 000050E3 		cmp	r0, #0
 308 01b0 6D00000A 		beq	.L7
 160:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 				; // Queue was not created and must not be used.
 161:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			COM0.hTxQueue = xQueueCreate(1, sizeof(int));
 309              		.loc 1 161 0
 310 01b4 0100A0E3 		mov	r0, #1
 311 01b8 0410A0E3 		mov	r1, #4
 312 01bc FEFFFFEB 		bl	xQueueCreate
 313 01c0 B0319FE5 		ldr	r3, .L19
 314 01c4 100083E5 		str	r0, [r3, #16]
 162:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			while (COM0.hTxQueue == 0)
 315              		.loc 1 162 0
 316 01c8 000050E3 		cmp	r0, #0
 317 01cc 6200001A 		bne	.L9
 318 01d0 640000EA 		b	.L15
 319              	.LVL11:
 320              	.L4:
 163:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 				; // Queue was not created and must not be used.
 164:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
 165:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			break;
 166:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
 167:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		case AT91_USART_COM1_ID:
 168:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			COM1.id = idPort;
 321              		.loc 1 168 0
 322 01d4 AC419FE5 		ldr	r4, .L19+16
 323              	.LVL12:
 324 01d8 0130A0E3 		mov	r3, #1
 325 01dc 003084E5 		str	r3, [r4, #0]
 169:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			COM1.hPort = AT91C_BASE_US1;
 326              		.loc 1 169 0
 327 01e0 5E3343E2 		sub	r3, r3, #2013265921
 328 01e4 C336A0E1 		mov	r3, r3, asr #13
 329 01e8 043084E5 		str	r3, [r4, #4]
 170:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			COM1.hPDC = AT91C_BASE_PDC_US1;
 330              		.loc 1 170 0
 331 01ec FF34A0E3 		mov	r3, #-16777216
 332 01f0 3F3783E2 		add	r3, r3, #16515072
 333 01f4 413C83E2 		add	r3, r3, #16640
 334 01f8 143084E5 		str	r3, [r4, #20]
 171:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			COM1.hError = ErrorCreate("US1_Error");
 335              		.loc 1 171 0
 336 01fc 88019FE5 		ldr	r0, .L19+20
 337 0200 FEFFFFEB 		bl	ErrorCreate
 338 0204 B800C4E1 		strh	r0, [r4, #8]	@ movhi
 172:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			AT91F_PDC_DisableTx(COM1.hPDC);
 339              		.loc 1 172 0
 340 0208 142094E5 		ldr	r2, [r4, #20]
 341              	.LBB216:
 342              	.LBB217:
 343              		.loc 2 287 0
 344 020c 023CA0E3 		mov	r3, #512
 345 0210 203082E5 		str	r3, [r2, #32]
 346              	.LBE217:
 347              	.LBE216:
 173:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			AT91F_PDC_DisableRx(COM1.hPDC);
 348              		.loc 1 173 0
 349 0214 142094E5 		ldr	r2, [r4, #20]
 350              	.LBB218:
 351              	.LBB219:
 352              		.loc 2 297 0
 353 0218 0230A0E3 		mov	r3, #2
 354 021c 203082E5 		str	r3, [r2, #32]
 355              	.LBE219:
 356              	.LBE218:
 357              	.LBB220:
 358              	.LBB221:
 359              		.loc 2 495 0
 360 0220 0B2CE0E3 		mvn	r2, #2816
 361 0224 0616A0E3 		mov	r1, #6291456
 362 0228 8F1002E5 		str	r1, [r2, #-143]
 363              		.loc 2 496 0
 364 022c 023043E2 		sub	r3, r3, #2
 365 0230 8B3002E5 		str	r3, [r2, #-139]
 366              		.loc 2 497 0
 367 0234 FB1002E5 		str	r1, [r2, #-251]
 368              	.LBE221:
 369              	.LBE220:
 370              	.LBB222:
 371              	.LBB223:
 372              		.loc 2 1044 0
 373 0238 8020A0E3 		mov	r2, #128
 374 023c 033CE0E3 		mvn	r3, #768
 375 0240 EF2003E5 		str	r2, [r3, #-239]
 376              	.LBE223:
 377              	.LBE222:
 174:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			AT91F_PIO_CfgPeriph(AT91C_BASE_PIOA, // PIO controller base address
 175:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 					(((unsigned int) AT91C_PA21_RXD1)
 176:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 							| ((unsigned int) AT91C_PA22_TXD1)), // Peripheral A
 177:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 					0);
 178:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			AT91F_PMC_EnablePeriphClock(AT91C_BASE_PMC, 1 << AT91C_ID_US1); // First, enable the clock of th
 179:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			AT91F_US_Configure(COM1.hPort, MCK, mode, BaudRate, 0); // Usart Configure
 378              		.loc 1 179 0
 379 0244 044094E5 		ldr	r4, [r4, #4]
 380              	.LBB224:
 381              	.LBB225:
 382              		.loc 2 2553 0
 383 0248 033C83E2 		add	r3, r3, #768
 384 024c 0C3084E5 		str	r3, [r4, #12]
 385              		.loc 2 2556 0
 386 0250 AD3083E2 		add	r3, r3, #173
 387 0254 003084E5 		str	r3, [r4, #0]
 388              	.LBB226:
 389              	.LBB227:
 390              	.LBB228:
 391              	.LBB229:
 392              		.loc 2 2484 0
 393 0258 7205A0E3 		mov	r0, #478150656
 394 025c 420980E2 		add	r0, r0, #1081344
 395 0260 0712A0E1 		mov	r1, r7, asl #4
 396 0264 FEFFFFEB 		bl	__udivsi3
 397              		.loc 2 2485 0
 398 0268 10319FE5 		ldr	r3, .L19+8
 399 026c 902383E0 		umull	r2, r3, r0, r3
 400              	.LVL13:
 401 0270 A331A0E1 		mov	r3, r3, lsr #3
 402 0274 8320A0E1 		mov	r2, r3, asl #1
 403 0278 8331A0E1 		mov	r3, r3, asl #3
 404 027c 032082E0 		add	r2, r2, r3
 405 0280 002062E0 		rsb	r2, r2, r0
 406 0284 040052E3 		cmp	r2, #4
 407              		.loc 2 2486 0
 408 0288 F0309F85 		ldrhi	r3, .L19+8
 409 028c 90238380 		umullhi	r2, r3, r0, r3
 410 0290 A331A081 		movhi	r3, r3, lsr #3
 411 0294 01308382 		addhi	r3, r3, #1
 412              	.LVL14:
 413              		.loc 2 2488 0
 414 0298 E0309F95 		ldrls	r3, .L19+8
 415              	.LVL15:
 416 029c 90238390 		umullls	r2, r3, r0, r3
 417              	.LVL16:
 418 02a0 A331A091 		movls	r3, r3, lsr #3
 419              	.LVL17:
 420              	.LBE229:
 421              	.LBE228:
 422              		.loc 2 2502 0
 423 02a4 203084E5 		str	r3, [r4, #32]
 424              	.LBE227:
 425              	.LBE226:
 426              	.LBB230:
 427              	.LBB231:
 428              		.loc 2 2514 0
 429 02a8 0020A0E3 		mov	r2, #0
 430 02ac 282084E5 		str	r2, [r4, #40]
 431              	.LBE231:
 432              	.LBE230:
 433              		.loc 2 2565 0
 434 02b0 013C84E2 		add	r3, r4, #256
 435              	.LVL18:
 436              	.LBB232:
 437              	.LBB233:
 438              	.LBB234:
 439              	.LBB235:
 440              		.loc 2 297 0
 441 02b4 0210A0E3 		mov	r1, #2
 442 02b8 201083E5 		str	r1, [r3, #32]
 443              	.LBE235:
 444              	.LBE234:
 445              	.LBB236:
 446              	.LBB237:
 447              		.loc 2 287 0
 448 02bc 021CA0E3 		mov	r1, #512
 449 02c0 201083E5 		str	r1, [r3, #32]
 450              	.LBE237:
 451              	.LBE236:
 452              	.LBB238:
 453              	.LBB239:
 454              		.loc 2 230 0
 455 02c4 182083E5 		str	r2, [r3, #24]
 456              		.loc 2 231 0
 457 02c8 1C2083E5 		str	r2, [r3, #28]
 458              	.LBE239:
 459              	.LBE238:
 460              	.LBB240:
 461              	.LBB241:
 462              		.loc 2 217 0
 463 02cc 102083E5 		str	r2, [r3, #16]
 464              		.loc 2 218 0
 465 02d0 142083E5 		str	r2, [r3, #20]
 466              	.LBE241:
 467              	.LBE240:
 468              	.LBB242:
 469              	.LBB243:
 470              		.loc 2 256 0
 471 02d4 082083E5 		str	r2, [r3, #8]
 472              		.loc 2 257 0
 473 02d8 0C2083E5 		str	r2, [r3, #12]
 474              	.LBE243:
 475              	.LBE242:
 476              	.LBB244:
 477              	.LBB245:
 478              		.loc 2 243 0
 479 02dc 002083E5 		str	r2, [r3, #0]
 480              		.loc 2 244 0
 481 02e0 042083E5 		str	r2, [r3, #4]
 482              	.LBE245:
 483              	.LBE244:
 484              	.LBB246:
 485              	.LBB247:
 486              		.loc 2 277 0
 487 02e4 0100A0E3 		mov	r0, #1
 488 02e8 200083E5 		str	r0, [r3, #32]
 489              	.LBE247:
 490              	.LBE246:
 491              	.LBB248:
 492              	.LBB249:
 493              		.loc 2 267 0
 494 02ec 012C82E2 		add	r2, r2, #256
 495 02f0 202083E5 		str	r2, [r3, #32]
 496              	.LBE249:
 497              	.LBE248:
 498              	.LBE233:
 499              	.LBE232:
 500              		.loc 2 2568 0
 501 02f4 048084E5 		str	r8, [r4, #4]
 502              	.LBE225:
 503              	.LBE224:
 504              	.LBB250:
 505              	.LBB251:
 506              		.loc 2 62 0
 507 02f8 0F2CE0E3 		mvn	r2, #3840
 508 02fc 633012E5 		ldr	r3, [r2, #-99]
 509              	.LVL19:
 510              		.loc 2 66 0
 511 0300 061D41E2 		sub	r1, r1, #384
 512 0304 251082E5 		str	r1, [r2, #37]
 513              		.loc 2 68 0
 514 0308 80309FE5 		ldr	r3, .L19+24
 515              	.LVL20:
 516 030c 633002E5 		str	r3, [r2, #-99]
 517              		.loc 2 70 0
 518 0310 0730A0E3 		mov	r3, #7
 519 0314 E33002E5 		str	r3, [r2, #-227]
 520              		.loc 2 72 0
 521 0318 291082E5 		str	r1, [r2, #41]
 522              	.LBE251:
 523              	.LBE250:
 524              	.LBB252:
 525              	.LBB253:
 526              		.loc 2 86 0
 527 031c 211082E5 		str	r1, [r2, #33]
 528              	.LBE253:
 529              	.LBE252:
 180:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			AT91F_AIC_ConfigureIt(AT91C_BASE_AIC, AT91C_ID_US1,
 181:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 					USART_INTERRUPT_LEVEL, AT91C_AIC_SRCTYPE_INT_HIGH_LEVEL,
 182:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 					(void(*)(void)) AT91_US1_ISR_ENTRY);
 183:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			AT91F_AIC_EnableIt(AT91C_BASE_AIC, AT91C_ID_US1);
 184:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
 185:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			COM1.hRxQueue = xQueueCreate(1, sizeof(int));
 530              		.loc 1 185 0
 531 0320 7C1041E2 		sub	r1, r1, #124
 532 0324 FEFFFFEB 		bl	xQueueCreate
 533 0328 58309FE5 		ldr	r3, .L19+16
 534 032c 0C0083E5 		str	r0, [r3, #12]
 186:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			while (COM1.hRxQueue == 0)
 535              		.loc 1 186 0
 536 0330 000050E3 		cmp	r0, #0
 537 0334 0E00000A 		beq	.L12
 187:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 				; // Queue was not created and must not be used.
 188:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
 189:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			COM1.hTxQueue = xQueueCreate(1, sizeof(int));
 538              		.loc 1 189 0
 539 0338 0100A0E3 		mov	r0, #1
 540 033c 0410A0E3 		mov	r1, #4
 541 0340 FEFFFFEB 		bl	xQueueCreate
 542 0344 3C309FE5 		ldr	r3, .L19+16
 543 0348 100083E5 		str	r0, [r3, #16]
 190:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			while (COM1.hTxQueue == 0)
 544              		.loc 1 190 0
 545 034c 000050E3 		cmp	r0, #0
 546 0350 0100001A 		bne	.L9
 547 0354 050000EA 		b	.L17
 548              	.LVL21:
 549              	.L2:
 550 0358 FEFFFFEA 		b	.L2
 551              	.LVL22:
 552              	.L9:
 191:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 				; // Queue was not created and must not be used.
 192:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			break;
 193:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		default:
 194:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 			while (1)
 195:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 				;// error port notfound;
 196:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 		}
 197:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 
 198:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	}
 199:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** 	portEXIT_CRITICAL();
 553              		.loc 1 199 0
 554 035c FEFFFFEB 		bl	vPortExitCritical
 200:rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c **** }
 555              		.loc 1 200 0
 556 0360 F041BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, lr}
 557 0364 1EFF2FE1 		bx	lr
 558              	.L15:
 559 0368 FEFFFFEA 		b	.L15
 560              	.L7:
 561              	.L16:
 562 036c FEFFFFEA 		b	.L16
 563              	.L17:
 564 0370 FEFFFFEA 		b	.L17
 565              	.L12:
 566              	.L18:
 567 0374 FEFFFFEA 		b	.L18
 568              	.L20:
 569              		.align	2
 570              	.L19:
 571 0378 00000000 		.word	COM0
 572 037c 00000000 		.word	.LC0
 573 0380 CDCCCCCC 		.word	-858993459
 574 0384 00000000 		.word	AT91_US0_ISR_ENTRY
 575 0388 00000000 		.word	COM1
 576 038c 0C000000 		.word	.LC1
 577 0390 00000000 		.word	AT91_US1_ISR_ENTRY
 578              	.LFE297:
 580              		.align	2
 581              		.global	AT91F_US_START_RECEIVE
 583              	AT91F_US_START_RECEIVE:
 584              	.LFB294:
 585              		.loc 1 97 0
 586              		@ Function supports interworking.
 587              		@ args = 0, pretend = 0, frame = 0
 588              		@ frame_needed = 0, uses_anonymous_args = 0
 589              	.LVL23:
 590 0394 70402DE9 		stmfd	sp!, {r4, r5, r6, lr}
 591              	.LCFI1:
 592 0398 0040A0E1 		mov	r4, r0
 593 039c 0150A0E1 		mov	r5, r1
 594 03a0 0260A0E1 		mov	r6, r2
 595              		.loc 1 98 0
 596 03a4 FEFFFFEB 		bl	vPortEnterCritical
 597              	.LVL24:
 598              		.loc 1 100 0
 599 03a8 003094E5 		ldr	r3, [r4, #0]
 600 03ac 023B83E3 		orr	r3, r3, #2048
 601 03b0 003084E5 		str	r3, [r4, #0]
 602 03b4 2030A0E3 		mov	r3, #32
 603 03b8 243084E5 		str	r3, [r4, #36]
 604              	.LBB262:
 605              	.LBB263:
 606              		.loc 2 2526 0
 607 03bc 113CA0E3 		mov	r3, #4352
 608 03c0 083084E5 		str	r3, [r4, #8]
 609              	.LBE263:
 610              	.LBE262:
 611              		.loc 1 102 0
 612 03c4 113C43E2 		sub	r3, r3, #4352
 613 03c8 143184E5 		str	r3, [r4, #276]
 614              		.loc 1 103 0
 615 03cc 143184E5 		str	r3, [r4, #276]
 616              		.loc 1 104 0
 617 03d0 005184E5 		str	r5, [r4, #256]
 618              		.loc 1 105 0
 619 03d4 046184E5 		str	r6, [r4, #260]
 620              	.LBB264:
 621              	.LBB265:
2569:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2570:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2571:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2572:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2573:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_EnableRx
2574:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable receiving characters
2575:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2576:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_EnableRx (
2577:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART)     // \arg pointer to a USART controller
2578:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2579:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Enable receiver
2580:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_CR = AT91C_US_RXEN;
 622              		.loc 2 2580 0
 623 03d8 103083E2 		add	r3, r3, #16
 624 03dc 003084E5 		str	r3, [r4, #0]
 625              	.LBE265:
 626              	.LBE264:
 627              		.loc 1 108 0
 628 03e0 FEFFFFEB 		bl	vPortExitCritical
 629              		.loc 1 109 0
 630 03e4 7040BDE8 		ldmfd	sp!, {r4, r5, r6, lr}
 631 03e8 1EFF2FE1 		bx	lr
 632              	.LFE294:
 634              		.align	2
 635              		.global	AT91F_USART_SEND
 637              	AT91F_USART_SEND:
 638              	.LFB295:
 639              		.loc 1 112 0
 640              		@ Function supports interworking.
 641              		@ args = 0, pretend = 0, frame = 4
 642              		@ frame_needed = 0, uses_anonymous_args = 0
 643              	.LVL25:
 644 03ec F0452DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, sl, lr}
 645              	.LCFI2:
 646 03f0 04D04DE2 		sub	sp, sp, #4
 647              	.LCFI3:
 648 03f4 0060A0E1 		mov	r6, r0
 649 03f8 0180A0E1 		mov	r8, r1
 650 03fc 02A0A0E1 		mov	sl, r2
 651              		.loc 1 114 0
 652 0400 044090E5 		ldr	r4, [r0, #4]
 653              	.LBB266:
 654              	.LBB267:
 655              		.loc 1 84 0
 656 0404 FEFFFFEB 		bl	vPortEnterCritical
 657              	.LVL26:
 658              	.LBB268:
 659              	.LBB269:
 660              		.loc 2 2526 0
 661 0408 027CA0E3 		mov	r7, #512
 662 040c 087084E5 		str	r7, [r4, #8]
 663              	.LBE269:
 664              	.LBE268:
 665              	.LBB270:
 666              	.LBB271:
2581:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2582:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2583:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2584:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_EnableTx
2585:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable sending characters
2586:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2587:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_EnableTx (
2588:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART)     // \arg pointer to a USART controller
2589:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2590:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Enable  transmitter
2591:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_CR = AT91C_US_TXEN;
 667              		.loc 2 2591 0
 668 0410 4030A0E3 		mov	r3, #64
 669 0414 003084E5 		str	r3, [r4, #0]
 670              	.LBE271:
 671              	.LBE270:
 672              		.loc 1 88 0
 673 0418 0050A0E3 		mov	r5, #0
 674 041c 1C5184E5 		str	r5, [r4, #284]
 675              		.loc 1 89 0
 676 0420 1C5184E5 		str	r5, [r4, #284]
 677              		.loc 1 90 0
 678 0424 088184E5 		str	r8, [r4, #264]
 679              		.loc 1 91 0
 680 0428 0CA184E5 		str	sl, [r4, #268]
 681              		.loc 1 93 0
 682 042c FEFFFFEB 		bl	vPortExitCritical
 683              	.LBE267:
 684              	.LBE266:
 685              		.loc 1 115 0
 686 0430 100096E5 		ldr	r0, [r6, #16]
 687 0434 0D10A0E1 		mov	r1, sp
 688 0438 FA2FA0E3 		mov	r2, #1000
 689 043c 0530A0E1 		mov	r3, r5
 690 0440 FEFFFFEB 		bl	xQueueGenericReceive
 691              		.loc 1 116 0
 692 0444 043096E5 		ldr	r3, [r6, #4]
 693              	.LBB272:
 694              	.LBB273:
 695              		.loc 2 2538 0
 696 0448 0C7083E5 		str	r7, [r3, #12]
 697              	.LBE273:
 698              	.LBE272:
 699              		.loc 1 117 0
 700 044c 042096E5 		ldr	r2, [r6, #4]
 701              	.LBB274:
 702              	.LBB275:
2592:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2593:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2594:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2595:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_ResetRx
2596:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Reset Receiver and re-enable it
2597:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2598:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_ResetRx (
2599:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART)     // \arg pointer to a USART controller
2600:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2601:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Reset receiver
2602:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pUSART->US_CR = AT91C_US_RSTRX;
2603:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Re-Enable receiver
2604:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_CR = AT91C_US_RXEN;
2605:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2606:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2607:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2608:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_ResetTx
2609:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Reset Transmitter and re-enable it
2610:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2611:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_ResetTx (
2612:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART)     // \arg pointer to a USART controller
2613:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2614:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Reset transmitter
2615:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pUSART->US_CR = AT91C_US_RSTTX;
2616:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Enable transmitter
2617:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_CR = AT91C_US_TXEN;
2618:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2619:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2620:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2621:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_DisableRx
2622:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable Receiver
2623:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2624:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_DisableRx (
2625:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART)     // \arg pointer to a USART controller
2626:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2627:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable receiver
2628:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_CR = AT91C_US_RXDIS;
2629:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2630:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2631:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2632:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_DisableTx
2633:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable Transmitter
2634:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2635:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_DisableTx (
2636:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART)     // \arg pointer to a USART controller
2637:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2638:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable transmitter
2639:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_CR = AT91C_US_TXDIS;
 703              		.loc 2 2639 0
 704 0450 8030A0E3 		mov	r3, #128
 705 0454 003082E5 		str	r3, [r2, #0]
 706              	.LBE275:
 707              	.LBE274:
 708              		.loc 1 118 0
 709 0458 04D08DE2 		add	sp, sp, #4
 710 045c F045BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, sl, lr}
 711 0460 1EFF2FE1 		bx	lr
 712              	.LFE295:
 714              		.align	2
 715              		.global	AT91F_US_INTERRUPT
 717              	AT91F_US_INTERRUPT:
 718              	.LFB292:
 719              		.loc 1 54 0
 720              		@ Function supports interworking.
 721              		@ args = 0, pretend = 0, frame = 8
 722              		@ frame_needed = 0, uses_anonymous_args = 0
 723              	.LVL27:
 724 0464 30402DE9 		stmfd	sp!, {r4, r5, lr}
 725              	.LCFI4:
 726 0468 08D04DE2 		sub	sp, sp, #8
 727              	.LCFI5:
 728 046c 0040A0E1 		mov	r4, r0
 729              		.loc 1 55 0
 730 0470 042090E5 		ldr	r2, [r0, #4]
 731 0474 141092E5 		ldr	r1, [r2, #20]
 732              	.LVL28:
 733              		.loc 1 57 0
 734 0478 0030A0E3 		mov	r3, #0
 735 047c 00308DE5 		str	r3, [sp, #0]
 736              	.LVL29:
 737              		.loc 1 58 0
 738 0480 103092E5 		ldr	r3, [r2, #16]
 739 0484 015003E0 		and	r5, r3, r1
 740              	.LVL30:
 741              		.loc 1 60 0
 742 0488 010C15E3 		tst	r5, #256
 743 048c 0E00000A 		beq	.L26
 744              		.loc 1 62 0
 745 0490 042192E5 		ldr	r2, [r2, #260]
 746 0494 1C3090E5 		ldr	r3, [r0, #28]
 747 0498 033062E0 		rsb	r3, r2, r3
 748 049c 183080E5 		str	r3, [r0, #24]
 749              		.loc 1 63 0
 750 04a0 0C0090E5 		ldr	r0, [r0, #12]
 751              	.LVL31:
 752 04a4 04108DE2 		add	r1, sp, #4
 753 04a8 0D20A0E1 		mov	r2, sp
 754 04ac 0030A0E3 		mov	r3, #0
 755 04b0 FEFFFFEB 		bl	xQueueGenericSendFromISR
 756              		.loc 1 64 0
 757 04b4 042094E5 		ldr	r2, [r4, #4]
 758              	.LBB276:
 759              	.LBB277:
 760              		.loc 2 2538 0
 761 04b8 113CA0E3 		mov	r3, #4352
 762 04bc 0C3082E5 		str	r3, [r2, #12]
 763              	.LBE277:
 764              	.LBE276:
 765              		.loc 1 65 0
 766 04c0 042094E5 		ldr	r2, [r4, #4]
 767              	.LBB278:
 768              	.LBB279:
 769              		.loc 2 2628 0
 770 04c4 2030A0E3 		mov	r3, #32
 771 04c8 003082E5 		str	r3, [r2, #0]
 772              	.LVL32:
 773              	.L26:
 774              	.LBE279:
 775              	.LBE278:
 776              		.loc 1 67 0
 777 04cc 020C15E3 		tst	r5, #512
 778 04d0 0A00000A 		beq	.L27
 779              		.loc 1 69 0
 780 04d4 100094E5 		ldr	r0, [r4, #16]
 781 04d8 04108DE2 		add	r1, sp, #4
 782 04dc 0D20A0E1 		mov	r2, sp
 783 04e0 0030A0E3 		mov	r3, #0
 784 04e4 FEFFFFEB 		bl	xQueueGenericSendFromISR
 785              		.loc 1 70 0
 786 04e8 042094E5 		ldr	r2, [r4, #4]
 787              	.LBB280:
 788              	.LBB281:
 789              		.loc 2 2538 0
 790 04ec 023CA0E3 		mov	r3, #512
 791 04f0 0C3082E5 		str	r3, [r2, #12]
 792              	.LBE281:
 793              	.LBE280:
 794              		.loc 1 71 0
 795 04f4 042094E5 		ldr	r2, [r4, #4]
 796              	.LBB282:
 797              	.LBB283:
 798              		.loc 2 2639 0
 799 04f8 063D43E2 		sub	r3, r3, #384
 800 04fc 003082E5 		str	r3, [r2, #0]
 801              	.LVL33:
 802              	.L27:
 803              	.LBE283:
 804              	.LBE282:
 805              		.loc 1 74 0
 806 0500 00309DE5 		ldr	r3, [sp, #0]
 807 0504 000053E3 		cmp	r3, #0
 808              	.LVL34:
 809              		.loc 1 76 0
 810 0508 FEFFFF1B 		blne	vTaskSwitchContext
 811              	.LVL35:
 812              	.L28:
 813              		.loc 1 79 0
 814 050c 0020A0E3 		mov	r2, #0
 815 0510 0F3CE0E3 		mvn	r3, #3840
 816 0514 312083E5 		str	r2, [r3, #49]
 817              		.loc 1 80 0
 818 0518 08D08DE2 		add	sp, sp, #8
 819 051c 3040BDE8 		ldmfd	sp!, {r4, r5, lr}
 820 0520 1EFF2FE1 		bx	lr
 821              	.LFE292:
 823              		.align	2
 824              		.global	AT91_US1_ISR_ENTRY
 826              	AT91_US1_ISR_ENTRY:
 827              	.LFB291:
 828              		.loc 1 47 0
 829              		@ Function supports interworking.
 830              		@ Naked Function: prologue and epilogue provided by programmer.
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833              		.loc 1 48 0
 834              	@ 48 "rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c" 1
 835 0524 01002DE9 		STMDB	SP!, {R0}											
 836 0528 00204DE9 		STMDB	SP,{SP}^											
 837 052c 0000A0E1 		NOP														
 838 0530 04D04DE2 		SUB	SP, SP, #4											
 839 0534 0100BDE8 		LDMIA	SP!,{R0}											
 840 0538 004020E9 		STMDB	R0!, {LR}											
 841 053c 00E0A0E1 		MOV	LR, R0												
 842 0540 0100BDE8 		LDMIA	SP!, {R0}											
 843 0544 FF7F4EE9 		STMDB	LR,{R0-LR}^											
 844 0548 0000A0E1 		NOP														
 845 054c 3CE04EE2 		SUB	LR, LR, #60											
 846 0550 00004FE1 		MRS	R0, SPSR											
 847 0554 01002EE9 		STMDB	LR!, {R0}											
 848 0558 B8019FE5 		LDR	R0, =ulCriticalNesting								
 849 055c 000090E5 		LDR	R0, [R0]											
 850 0560 01002EE9 		STMDB	LR!, {R0}											
 851 0564 B0019FE5 		LDR	R0, =pxCurrentTCB									
 852 0568 000090E5 		LDR	R0, [R0]											
 853 056c 00E080E5 		STR	LR, [R0]											
 854              		
 855              	@ 0 "" 2
 856 0570 48509FE5 		ldr	r5, .L32
 857 0574 003095E5 		ldr	r3, [r5, #0]
 858 0578 44409FE5 		ldr	r4, .L32+4
 859 057c 003094E5 		ldr	r3, [r4, #0]
 860              		.loc 1 49 0
 861 0580 40009FE5 		ldr	r0, .L32+8
 862 0584 FEFFFFEB 		bl	AT91F_US_INTERRUPT
 863              		.loc 1 50 0
 864              	@ 50 "rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c" 1
 865 0588 8C019FE5 		LDR		R0, =pxCurrentTCB								
 866 058c 000090E5 		LDR		R0, [R0]										
 867 0590 00E090E5 		LDR		LR, [R0]										
 868 0594 7C019FE5 		LDR		R0, =ulCriticalNesting							
 869 0598 0200BEE8 		LDMFD	LR!, {R1}											
 870 059c 001080E5 		STR		R1, [R0]										
 871 05a0 0100BEE8 		LDMFD	LR!, {R0}											
 872 05a4 00F069E1 		MSR		SPSR, R0										
 873 05a8 FF7FDEE8 		LDMFD	LR, {R0-R14}^										
 874 05ac 0000A0E1 		NOP														
 875 05b0 3CE09EE5 		LDR		LR, [LR, #+60]									
 876 05b4 04F05EE2 		SUBS	PC, LR, #4											
 877              		
 878              	@ 0 "" 2
 879 05b8 005095E5 		ldr	r5, [r5, #0]
 880 05bc 004094E5 		ldr	r4, [r4, #0]
 881              		.loc 1 51 0
 882              	.L33:
 883              		.align	2
 884              	.L32:
 885 05c0 00000000 		.word	ulCriticalNesting
 886 05c4 00000000 		.word	pxCurrentTCB
 887 05c8 00000000 		.word	COM1
 888              	.LFE291:
 890              		.align	2
 891              		.global	AT91_US0_ISR_ENTRY
 893              	AT91_US0_ISR_ENTRY:
 894              	.LFB290:
 895              		.loc 1 41 0
 896              		@ Function supports interworking.
 897              		@ Naked Function: prologue and epilogue provided by programmer.
 898              		@ args = 0, pretend = 0, frame = 0
 899              		@ frame_needed = 0, uses_anonymous_args = 0
 900              		.loc 1 42 0
 901              	@ 42 "rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c" 1
 902 05cc 01002DE9 		STMDB	SP!, {R0}											
 903 05d0 00204DE9 		STMDB	SP,{SP}^											
 904 05d4 0000A0E1 		NOP														
 905 05d8 04D04DE2 		SUB	SP, SP, #4											
 906 05dc 0100BDE8 		LDMIA	SP!,{R0}											
 907 05e0 004020E9 		STMDB	R0!, {LR}											
 908 05e4 00E0A0E1 		MOV	LR, R0												
 909 05e8 0100BDE8 		LDMIA	SP!, {R0}											
 910 05ec FF7F4EE9 		STMDB	LR,{R0-LR}^											
 911 05f0 0000A0E1 		NOP														
 912 05f4 3CE04EE2 		SUB	LR, LR, #60											
 913 05f8 00004FE1 		MRS	R0, SPSR											
 914 05fc 01002EE9 		STMDB	LR!, {R0}											
 915 0600 10019FE5 		LDR	R0, =ulCriticalNesting								
 916 0604 000090E5 		LDR	R0, [R0]											
 917 0608 01002EE9 		STMDB	LR!, {R0}											
 918 060c 08019FE5 		LDR	R0, =pxCurrentTCB									
 919 0610 000090E5 		LDR	R0, [R0]											
 920 0614 00E080E5 		STR	LR, [R0]											
 921              		
 922              	@ 0 "" 2
 923 0618 48509FE5 		ldr	r5, .L36
 924 061c 003095E5 		ldr	r3, [r5, #0]
 925 0620 44409FE5 		ldr	r4, .L36+4
 926 0624 003094E5 		ldr	r3, [r4, #0]
 927              		.loc 1 43 0
 928 0628 40009FE5 		ldr	r0, .L36+8
 929 062c FEFFFFEB 		bl	AT91F_US_INTERRUPT
 930              		.loc 1 44 0
 931              	@ 44 "rtos/portable/GCC/AT91SAM7S256/perepherial/usart.c" 1
 932 0630 E4009FE5 		LDR		R0, =pxCurrentTCB								
 933 0634 000090E5 		LDR		R0, [R0]										
 934 0638 00E090E5 		LDR		LR, [R0]										
 935 063c D4009FE5 		LDR		R0, =ulCriticalNesting							
 936 0640 0200BEE8 		LDMFD	LR!, {R1}											
 937 0644 001080E5 		STR		R1, [R0]										
 938 0648 0100BEE8 		LDMFD	LR!, {R0}											
 939 064c 00F069E1 		MSR		SPSR, R0										
 940 0650 FF7FDEE8 		LDMFD	LR, {R0-R14}^										
 941 0654 0000A0E1 		NOP														
 942 0658 3CE09EE5 		LDR		LR, [LR, #+60]									
 943 065c 04F05EE2 		SUBS	PC, LR, #4											
 944              		
 945              	@ 0 "" 2
 946 0660 005095E5 		ldr	r5, [r5, #0]
 947 0664 004094E5 		ldr	r4, [r4, #0]
 948              		.loc 1 45 0
 949              	.L37:
 950              		.align	2
 951              	.L36:
 952 0668 00000000 		.word	ulCriticalNesting
 953 066c 00000000 		.word	pxCurrentTCB
 954 0670 00000000 		.word	COM0
 955              	.LFE290:
 957              		.align	2
 958              		.global	AT91F_USART_RECEIVE
 960              	AT91F_USART_RECEIVE:
 961              	.LFB296:
 962              		.loc 1 122 0
 963              		@ Function supports interworking.
 964              		@ args = 0, pretend = 0, frame = 4
 965              		@ frame_needed = 0, uses_anonymous_args = 0
 966              	.LVL36:
 967 0674 F04F2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 968              	.LCFI6:
 969 0678 04D04DE2 		sub	sp, sp, #4
 970              	.LCFI7:
 971 067c 0050A0E1 		mov	r5, r0
 972 0680 0190A0E1 		mov	r9, r1
 973 0684 04708DE2 		add	r7, sp, #4
 974 0688 042027E5 		str	r2, [r7, #-4]!
 975 068c 03B0A0E1 		mov	fp, r3
 976              		.loc 1 123 0
 977 0690 0280A0E1 		mov	r8, r2
 978 0694 1C2085E5 		str	r2, [r5, #28]
 979              		.loc 1 124 0
 980 0698 0060A0E3 		mov	r6, #0
 981 069c 186080E5 		str	r6, [r0, #24]
 982              		.loc 1 125 0
 983 06a0 044090E5 		ldr	r4, [r0, #4]
 984              	.LBB294:
 985              	.LBB295:
 986              		.loc 1 98 0
 987 06a4 FEFFFFEB 		bl	vPortEnterCritical
 988              	.LVL37:
 989              		.loc 1 100 0
 990 06a8 003094E5 		ldr	r3, [r4, #0]
 991 06ac 023B83E3 		orr	r3, r3, #2048
 992 06b0 003084E5 		str	r3, [r4, #0]
 993 06b4 20A0A0E3 		mov	sl, #32
 994 06b8 24A084E5 		str	sl, [r4, #36]
 995              	.LBB296:
 996              	.LBB297:
 997              		.loc 2 2526 0
 998 06bc 113CA0E3 		mov	r3, #4352
 999 06c0 083084E5 		str	r3, [r4, #8]
 1000              	.LBE297:
 1001              	.LBE296:
 1002              		.loc 1 102 0
 1003 06c4 146184E5 		str	r6, [r4, #276]
 1004              		.loc 1 103 0
 1005 06c8 146184E5 		str	r6, [r4, #276]
 1006              		.loc 1 104 0
 1007 06cc 009184E5 		str	r9, [r4, #256]
 1008              		.loc 1 105 0
 1009 06d0 048184E5 		str	r8, [r4, #260]
 1010              	.LBB298:
 1011              	.LBB299:
 1012              		.loc 2 2580 0
 1013 06d4 1030A0E3 		mov	r3, #16
 1014 06d8 003084E5 		str	r3, [r4, #0]
 1015              	.LBE299:
 1016              	.LBE298:
 1017              		.loc 1 108 0
 1018 06dc FEFFFFEB 		bl	vPortExitCritical
 1019              	.LBE295:
 1020              	.LBE294:
 1021              		.loc 1 126 0
 1022 06e0 0C0095E5 		ldr	r0, [r5, #12]
 1023 06e4 0D10A0E1 		mov	r1, sp
 1024 06e8 0B20A0E1 		mov	r2, fp
 1025 06ec 0630A0E1 		mov	r3, r6
 1026 06f0 FEFFFFEB 		bl	xQueueGenericReceive
 1027              		.loc 1 127 0
 1028 06f4 042095E5 		ldr	r2, [r5, #4]
 1029              	.LBB300:
 1030              	.LBB301:
 1031              		.loc 2 2538 0
 1032 06f8 013CA0E3 		mov	r3, #256
 1033 06fc 0C3082E5 		str	r3, [r2, #12]
 1034              	.LBE301:
 1035              	.LBE300:
 1036              		.loc 1 128 0
 1037 0700 043095E5 		ldr	r3, [r5, #4]
 1038              	.LBB302:
 1039              	.LBB303:
 1040              		.loc 2 2628 0
 1041 0704 00A083E5 		str	sl, [r3, #0]
 1042              	.LBE303:
 1043              	.LBE302:
 1044              		.loc 1 130 0
 1045 0708 180095E5 		ldr	r0, [r5, #24]
 1046 070c 04D08DE2 		add	sp, sp, #4
 1047 0710 F04FBDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1048 0714 1EFF2FE1 		bx	lr
 1049              	.LFE296:
 1051              		.comm	COM0,32,4
 1052              		.comm	COM1,32,4
 1215              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 usart.c
     /tmp/ccgDOmhh.s:22     .text:00000000 AT91F_USART_OPEN
     /tmp/ccgDOmhh.s:30     .text:00000000 $a
     /tmp/ccgDOmhh.s:571    .text:00000378 $d
                            *COM*:00000020 COM0
     /tmp/ccgDOmhh.s:893    .text:000005cc AT91_US0_ISR_ENTRY
                            *COM*:00000020 COM1
     /tmp/ccgDOmhh.s:826    .text:00000524 AT91_US1_ISR_ENTRY
     /tmp/ccgDOmhh.s:583    .text:00000394 AT91F_US_START_RECEIVE
     /tmp/ccgDOmhh.s:590    .text:00000394 $a
     /tmp/ccgDOmhh.s:637    .text:000003ec AT91F_USART_SEND
     /tmp/ccgDOmhh.s:717    .text:00000464 AT91F_US_INTERRUPT
     /tmp/ccgDOmhh.s:885    .text:000005c0 $d
     /tmp/ccgDOmhh.s:902    .text:000005cc $a
     /tmp/ccgDOmhh.s:952    .text:00000668 $d
     /tmp/ccgDOmhh.s:960    .text:00000674 AT91F_USART_RECEIVE
     /tmp/ccgDOmhh.s:967    .text:00000674 $a
     /tmp/ccgDOmhh.s:1055   .debug_frame:00000000 $d
     /tmp/ccgDOmhh.s:1219   .debug_loc:00000000 $d
     /tmp/ccgDOmhh.s:1216   .text:00000718 $d

UNDEFINED SYMBOLS
__udivsi3
vPortEnterCritical
ErrorCreate
xQueueCreate
vPortExitCritical
xQueueGenericReceive
xQueueGenericSendFromISR
vTaskSwitchContext
ulCriticalNesting
pxCurrentTCB
