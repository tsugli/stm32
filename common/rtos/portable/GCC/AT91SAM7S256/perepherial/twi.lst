   1              		.file	"twi.c"
   9              	.Ltext0:
  10              		.align	2
  11              		.global	AT91F_SetTwiClock
  13              	AT91F_SetTwiClock:
  14              	.LFB291:
  15              		.file 1 "rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c"
   1:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*--------------------------------------------------------------------------------------
   2:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*      ATMEL Microcontroller Software Support  -  ROUSSET  -
   3:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*--------------------------------------------------------------------------------------
   4:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* The software is delivered "AS IS" without warranty or condition of any
   5:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* kind, either express, implied or statutory. This includes without
   6:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* limitation any warranty or condition with respect to merchantability or
   7:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* fitness for any particular purpose, or against the infringements of
   8:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* intellectual property rights of others.
   9:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*--------------------------------------------------------------------------------------
  10:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* File Name           : twi.c
  11:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* Object              : Basic TWI EEPROM driver
  12:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* Translator          :
  13:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* 1.0 25/11/02 NL		: Creation
  14:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* 1.1 31/Jan/05 JPP   : Clean For basic
  15:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*--------------------------------------------------------------------------------------
  16:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  17:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** // Include Standard LIB  files
  18:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** #include "FreeRTOS.h"
  19:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** #include "board.h"
  20:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** #include "twi.h"
  21:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** #include "task.h"
  22:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** #include "queue.h"
  23:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** #include "semphr.h"
  24:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  25:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** #include "error.h"
  26:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  27:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** #define TWI_INTERRUPT_LEVEL	7
  28:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //#ifndef AT91C_TWI_CLOCK
  29:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** #define AT91C_TWI_CLOCK 	100000
  30:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //#endif
  31:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  32:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //#ifndef AT91C_TWI_TMO_VOL
  33:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** #define AT91C_TWI_TMO_VOL(s)    ( 2000 )
  34:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //#endif
  35:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  36:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****  typedef enum
  37:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****  {
  38:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   FREE = 0,
  39:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   ON_READ_DATA = 1,
  40:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   ON_WRITE_DATA =2
  41:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****  }TWI_TRANSFER_STATUS;
  42:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****  volatile TWI_TRANSFER_STATUS TWI_TransferStatus;
  43:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  44:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  45:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** AT91PS_TWI TWI = AT91C_BASE_TWI;
  46:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  47:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** volatile xQueueHandle TWI_QUEUE;
  48:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** xSemaphoreHandle TWI_Semaphore = NULL;
  49:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  50:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** volatile ErrorHandle TWI_NACK_Error,TWI_TMO_Error,TWI_SEM_Error,TWI_WriteData_Error,TWI_OVRE_Error;
  51:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  52:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  53:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** /* Interrupt entry point written in the assembler file serialISR.s79. */
  54:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** void AT91_TWI_ISR_ENTRY( void )  __attribute__((naked));
  55:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** void AT91_TWI_ISR(void);
  56:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  57:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*------------------------- Internal Function --------------------------------
  58:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //===============================================================================================
  59:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** void AT91_TWI_ISR_ENTRY( void )
  60:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** {
  61:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         portSAVE_CONTEXT();
  62:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         AT91_TWI_ISR();
  63:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         portRESTORE_CONTEXT();
  64:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** }
  65:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  66:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  67:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** volatile unsigned int TWI_Bytes2Transfere;
  68:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** volatile unsigned int TWI_ConitiosTransaction = 0;
  69:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** volatile unsigned int TWI_DeviceAddr;
  70:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  71:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** volatile unsigned char *TWI_DataPointer;
  72:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  73:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  74:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** #define ERROR (AT91C_TWI_NACK)
  75:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  76:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** void AT91F_SetTwiClock(void)
  77:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** {
  16              		.loc 1 77 0
  17              		@ Function supports interworking.
  18              		@ args = 0, pretend = 0, frame = 0
  19              		@ frame_needed = 0, uses_anonymous_args = 0
  20              		@ link register save eliminated.
  78:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   int sclock;
  79:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	/* Here, CKDIV = 1 and CHDIV=CLDIV  ==> CLDIV = CHDIV = 1/4*((Fmclk/FTWI) -6)*/
  80:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	sclock = (10*MCK /AT91C_TWI_CLOCK);
  81:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	if (sclock % 10 >= 5)
  82:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 		sclock = (sclock /10) - 5;
  83:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	else
  84:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 		sclock = (sclock /10)- 6;
  85:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	sclock = (sclock + (4 - sclock %4)) >> 2;	// div 4
  86:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         AT91C_BASE_TWI->TWI_CWGR = ( 1<<16 ) | (sclock << 8) | sclock  ;
  21              		.loc 1 86 0
  22 0000 472AE0E3 		mvn	r2, #290816
  23 0004 0F2C42E2 		sub	r2, r2, #3840
  24 0008 5E3BA0E3 		mov	r3, #96256
  25 000c 893043E2 		sub	r3, r3, #137
  26 0010 EF3002E5 		str	r3, [r2, #-239]
  87:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** }
  27              		.loc 1 87 0
  28 0014 1EFF2FE1 		bx	lr
  29              	.LFE291:
  31              		.align	2
  32              		.global	RESET_TWI
  34              	RESET_TWI:
  35              	.LFB292:
  88:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
  89:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** void RESET_TWI()
  90:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** {
  36              		.loc 1 90 0
  37              		@ Function supports interworking.
  38              		@ args = 0, pretend = 0, frame = 0
  39              		@ frame_needed = 0, uses_anonymous_args = 0
  40 0018 30402DE9 		stmfd	sp!, {r4, r5, lr}
  41              	.LCFI0:
  91:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   uint8 data = AT91C_BASE_TWI->TWI_RHR;
  42              		.loc 1 91 0
  43 001c 473AE0E3 		mvn	r3, #290816
  44 0020 0F3C43E2 		sub	r3, r3, #3840
  45 0024 CF2013E5 		ldr	r2, [r3, #-207]
  92:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   uint16 status = AT91C_BASE_TWI->TWI_SR;
  46              		.loc 1 92 0
  47 0028 DF2013E5 		ldr	r2, [r3, #-223]
  48              	.LBB61:
  49              	.LBB62:
  50              		.file 2 "./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h"
   1:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
   2:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*         ATMEL Microcontroller Software Support  -  ROUSSET  -
   3:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
   4:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* DISCLAIMER:  THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
   5:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
   6:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
   7:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
   8:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
   9:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  10:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  11:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  12:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  13:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  14:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
  15:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* File Name           : lib_AT91SAM7S256.h
  16:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Object              : AT91SAM7S256 inlined functions
  17:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Generated           : AT91 SW Application Group  01/16/2006 (16:36:07)
  18:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*
  19:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_MC_SAM7S.h/1.1/Thu Mar 25 15:19:14 2004//
  20:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pdc.h/1.2/Tue Jul  2 13:29:40 2002//
  21:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_dbgu.h/1.1/Thu Aug 25 12:56:22 2005//
  22:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_VREG_6085B.h/1.1/Tue Feb  1 16:20:47 2005//
  23:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_ssc.h/1.4/Fri Jan 31 12:19:20 2003//
  24:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_spi2.h/1.2/Tue Aug 23 15:37:28 2005//
  25:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_PWM_SAM.h/1.3/Thu Jan 22 10:10:50 2004//
  26:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_tc_1753b.h/1.1/Fri Jan 31 12:20:02 2003//
  27:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pitc_6079A.h/1.2/Tue Nov  9 14:43:56 2004//
  28:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pmc_SAM7S.h/1.5/Fri Nov  4 09:37:21 2005//
  29:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_adc.h/1.6/Fri Oct 17 09:12:38 2003//
  30:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_rstc_6098A.h/1.1/Wed Oct  6 10:39:20 2004//
  31:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_rttc_6081A.h/1.1/Wed Oct  6 10:39:38 2004//
  32:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pio.h/1.3/Fri Jan 31 12:18:56 2003//
  33:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_twi.h/1.3/Mon Jul 19 14:27:58 2004//
  34:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_wdtc_6080A.h/1.1/Wed Oct  6 10:38:30 2004//
  35:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_usart.h/1.5/Thu Nov 21 16:01:54 2002//
  36:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_udp.h/1.5/Tue Aug 30 12:13:47 2005//
  37:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_aic_6075b.h/1.2/Thu Jul  7 07:48:22 2005//
  38:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
  39:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  40:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #ifndef lib_AT91SAM7S256_H
  41:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define lib_AT91SAM7S256_H
  42:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  43:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
  44:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR AIC
  45:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
  46:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_AIC_BRANCH_OPCODE ((void (*) ()) 0xE51FFF20) // ldr, pc, [pc, #-&F20]
  47:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  48:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  49:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_ConfigureIt
  50:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Interrupt Handler Initialization
  51:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  52:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_AIC_ConfigureIt (
  53:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,  // \arg pointer to the AIC registers
  54:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id,     // \arg interrupt number to initialize
  55:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int priority,   // \arg priority to give to the interrupt
  56:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int src_type,   // \arg activation and sense of activation
  57:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*newHandler) () ) // \arg address of the interrupt handler
  58:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
  59:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int oldHandler;
  60:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     unsigned int mask ;
  61:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  62:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     oldHandler = pAic->AIC_SVR[irq_id];
  63:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  64:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     mask = 0x1 << irq_id ;
  65:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable the interrupt on the interrupt controller
  66:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_IDCR = mask ;
  67:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Save the interrupt handler routine pointer and the interrupt priority
  68:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_SVR[irq_id] = (unsigned int) newHandler ;
  69:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Store the Source Mode Register
  70:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_SMR[irq_id] = src_type | priority  ;
  71:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Clear the interrupt on the interrupt controller
  72:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_ICCR = mask ;
  73:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  74:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return oldHandler;
  75:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
  76:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  77:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  78:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_EnableIt
  79:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable corresponding IT number
  80:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  81:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_EnableIt (
  82:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,      // \arg pointer to the AIC registers
  83:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id ) // \arg interrupt number to initialize
  84:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
  85:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Enable the interrupt on the interrupt controller
  86:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_IECR = 0x1 << irq_id ;
  87:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
  88:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  89:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  90:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_DisableIt
  91:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable corresponding IT number
  92:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  93:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_DisableIt (
  94:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,      // \arg pointer to the AIC registers
  95:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id ) // \arg interrupt number to initialize
  96:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
  97:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     unsigned int mask = 0x1 << irq_id;
  98:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable the interrupt on the interrupt controller
  99:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_IDCR = mask ;
 100:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Clear the interrupt on the Interrupt Controller ( if one is pending )
 101:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_ICCR = mask ;
 102:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 103:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 104:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 105:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_ClearIt
 106:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Clear corresponding IT number
 107:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 108:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_ClearIt (
 109:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 110:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg interrupt number to initialize
 111:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 112:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Clear the interrupt on the Interrupt Controller ( if one is pending )
 113:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_ICCR = (0x1 << irq_id);
 114:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 115:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 116:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 117:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_AcknowledgeIt
 118:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Acknowledge corresponding IT number
 119:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 120:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_AcknowledgeIt (
 121:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic)     // \arg pointer to the AIC registers
 122:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 123:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_EOICR = pAic->AIC_EOICR;
 124:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 125:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 126:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 127:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_SetExceptionVector
 128:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure vector handler
 129:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 130:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int  AT91F_AIC_SetExceptionVector (
 131:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int *pVector, // \arg pointer to the AIC registers
 132:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*Handler) () )   // \arg Interrupt Handler
 133:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 134:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int oldVector = *pVector;
 135:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 136:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	if ((unsigned int) Handler == (unsigned int) AT91C_AIC_BRANCH_OPCODE)
 137:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		*pVector = (unsigned int) AT91C_AIC_BRANCH_OPCODE;
 138:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	else
 139:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		*pVector = (((((unsigned int) Handler) - ((unsigned int) pVector) - 0x8) >> 2) & 0x00FFFFFF) | 0x
 140:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 141:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return oldVector;
 142:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 143:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 144:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 145:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_Trig
 146:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Trig an IT
 147:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 148:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void  AT91F_AIC_Trig (
 149:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 150:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg interrupt number
 151:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 152:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pAic->AIC_ISCR = (0x1 << irq_id) ;
 153:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 154:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 155:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 156:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_IsActive
 157:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if an IT is active
 158:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 159:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int  AT91F_AIC_IsActive (
 160:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 161:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg Interrupt Number
 162:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 163:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (pAic->AIC_ISR & (0x1 << irq_id));
 164:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 165:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 166:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 167:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_IsPending
 168:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if an IT is pending
 169:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 170:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int  AT91F_AIC_IsPending (
 171:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 172:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg Interrupt Number
 173:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 174:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (pAic->AIC_IPR & (0x1 << irq_id));
 175:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 176:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 177:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 178:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_Open
 179:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set exception vectors and AIC registers to default values
 180:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 181:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_Open(
 182:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,        // \arg pointer to the AIC registers
 183:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*IrqHandler) (),  // \arg Default IRQ vector exception
 184:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*FiqHandler) (),  // \arg Default FIQ vector exception
 185:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*DefaultHandler)  (), // \arg Default Handler set in ISR
 186:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*SpuriousHandler) (), // \arg Default Spurious Handler
 187:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int protectMode)   // \arg Debug Control Register
 188:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 189:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	int i;
 190:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 191:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Disable all interrupts and set IVR to the default handler
 192:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	for (i = 0; i < 32; ++i) {
 193:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_AIC_DisableIt(pAic, i);
 194:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_AIC_ConfigureIt(pAic, i, AT91C_AIC_PRIOR_LOWEST, AT91C_AIC_SRCTYPE_HIGH_LEVEL, DefaultHandl
 195:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 196:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 197:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Set the IRQ exception vector
 198:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_AIC_SetExceptionVector((unsigned int *) 0x18, IrqHandler);
 199:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Set the Fast Interrupt exception vector
 200:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_AIC_SetExceptionVector((unsigned int *) 0x1C, FiqHandler);
 201:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 202:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pAic->AIC_SPU = (unsigned int) SpuriousHandler;
 203:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pAic->AIC_DCR = protectMode;
 204:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 205:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
 206:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PDC
 207:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
 208:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 209:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetNextRx
 210:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the next receive transfer descriptor
 211:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 212:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetNextRx (
 213:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,     // \arg pointer to a PDC controller
 214:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *address,       // \arg address to the next bloc to be received
 215:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int bytes)  // \arg number of bytes to be received
 216:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 217:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_RNPR = (unsigned int) address;
 218:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_RNCR = bytes;
 219:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 220:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 221:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 222:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetNextTx
 223:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the next transmit transfer descriptor
 224:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 225:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetNextTx (
 226:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,       // \arg pointer to a PDC controller
 227:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *address,         // \arg address to the next bloc to be transmitted
 228:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int bytes)    // \arg number of bytes to be transmitted
 229:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 230:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_TNPR = (unsigned int) address;
 231:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_TNCR = bytes;
 232:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 233:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 234:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 235:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetRx
 236:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the receive transfer descriptor
 237:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 238:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetRx (
 239:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,       // \arg pointer to a PDC controller
 240:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *address,         // \arg address to the next bloc to be received
 241:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int bytes)    // \arg number of bytes to be received
 242:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 243:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_RPR = (unsigned int) address;
 244:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_RCR = bytes;
 245:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 246:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 247:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 248:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetTx
 249:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the transmit transfer descriptor
 250:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 251:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetTx (
 252:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,       // \arg pointer to a PDC controller
 253:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *address,         // \arg address to the next bloc to be transmitted
 254:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int bytes)    // \arg number of bytes to be transmitted
 255:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 256:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_TPR = (unsigned int) address;
 257:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_TCR = bytes;
 258:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 259:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 260:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 261:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_EnableTx
 262:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable transmit
 263:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 264:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_EnableTx (
 265:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 266:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 267:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_TXTEN;
 268:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 269:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 270:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 271:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_EnableRx
 272:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable receive
 273:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 274:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_EnableRx (
 275:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 276:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 277:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_RXTEN;
 278:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 279:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 280:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 281:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_DisableTx
 282:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable transmit
 283:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 284:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_DisableTx (
 285:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 286:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 287:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_TXTDIS;
 288:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 289:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 290:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 291:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_DisableRx
 292:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable receive
 293:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 294:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_DisableRx (
 295:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 296:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 297:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_RXTDIS;
 298:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 299:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 300:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 301:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsTxEmpty
 302:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if the current transfer descriptor has been sent
 303:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 304:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsTxEmpty ( // \return return 1 if transfer is complete
 305:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 306:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 307:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_TCR);
 308:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 309:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 310:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 311:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsNextTxEmpty
 312:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if the next transfer descriptor has been moved to the current td
 313:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 314:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsNextTxEmpty ( // \return return 1 if transfer is complete
 315:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 316:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 317:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_TNCR);
 318:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 319:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 320:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 321:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsRxEmpty
 322:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if the current transfer descriptor has been filled
 323:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 324:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsRxEmpty ( // \return return 1 if transfer is complete
 325:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 326:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 327:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_RCR);
 328:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 329:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 330:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 331:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsNextRxEmpty
 332:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if the next transfer descriptor has been moved to the current td
 333:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 334:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsNextRxEmpty ( // \return return 1 if transfer is complete
 335:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 336:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 337:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_RNCR);
 338:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 339:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 340:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 341:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_Open
 342:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Open PDC: disable TX and RX reset transfer descriptors, re-enable RX and TX
 343:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 344:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_Open (
 345:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC)       // \arg pointer to a PDC controller
 346:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 347:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable the RX and TX PDC transfer requests
 348:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableRx(pPDC);
 349:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableTx(pPDC);
 350:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 351:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Reset all Counter register Next buffer first
 352:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextTx(pPDC, (char *) 0, 0);
 353:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextRx(pPDC, (char *) 0, 0);
 354:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetTx(pPDC, (char *) 0, 0);
 355:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetRx(pPDC, (char *) 0, 0);
 356:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 357:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Enable the RX and TX PDC transfer requests
 358:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_EnableRx(pPDC);
 359:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_EnableTx(pPDC);
 360:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 361:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 362:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 363:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_Close
 364:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Close PDC: disable TX and RX reset transfer descriptors
 365:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 366:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_Close (
 367:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC)       // \arg pointer to a PDC controller
 368:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 369:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable the RX and TX PDC transfer requests
 370:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableRx(pPDC);
 371:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableTx(pPDC);
 372:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 373:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Reset all Counter register Next buffer first
 374:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextTx(pPDC, (char *) 0, 0);
 375:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextRx(pPDC, (char *) 0, 0);
 376:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetTx(pPDC, (char *) 0, 0);
 377:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetRx(pPDC, (char *) 0, 0);
 378:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 379:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 380:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 381:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 382:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SendFrame
 383:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Close PDC: disable TX and RX reset transfer descriptors
 384:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 385:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PDC_SendFrame(
 386:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,
 387:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pBuffer,
 388:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
 389:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
 390:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
 391:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 392:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	if (AT91F_PDC_IsTxEmpty(pPDC)) {
 393:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* Buffer and next buffer can be initialized
 394:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetTx(pPDC, pBuffer, szBuffer);
 395:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextTx(pPDC, pNextBuffer, szNextBuffer);
 396:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 2;
 397:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 398:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	else if (AT91F_PDC_IsNextTxEmpty(pPDC)) {
 399:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* Only one buffer can be initialized
 400:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextTx(pPDC, pBuffer, szBuffer);
 401:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 1;
 402:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 403:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	else {
 404:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* All buffer are in use...
 405:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 0;
 406:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 407:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 408:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 409:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 410:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_ReceiveFrame
 411:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Close PDC: disable TX and RX reset transfer descriptors
 412:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 413:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PDC_ReceiveFrame (
 414:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,
 415:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pBuffer,
 416:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
 417:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
 418:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
 419:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 420:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	if (AT91F_PDC_IsRxEmpty(pPDC)) {
 421:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* Buffer and next buffer can be initialized
 422:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetRx(pPDC, pBuffer, szBuffer);
 423:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextRx(pPDC, pNextBuffer, szNextBuffer);
 424:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 2;
 425:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 426:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	else if (AT91F_PDC_IsNextRxEmpty(pPDC)) {
 427:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* Only one buffer can be initialized
 428:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextRx(pPDC, pBuffer, szBuffer);
 429:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 1;
 430:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 431:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	else {
 432:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* All buffer are in use...
 433:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 0;
 434:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 435:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 436:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
 437:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR DBGU
 438:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
 439:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 440:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_InterruptEnable
 441:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable DBGU Interrupt
 442:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 443:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_DBGU_InterruptEnable(
 444:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu,   // \arg  pointer to a DBGU controller
 445:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  dbgu interrupt to be enabled
 446:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 447:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pDbgu->DBGU_IER = flag;
 448:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 449:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 450:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 451:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_InterruptDisable
 452:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable DBGU Interrupt
 453:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 454:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_DBGU_InterruptDisable(
 455:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu,   // \arg  pointer to a DBGU controller
 456:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  dbgu interrupt to be disabled
 457:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 458:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pDbgu->DBGU_IDR = flag;
 459:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 460:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 461:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 462:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_GetInterruptMaskStatus
 463:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return DBGU Interrupt Mask Status
 464:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 465:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_DBGU_GetInterruptMaskStatus( // \return DBGU Interrupt Mask Status
 466:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu) // \arg  pointer to a DBGU controller
 467:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 468:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pDbgu->DBGU_IMR;
 469:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 470:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 471:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 472:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_IsInterruptMasked
 473:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if DBGU Interrupt is Masked
 474:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 475:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_DBGU_IsInterruptMasked(
 476:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu,   // \arg  pointer to a DBGU controller
 477:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 478:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 479:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_DBGU_GetInterruptMaskStatus(pDbgu) & flag);
 480:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 481:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 482:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
 483:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PIO
 484:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
 485:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 486:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgPeriph
 487:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable pins to be drived by peripheral
 488:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 489:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgPeriph(
 490:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 491:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int periphAEnable,  // \arg PERIPH A to enable
 492:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int periphBEnable)  // \arg PERIPH B to enable
 493:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 494:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 495:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_ASR = periphAEnable;
 496:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_BSR = periphBEnable;
 497:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_PDR = (periphAEnable | periphBEnable); // Set in Periph mode
 498:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 499:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 500:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 501:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgOutput
 502:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PIO in output mode
 503:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 504:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgOutput(
 505:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 506:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int pioEnable)      // \arg PIO to be enabled
 507:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 508:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_PER = pioEnable; // Set in PIO mode
 509:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_OER = pioEnable; // Configure in Output
 510:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 511:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 512:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 513:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgInput
 514:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PIO in input mode
 515:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 516:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgInput(
 517:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 518:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int inputEnable)      // \arg PIO to be enabled
 519:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 520:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Disable output
 521:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_ODR  = inputEnable;
 522:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_PER  = inputEnable;
 523:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 524:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 525:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 526:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgOpendrain
 527:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure PIO in open drain
 528:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 529:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgOpendrain(
 530:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 531:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int multiDrvEnable) // \arg pio to be configured in open drain
 532:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 533:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Configure the multi-drive option
 534:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_MDDR = ~multiDrvEnable;
 535:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_MDER = multiDrvEnable;
 536:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 537:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 538:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 539:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgPullup
 540:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable pullup on PIO
 541:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 542:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgPullup(
 543:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 544:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int pullupEnable)   // \arg enable pullup on PIO
 545:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 546:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		// Connect or not Pullup
 547:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_PPUDR = ~pullupEnable;
 548:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_PPUER = pullupEnable;
 549:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 550:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 551:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 552:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgDirectDrive
 553:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable direct drive on PIO
 554:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 555:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgDirectDrive(
 556:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 557:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int directDrive)    // \arg PIO to be configured with direct drive
 558:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 559:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 560:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Configure the Direct Drive
 561:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_OWDR  = ~directDrive;
 562:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_OWER  = directDrive;
 563:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 564:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 565:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 566:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgInputFilter
 567:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable input filter on input PIO
 568:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 569:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgInputFilter(
 570:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 571:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int inputFilter)    // \arg PIO to be configured with input filter
 572:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 573:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 574:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Configure the Direct Drive
 575:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_IFDR  = ~inputFilter;
 576:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_IFER  = inputFilter;
 577:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 578:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 579:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 580:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInput
 581:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO input value
 582:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 583:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInput( // \return PIO input
 584:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 585:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 586:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPio->PIO_PDSR;
 587:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 588:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 589:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 590:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInputSet
 591:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO is input flag is active
 592:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 593:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInputSet(
 594:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 595:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  flag to be tested
 596:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 597:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_PIO_GetInput(pPio) & flag);
 598:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 599:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 600:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 601:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 602:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_SetOutput
 603:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set to 1 output PIO
 604:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 605:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_SetOutput(
 606:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 607:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  output to be set
 608:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 609:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_SODR = flag;
 610:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 611:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 612:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 613:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_ClearOutput
 614:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set to 0 output PIO
 615:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 616:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_ClearOutput(
 617:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 618:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  output to be cleared
 619:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 620:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_CODR = flag;
 621:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 622:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 623:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 624:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_ForceOutput
 625:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Force output when Direct drive option is enabled
 626:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 627:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_ForceOutput(
 628:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 629:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  output to be forced
 630:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 631:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_ODSR = flag;
 632:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 633:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 634:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 635:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_Enable
 636:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PIO
 637:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 638:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_Enable(
 639:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 640:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be enabled
 641:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 642:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_PER = flag;
 643:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 644:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 645:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 646:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_Disable
 647:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable PIO
 648:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 649:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_Disable(
 650:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 651:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be disabled
 652:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 653:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_PDR = flag;
 654:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 655:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 656:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 657:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetStatus
 658:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Status
 659:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 660:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetStatus( // \return PIO Status
 661:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 662:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 663:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_PSR;
 664:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 665:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 666:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 667:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsSet
 668:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO is Set
 669:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 670:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsSet(
 671:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 672:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 673:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 674:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetStatus(pPio) & flag);
 675:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 676:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 677:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 678:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputEnable
 679:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Output Enable PIO
 680:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 681:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputEnable(
 682:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 683:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output to be enabled
 684:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 685:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_OER = flag;
 686:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 687:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 688:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 689:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputDisable
 690:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Output Enable PIO
 691:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 692:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputDisable(
 693:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 694:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output to be disabled
 695:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 696:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_ODR = flag;
 697:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 698:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 699:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 700:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetOutputStatus
 701:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Output Status
 702:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 703:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetOutputStatus( // \return PIO Output Status
 704:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 705:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 706:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_OSR;
 707:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 708:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 709:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 710:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsOuputSet
 711:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Output is Set
 712:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 713:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsOutputSet(
 714:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 715:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 716:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 717:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetOutputStatus(pPio) & flag);
 718:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 719:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 720:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 721:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InputFilterEnable
 722:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Input Filter Enable PIO
 723:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 724:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InputFilterEnable(
 725:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 726:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio input filter to be enabled
 727:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 728:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_IFER = flag;
 729:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 730:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 731:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 732:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InputFilterDisable
 733:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Input Filter Disable PIO
 734:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 735:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InputFilterDisable(
 736:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 737:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio input filter to be disabled
 738:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 739:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_IFDR = flag;
 740:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 741:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 742:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 743:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInputFilterStatus
 744:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Input Filter Status
 745:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 746:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInputFilterStatus( // \return PIO Input Filter Status
 747:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 748:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 749:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_IFSR;
 750:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 751:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 752:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 753:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInputFilterSet
 754:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Input filter is Set
 755:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 756:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInputFilterSet(
 757:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 758:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 759:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 760:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetInputFilterStatus(pPio) & flag);
 761:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 762:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 763:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 764:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetOutputDataStatus
 765:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Output Data Status
 766:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 767:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetOutputDataStatus( // \return PIO Output Data Status
 768:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 769:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 770:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_ODSR;
 771:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 772:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 773:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 774:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InterruptEnable
 775:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PIO Interrupt
 776:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 777:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InterruptEnable(
 778:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 779:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio interrupt to be enabled
 780:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 781:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_IER = flag;
 782:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 783:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 784:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 785:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InterruptDisable
 786:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable PIO Interrupt
 787:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 788:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InterruptDisable(
 789:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 790:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio interrupt to be disabled
 791:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 792:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_IDR = flag;
 793:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 794:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 795:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 796:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInterruptMaskStatus
 797:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Interrupt Mask Status
 798:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 799:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInterruptMaskStatus( // \return PIO Interrupt Mask Status
 800:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 801:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 802:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_IMR;
 803:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 804:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 805:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 806:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInterruptStatus
 807:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Interrupt Status
 808:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 809:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInterruptStatus( // \return PIO Interrupt Status
 810:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 811:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 812:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_ISR;
 813:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 814:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 815:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 816:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInterruptMasked
 817:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Interrupt is Masked
 818:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 819:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInterruptMasked(
 820:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 821:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 822:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 823:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetInterruptMaskStatus(pPio) & flag);
 824:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 825:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 826:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 827:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInterruptSet
 828:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Interrupt is Set
 829:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 830:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInterruptSet(
 831:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 832:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 833:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 834:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetInterruptStatus(pPio) & flag);
 835:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 836:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 837:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 838:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_MultiDriverEnable
 839:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Multi Driver Enable PIO
 840:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 841:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_MultiDriverEnable(
 842:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 843:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be enabled
 844:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 845:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_MDER = flag;
 846:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 847:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 848:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 849:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_MultiDriverDisable
 850:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Multi Driver Disable PIO
 851:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 852:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_MultiDriverDisable(
 853:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 854:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be disabled
 855:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 856:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_MDDR = flag;
 857:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 858:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 859:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 860:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetMultiDriverStatus
 861:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Multi Driver Status
 862:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 863:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetMultiDriverStatus( // \return PIO Multi Driver Status
 864:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 865:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 866:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_MDSR;
 867:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 868:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 869:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 870:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsMultiDriverSet
 871:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO MultiDriver is Set
 872:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 873:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsMultiDriverSet(
 874:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 875:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 876:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 877:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetMultiDriverStatus(pPio) & flag);
 878:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 879:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 880:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 881:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_A_RegisterSelection
 882:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief PIO A Register Selection
 883:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 884:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_A_RegisterSelection(
 885:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 886:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio A register selection
 887:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 888:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_ASR = flag;
 889:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 890:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 891:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 892:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_B_RegisterSelection
 893:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief PIO B Register Selection
 894:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 895:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_B_RegisterSelection(
 896:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 897:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio B register selection
 898:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 899:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_BSR = flag;
 900:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 901:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 902:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 903:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_Get_AB_RegisterStatus
 904:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Interrupt Status
 905:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 906:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_Get_AB_RegisterStatus( // \return PIO AB Register Status
 907:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 908:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 909:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_ABSR;
 910:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 911:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 912:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 913:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsAB_RegisterSet
 914:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO AB Register is Set
 915:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 916:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsAB_RegisterSet(
 917:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 918:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 919:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 920:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_Get_AB_RegisterStatus(pPio) & flag);
 921:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 922:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 923:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 924:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputWriteEnable
 925:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Output Write Enable PIO
 926:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 927:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputWriteEnable(
 928:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 929:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output write to be enabled
 930:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 931:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_OWER = flag;
 932:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 933:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 934:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 935:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputWriteDisable
 936:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Output Write Disable PIO
 937:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 938:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputWriteDisable(
 939:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 940:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output write to be disabled
 941:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 942:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_OWDR = flag;
 943:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 944:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 945:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 946:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetOutputWriteStatus
 947:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Output Write Status
 948:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 949:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetOutputWriteStatus( // \return PIO Output Write Status
 950:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 951:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 952:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_OWSR;
 953:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 954:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 955:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 956:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsOutputWriteSet
 957:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO OutputWrite is Set
 958:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 959:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsOutputWriteSet(
 960:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 961:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 962:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 963:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetOutputWriteStatus(pPio) & flag);
 964:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 965:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 966:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 967:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetCfgPullup
 968:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Configuration Pullup
 969:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 970:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetCfgPullup( // \return PIO Configuration Pullup
 971:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 972:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 973:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_PPUSR;
 974:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 975:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 976:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 977:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsOutputDataStatusSet
 978:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Output Data Status is Set
 979:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 980:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsOutputDataStatusSet(
 981:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 982:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 983:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 984:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetOutputDataStatus(pPio) & flag);
 985:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 986:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 987:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 988:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsCfgPullupStatusSet
 989:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Configuration Pullup Status is Set
 990:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 991:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsCfgPullupStatusSet(
 992:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 993:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 994:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 995:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (~AT91F_PIO_GetCfgPullup(pPio) & flag);
 996:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 997:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 998:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
 999:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PMC
1000:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1001:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1002:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_CfgSysClkEnableReg
1003:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure the System Clock Enable Register of the PMC controller
1004:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1005:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_CfgSysClkEnableReg (
1006:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1007:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1008:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1009:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the SCER register
1010:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_SCER = mode;
1011:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1012:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1013:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1014:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_CfgSysClkDisableReg
1015:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure the System Clock Disable Register of the PMC controller
1016:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1017:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_CfgSysClkDisableReg (
1018:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1019:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1020:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1021:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the SCDR register
1022:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_SCDR = mode;
1023:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1024:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1025:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1026:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetSysClkStatusReg
1027:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the System Clock Status Register of the PMC controller
1028:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1029:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetSysClkStatusReg (
1030:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC // pointer to a CAN controller
1031:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
1032:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1033:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPMC->PMC_SCSR;
1034:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1035:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1036:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1037:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_EnablePeriphClock
1038:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable peripheral clock
1039:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1040:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_EnablePeriphClock (
1041:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1042:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int periphIds)  // \arg IDs of peripherals
1043:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1044:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_PCER = periphIds;
1045:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1046:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1047:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1048:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_DisablePeriphClock
1049:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable peripheral clock
1050:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1051:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_DisablePeriphClock (
1052:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1053:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int periphIds)  // \arg IDs of peripherals
1054:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1055:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_PCDR = periphIds;
1056:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1057:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1058:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1059:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetPeriphClock
1060:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Get peripheral clock status
1061:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1062:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetPeriphClock (
1063:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC) // \arg pointer to PMC controller
1064:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1065:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPMC->PMC_PCSR;
1066:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1067:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1068:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1069:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_CfgMainOscillatorReg
1070:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Cfg the main oscillator
1071:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1072:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_CKGR_CfgMainOscillatorReg (
1073:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
1074:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1075:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1076:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_MOR = mode;
1077:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1078:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1079:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1080:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_GetMainOscillatorReg
1081:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Cfg the main oscillator
1082:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1083:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_CKGR_GetMainOscillatorReg (
1084:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
1085:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1086:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pCKGR->CKGR_MOR;
1087:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1088:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1089:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1090:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_EnableMainOscillator
1091:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable the main oscillator
1092:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1093:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_CKGR_EnableMainOscillator(
1094:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
1095:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1096:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_MOR |= AT91C_CKGR_MOSCEN;
1097:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1098:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1099:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1100:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_DisableMainOscillator
1101:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable the main oscillator
1102:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1103:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_CKGR_DisableMainOscillator (
1104:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
1105:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1106:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_MOR &= ~AT91C_CKGR_MOSCEN;
1107:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1108:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1109:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1110:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_CfgMainOscStartUpTime
1111:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Cfg MOR Register according to the main osc startup time
1112:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1113:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_CKGR_CfgMainOscStartUpTime (
1114:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
1115:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int startup_time,  // \arg main osc startup time in microsecond (us)
1116:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int slowClock)  // \arg slowClock in Hz
1117:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1118:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_MOR &= ~AT91C_CKGR_OSCOUNT;
1119:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_MOR |= ((slowClock * startup_time)/(8*1000000)) << 8;
1120:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1121:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1122:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1123:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_GetMainClockFreqReg
1124:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Cfg the main oscillator
1125:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1126:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_CKGR_GetMainClockFreqReg (
1127:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
1128:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1129:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pCKGR->CKGR_MCFR;
1130:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1131:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1132:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1133:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_GetMainClock
1134:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return Main clock in Hz
1135:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1136:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_CKGR_GetMainClock (
1137:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
1138:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int slowClock)  // \arg slowClock in Hz
1139:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1140:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return ((pCKGR->CKGR_MCFR  & AT91C_CKGR_MAINF) * slowClock) >> 4;
1141:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1142:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1143:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1144:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_CfgMCKReg
1145:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Cfg Master Clock Register
1146:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1147:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_CfgMCKReg (
1148:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1149:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1150:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1151:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_MCKR = mode;
1152:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1153:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1154:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1155:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetMCKReg
1156:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return Master Clock Register
1157:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1158:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetMCKReg(
1159:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC) // \arg pointer to PMC controller
1160:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1161:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPMC->PMC_MCKR;
1162:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1163:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1164:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*------------------------------------------------------------------------------
1165:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetMasterClock
1166:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return master clock in Hz which correponds to processor clock for ARM7
1167:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*------------------------------------------------------------------------------
1168:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetMasterClock (
1169:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1170:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
1171:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int slowClock)  // \arg slowClock in Hz
1172:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1173:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int reg = pPMC->PMC_MCKR;
1174:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int prescaler = (1 << ((reg & AT91C_PMC_PRES) >> 2));
1175:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int pllDivider, pllMultiplier;
1176:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1177:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	switch (reg & AT91C_PMC_CSS) {
1178:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		case AT91C_PMC_CSS_SLOW_CLK: // Slow clock selected
1179:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			return slowClock / prescaler;
1180:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		case AT91C_PMC_CSS_MAIN_CLK: // Main clock is selected
1181:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			return AT91F_CKGR_GetMainClock(pCKGR, slowClock) / prescaler;
1182:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		case AT91C_PMC_CSS_PLL_CLK: // PLLB clock is selected
1183:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			reg = pCKGR->CKGR_PLLR;
1184:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			pllDivider    = (reg  & AT91C_CKGR_DIV);
1185:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			pllMultiplier = ((reg  & AT91C_CKGR_MUL) >> 16) + 1;
1186:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			return AT91F_CKGR_GetMainClock(pCKGR, slowClock) / pllDivider * pllMultiplier / prescaler;
1187:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
1188:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return 0;
1189:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1190:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1191:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1192:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_EnablePCK
1193:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable Programmable Clock x Output
1194:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1195:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_EnablePCK (
1196:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1197:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int pck,  // \arg Programmable Clock x Output
1198:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1199:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1200:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_PCKR[pck] = mode;
1201:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_SCER = (1 << pck) << 8;
1202:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1203:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1204:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1205:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_DisablePCK
1206:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable Programmable Clock x Output
1207:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1208:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_DisablePCK (
1209:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1210:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int pck)  // \arg Programmable Clock x Output
1211:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1212:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_SCDR = (1 << pck) << 8;
1213:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1214:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1215:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1216:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_EnableIt
1217:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PMC interrupt
1218:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1219:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_EnableIt (
1220:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC,     // pointer to a PMC controller
1221:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // IT to be enabled
1222:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1223:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IER register
1224:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_IER = flag;
1225:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1226:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1227:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1228:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_DisableIt
1229:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable PMC interrupt
1230:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1231:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_DisableIt (
1232:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // pointer to a PMC controller
1233:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // IT to be disabled
1234:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1235:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IDR register
1236:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_IDR = flag;
1237:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1238:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1239:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1240:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetStatus
1241:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PMC Interrupt Status
1242:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1243:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetStatus( // \return PMC Interrupt Status
1244:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC) // pointer to a PMC controller
1245:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1246:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPMC->PMC_SR;
1247:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1248:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1249:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1250:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetInterruptMaskStatus
1251:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PMC Interrupt Mask Status
1252:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1253:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetInterruptMaskStatus( // \return PMC Interrupt Mask Status
1254:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC) // pointer to a PMC controller
1255:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1256:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPMC->PMC_IMR;
1257:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1258:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1259:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1260:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_IsInterruptMasked
1261:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PMC Interrupt is Masked
1262:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1263:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_IsInterruptMasked(
1264:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PMC pPMC,   // \arg  pointer to a PMC controller
1265:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
1266:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1267:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_PMC_GetInterruptMaskStatus(pPMC) & flag);
1268:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1269:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1270:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1271:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_IsStatusSet
1272:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PMC Status is Set
1273:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1274:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_IsStatusSet(
1275:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PMC pPMC,   // \arg  pointer to a PMC controller
1276:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
1277:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1278:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_PMC_GetStatus(pPMC) & flag);
1279:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1280:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1281:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** // ----------------------------------------------------------------------------
1282:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //  \fn    AT91F_CKGR_CfgPLLReg
1283:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //  \brief Cfg the PLL Register
1284:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** // ----------------------------------------------------------------------------
1285:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_CKGR_CfgPLLReg (
1286:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
1287:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1288:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1289:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_PLLR = mode;
1290:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1291:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1292:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** // ----------------------------------------------------------------------------
1293:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //  \fn    AT91F_CKGR_GetPLLReg
1294:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //  \brief Get the PLL Register
1295:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** // ----------------------------------------------------------------------------
1296:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_CKGR_GetPLLReg (
1297:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
1298:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1299:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pCKGR->CKGR_PLLR;
1300:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1301:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1302:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1303:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1304:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1305:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR RSTC
1306:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1307:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1308:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_RSTSoftReset
1309:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Start Software Reset
1310:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1311:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RSTSoftReset(
1312:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RSTC pRSTC,
1313:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int reset)
1314:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1315:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRSTC->RSTC_RCR = (0xA5000000 | reset);
1316:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1317:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1318:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1319:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_RSTSetMode
1320:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set Reset Mode
1321:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1322:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RSTSetMode(
1323:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RSTC pRSTC,
1324:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int mode)
1325:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1326:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRSTC->RSTC_RMR = (0xA5000000 | mode);
1327:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1328:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1329:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1330:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_RSTGetMode
1331:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Get Reset Mode
1332:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1333:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RSTGetMode(
1334:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RSTC pRSTC)
1335:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1336:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (pRSTC->RSTC_RMR);
1337:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1338:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1339:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1340:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_RSTGetStatus
1341:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Get Reset Status
1342:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1343:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RSTGetStatus(
1344:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RSTC pRSTC)
1345:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1346:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (pRSTC->RSTC_RSR);
1347:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1348:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1349:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1350:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_RSTIsSoftRstActive
1351:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return !=0 if software reset is still not completed
1352:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1353:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RSTIsSoftRstActive(
1354:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RSTC pRSTC)
1355:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1356:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return ((pRSTC->RSTC_RSR) & AT91C_RSTC_SRCMP);
1357:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1358:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1359:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR RTTC
1360:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1361:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1362:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_SetRTT_TimeBase()
1363:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Set the RTT prescaler according to the TimeBase in ms
1364:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1365:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RTTSetTimeBase(
1366:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC,
1367:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int ms)
1368:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1369:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	if (ms > 2000)
1370:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 1;   // AT91C_TIME_OUT_OF_RANGE
1371:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR &= ~0xFFFF;
1372:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR |= (((ms << 15) /1000) & 0xFFFF);
1373:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return 0;
1374:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1375:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1376:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1377:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTTSetPrescaler()
1378:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Set the new prescaler value
1379:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1380:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RTTSetPrescaler(
1381:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC,
1382:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int rtpres)
1383:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1384:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR &= ~0xFFFF;
1385:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR |= (rtpres & 0xFFFF);
1386:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (pRTTC->RTTC_RTMR);
1387:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1388:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1389:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1390:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTTRestart()
1391:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Restart the RTT prescaler
1392:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1393:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTRestart(
1394:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1395:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1396:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR |= AT91C_RTTC_RTTRST;
1397:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1398:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1399:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1400:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1401:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_SetAlarmINT()
1402:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Enable RTT Alarm Interrupt
1403:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1404:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTSetAlarmINT(
1405:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1406:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1407:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR |= AT91C_RTTC_ALMIEN;
1408:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1409:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1410:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1411:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_ClearAlarmINT()
1412:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Disable RTT Alarm Interrupt
1413:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1414:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTClearAlarmINT(
1415:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1416:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1417:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR &= ~AT91C_RTTC_ALMIEN;
1418:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1419:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1420:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1421:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_SetRttIncINT()
1422:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Enable RTT INC Interrupt
1423:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1424:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTSetRttIncINT(
1425:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1426:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1427:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR |= AT91C_RTTC_RTTINCIEN;
1428:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1429:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1430:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1431:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_ClearRttIncINT()
1432:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Disable RTT INC Interrupt
1433:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1434:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTClearRttIncINT(
1435:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1436:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1437:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR &= ~AT91C_RTTC_RTTINCIEN;
1438:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1439:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1440:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1441:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_SetAlarmValue()
1442:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Set RTT Alarm Value
1443:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1444:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTSetAlarmValue(
1445:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC, unsigned int alarm)
1446:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1447:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTAR = alarm;
1448:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1449:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1450:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1451:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_GetAlarmValue()
1452:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Get RTT Alarm Value
1453:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1454:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RTTGetAlarmValue(
1455:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1456:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1457:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pRTTC->RTTC_RTAR);
1458:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1459:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1460:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1461:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTTGetStatus()
1462:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Read the RTT status
1463:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1464:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RTTGetStatus(
1465:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1466:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1467:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pRTTC->RTTC_RTSR);
1468:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1469:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1470:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1471:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_ReadValue()
1472:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Read the RTT value
1473:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1474:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RTTReadValue(
1475:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1476:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1477:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         register volatile unsigned int val1,val2;
1478:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	do
1479:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	{
1480:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		val1 = pRTTC->RTTC_RTVR;
1481:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		val2 = pRTTC->RTTC_RTVR;
1482:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
1483:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	while(val1 != val2);
1484:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(val1);
1485:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1486:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1487:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PITC
1488:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1489:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1490:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITInit
1491:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief System timer init : period in �second, system clock freq in MHz
1492:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1493:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PITInit(
1494:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC,
1495:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int period,
1496:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int pit_frequency)
1497:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1498:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPITC->PITC_PIMR = period? (period * pit_frequency + 8) >> 4 : 0; // +8 to avoid %10 and /10
1499:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPITC->PITC_PIMR |= AT91C_PITC_PITEN;
1500:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1501:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1502:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1503:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITSetPIV
1504:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the PIT Periodic Interval Value
1505:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1506:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PITSetPIV(
1507:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC,
1508:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int piv)
1509:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1510:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPITC->PITC_PIMR = piv | (pPITC->PITC_PIMR & (AT91C_PITC_PITEN | AT91C_PITC_PITIEN));
1511:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1512:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1513:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1514:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITEnableInt
1515:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PIT periodic interrupt
1516:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1517:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PITEnableInt(
1518:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1519:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1520:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPITC->PITC_PIMR |= AT91C_PITC_PITIEN;
1521:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1522:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1523:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1524:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITDisableInt
1525:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable PIT periodic interrupt
1526:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1527:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PITDisableInt(
1528:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1529:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1530:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPITC->PITC_PIMR &= ~AT91C_PITC_PITIEN;
1531:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1532:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1533:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1534:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITGetMode
1535:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Read PIT mode register
1536:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1537:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PITGetMode(
1538:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1539:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1540:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pPITC->PITC_PIMR);
1541:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1542:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1543:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1544:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITGetStatus
1545:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Read PIT status register
1546:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1547:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PITGetStatus(
1548:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1549:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1550:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pPITC->PITC_PISR);
1551:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1552:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1553:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1554:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITGetPIIR
1555:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Read PIT CPIV and PICNT without ressetting the counters
1556:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1557:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PITGetPIIR(
1558:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1559:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1560:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pPITC->PITC_PIIR);
1561:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1562:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1563:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1564:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITGetPIVR
1565:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Read System timer CPIV and PICNT without ressetting the counters
1566:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1567:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PITGetPIVR(
1568:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1569:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1570:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pPITC->PITC_PIVR);
1571:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1572:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1573:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR WDTC
1574:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1575:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1576:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_WDTSetMode
1577:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set Watchdog Mode Register
1578:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1579:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_WDTSetMode(
1580:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_WDTC pWDTC,
1581:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int Mode)
1582:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1583:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pWDTC->WDTC_WDMR = Mode;
1584:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1585:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1586:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1587:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_WDTRestart
1588:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Restart Watchdog
1589:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1590:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_WDTRestart(
1591:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_WDTC pWDTC)
1592:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1593:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pWDTC->WDTC_WDCR = 0xA5000001;
1594:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1595:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1596:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1597:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_WDTSGettatus
1598:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Get Watchdog Status
1599:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1600:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_WDTSGettatus(
1601:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_WDTC pWDTC)
1602:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1603:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pWDTC->WDTC_WDSR & 0x3);
1604:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1605:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1606:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1607:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_WDTGetPeriod
1608:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Translate ms into Watchdog Compatible value
1609:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1610:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_WDTGetPeriod(unsigned int ms)
1611:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1612:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	if ((ms < 4) || (ms > 16000))
1613:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 0;
1614:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return((ms << 8) / 1000);
1615:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1616:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1617:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR VREG
1618:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1619:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1620:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_VREG_Enable_LowPowerMode
1621:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable VREG Low Power Mode
1622:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1623:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_VREG_Enable_LowPowerMode(
1624:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_VREG pVREG)
1625:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1626:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pVREG->VREG_MR |= AT91C_VREG_PSTDBY;
1627:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1628:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1629:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1630:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_VREG_Disable_LowPowerMode
1631:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable VREG Low Power Mode
1632:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1633:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_VREG_Disable_LowPowerMode(
1634:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_VREG pVREG)
1635:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1636:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pVREG->VREG_MR &= ~AT91C_VREG_PSTDBY;
1637:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }/* *****************************************************************************
1638:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR MC
1639:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1640:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1641:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_MC_CORRECT_KEY  ((unsigned int) 0x5A << 24) // (MC) Correct Protect Key
1642:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1643:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1644:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_Remap
1645:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Make Remap
1646:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1647:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_MC_Remap (void)     //
1648:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1649:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     AT91PS_MC pMC = (AT91PS_MC) AT91C_BASE_MC;
1650:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1651:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pMC->MC_RCR = AT91C_MC_RCB;
1652:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1653:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1654:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1655:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_CfgModeReg
1656:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure the EFC Mode Register of the MC controller
1657:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1658:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_MC_EFC_CfgModeReg (
1659:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_MC pMC, // pointer to a MC controller
1660:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)        // mode register
1661:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1662:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Write to the FMR register
1663:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pMC->MC_FMR = mode;
1664:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1665:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1666:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1667:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_GetModeReg
1668:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return MC EFC Mode Regsiter
1669:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1670:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_MC_EFC_GetModeReg(
1671:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_MC pMC) // pointer to a MC controller
1672:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1673:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pMC->MC_FMR;
1674:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1675:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1676:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1677:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_ComputeFMCN
1678:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return MC EFC Mode Regsiter
1679:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1680:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_MC_EFC_ComputeFMCN(
1681:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	int master_clock) // master clock in Hz
1682:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1683:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (master_clock/1000000 +2);
1684:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1685:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1686:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1687:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_PerformCmd
1688:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Perform EFC Command
1689:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1690:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_MC_EFC_PerformCmd (
1691:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_MC pMC, // pointer to a MC controller
1692:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     unsigned int transfer_cmd)
1693:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1694:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pMC->MC_FCR = transfer_cmd;
1695:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1696:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1697:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1698:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_GetStatus
1699:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return MC EFC Status
1700:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1701:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_MC_EFC_GetStatus(
1702:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_MC pMC) // pointer to a MC controller
1703:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1704:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pMC->MC_FSR;
1705:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1706:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1707:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1708:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_IsInterruptMasked
1709:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if EFC MC Interrupt is Masked
1710:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1711:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_MC_EFC_IsInterruptMasked(
1712:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_MC pMC,   // \arg  pointer to a MC controller
1713:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
1714:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1715:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_MC_EFC_GetModeReg(pMC) & flag);
1716:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1717:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1718:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1719:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_IsInterruptSet
1720:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if EFC MC Interrupt is Set
1721:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1722:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_MC_EFC_IsInterruptSet(
1723:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_MC pMC,   // \arg  pointer to a MC controller
1724:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
1725:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1726:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_MC_EFC_GetStatus(pMC) & flag);
1727:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1728:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1729:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1730:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR SPI
1731:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1732:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1733:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_CfgCs
1734:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure SPI chip select register
1735:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1736:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_CfgCs (
1737:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI,     // pointer to a SPI controller
1738:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	int cs,     // SPI cs number (0 to 3)
1739:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****  	int val)   //  chip select register
1740:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1741:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the CSR register
1742:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	*(pSPI->SPI_CSR + cs) = val;
1743:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1744:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1745:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1746:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_EnableIt
1747:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable SPI interrupt
1748:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1749:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_EnableIt (
1750:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI,     // pointer to a SPI controller
1751:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // IT to be enabled
1752:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1753:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IER register
1754:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_IER = flag;
1755:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1756:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1757:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1758:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_DisableIt
1759:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable SPI interrupt
1760:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1761:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_DisableIt (
1762:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI, // pointer to a SPI controller
1763:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // IT to be disabled
1764:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1765:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IDR register
1766:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_IDR = flag;
1767:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1768:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1769:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1770:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_Reset
1771:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Reset the SPI controller
1772:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1773:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_Reset (
1774:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI // pointer to a SPI controller
1775:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
1776:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1777:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the CR register
1778:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_CR = AT91C_SPI_SWRST;
1779:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1780:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1781:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1782:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_Enable
1783:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable the SPI controller
1784:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1785:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_Enable (
1786:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI // pointer to a SPI controller
1787:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
1788:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1789:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the CR register
1790:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_CR = AT91C_SPI_SPIEN;
1791:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1792:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1793:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1794:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_Disable
1795:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable the SPI controller
1796:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1797:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_Disable (
1798:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI // pointer to a SPI controller
1799:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
1800:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1801:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the CR register
1802:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_CR = AT91C_SPI_SPIDIS;
1803:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1804:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1805:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1806:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_CfgMode
1807:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable the SPI controller
1808:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1809:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_CfgMode (
1810:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI, // pointer to a SPI controller
1811:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	int mode)        // mode register
1812:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1813:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the MR register
1814:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_MR = mode;
1815:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1816:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1817:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1818:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_CfgPCS
1819:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Switch to the correct PCS of SPI Mode Register : Fixed Peripheral Selected
1820:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1821:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_CfgPCS (
1822:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI, // pointer to a SPI controller
1823:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char PCS_Device) // PCS of the Device
1824:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1825:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****  	//* Write to the MR register
1826:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_MR &= 0xFFF0FFFF;
1827:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_MR |= ( (PCS_Device<<16) & AT91C_SPI_PCS );
1828:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1829:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1830:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1831:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_ReceiveFrame
1832:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return 2 if PDC has been initialized with Buffer and Next Buffer, 1 if PDC has been init
1833:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1834:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_SPI_ReceiveFrame (
1835:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI,
1836:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pBuffer,
1837:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
1838:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
1839:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
1840:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1841:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return AT91F_PDC_ReceiveFrame(
1842:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		(AT91PS_PDC) &(pSPI->SPI_RPR),
1843:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pBuffer,
1844:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szBuffer,
1845:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pNextBuffer,
1846:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szNextBuffer);
1847:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1848:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1849:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1850:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_SendFrame
1851:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return 2 if PDC has been initialized with Buffer and Next Buffer, 1 if PDC has been init
1852:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1853:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_SPI_SendFrame(
1854:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI,
1855:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pBuffer,
1856:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
1857:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
1858:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
1859:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1860:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return AT91F_PDC_SendFrame(
1861:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		(AT91PS_PDC) &(pSPI->SPI_RPR),
1862:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pBuffer,
1863:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szBuffer,
1864:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pNextBuffer,
1865:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szNextBuffer);
1866:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1867:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1868:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1869:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_Close
1870:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Close SPI: disable IT disable transfert, close PDC
1871:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1872:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_Close (
1873:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI)     // \arg pointer to a SPI controller
1874:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1875:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Reset all the Chip Select register
1876:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSPI->SPI_CSR[0] = 0 ;
1877:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSPI->SPI_CSR[1] = 0 ;
1878:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSPI->SPI_CSR[2] = 0 ;
1879:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSPI->SPI_CSR[3] = 0 ;
1880:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1881:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Reset the SPI mode
1882:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSPI->SPI_MR = 0  ;
1883:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1884:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable all interrupts
1885:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSPI->SPI_IDR = 0xFFFFFFFF ;
1886:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1887:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Abort the Peripheral Data Transfers
1888:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     AT91F_PDC_Close((AT91PS_PDC) &(pSPI->SPI_RPR));
1889:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1890:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable receiver and transmitter and stop any activity immediately
1891:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSPI->SPI_CR = AT91C_SPI_SPIDIS;
1892:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1893:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1894:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1895:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_PutChar
1896:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Send a character,does not check if ready to send
1897:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1898:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_PutChar (
1899:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI,
1900:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int character,
1901:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****              unsigned int cs_number )
1902:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1903:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     unsigned int value_for_cs;
1904:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     value_for_cs = (~(1 << cs_number)) & 0xF;  //Place a zero among a 4 ONEs number
1905:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSPI->SPI_TDR = (character & 0xFFFF) | (value_for_cs << 16);
1906:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1907:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1908:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1909:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_GetChar
1910:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Receive a character,does not check if a character is available
1911:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1912:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_SPI_GetChar (
1913:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	const AT91PS_SPI pSPI)
1914:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1915:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     return((pSPI->SPI_RDR) & 0xFFFF);
1916:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1917:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1918:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1919:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_GetInterruptMaskStatus
1920:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return SPI Interrupt Mask Status
1921:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1922:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_SPI_GetInterruptMaskStatus( // \return SPI Interrupt Mask Status
1923:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_SPI pSpi) // \arg  pointer to a SPI controller
1924:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1925:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pSpi->SPI_IMR;
1926:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1927:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1928:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1929:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_IsInterruptMasked
1930:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if SPI Interrupt is Masked
1931:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1932:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_SPI_IsInterruptMasked(
1933:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_SPI pSpi,   // \arg  pointer to a SPI controller
1934:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
1935:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1936:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_SPI_GetInterruptMaskStatus(pSpi) & flag);
1937:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1938:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1939:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1940:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR ADC
1941:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1942:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1943:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_EnableIt
1944:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable ADC interrupt
1945:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1946:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_ADC_EnableIt (
1947:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC,     // pointer to a ADC controller
1948:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // IT to be enabled
1949:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1950:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IER register
1951:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pADC->ADC_IER = flag;
1952:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1953:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1954:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1955:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_DisableIt
1956:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable ADC interrupt
1957:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1958:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_ADC_DisableIt (
1959:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC, // pointer to a ADC controller
1960:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // IT to be disabled
1961:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1962:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IDR register
1963:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pADC->ADC_IDR = flag;
1964:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1965:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1966:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1967:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetStatus
1968:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return ADC Interrupt Status
1969:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1970:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetStatus( // \return ADC Interrupt Status
1971:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC) // pointer to a ADC controller
1972:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1973:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_SR;
1974:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1975:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1976:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1977:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetInterruptMaskStatus
1978:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return ADC Interrupt Mask Status
1979:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1980:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetInterruptMaskStatus( // \return ADC Interrupt Mask Status
1981:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC) // pointer to a ADC controller
1982:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1983:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_IMR;
1984:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1985:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1986:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1987:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_IsInterruptMasked
1988:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if ADC Interrupt is Masked
1989:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1990:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_IsInterruptMasked(
1991:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_ADC pADC,   // \arg  pointer to a ADC controller
1992:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
1993:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1994:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_ADC_GetInterruptMaskStatus(pADC) & flag);
1995:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1996:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1997:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1998:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_IsStatusSet
1999:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if ADC Status is Set
2000:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2001:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_IsStatusSet(
2002:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_ADC pADC,   // \arg  pointer to a ADC controller
2003:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
2004:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2005:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_ADC_GetStatus(pADC) & flag);
2006:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2007:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2008:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2009:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_CfgModeReg
2010:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure the Mode Register of the ADC controller
2011:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2012:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_ADC_CfgModeReg (
2013:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC, // pointer to a ADC controller
2014:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)        // mode register
2015:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2016:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the MR register
2017:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pADC->ADC_MR = mode;
2018:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2019:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2020:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2021:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetModeReg
2022:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Mode Register of the ADC controller value
2023:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2024:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetModeReg (
2025:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2026:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2027:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2028:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_MR;
2029:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2030:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2031:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2032:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_CfgTimings
2033:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure the different necessary timings of the ADC controller
2034:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2035:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_ADC_CfgTimings (
2036:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC, // pointer to a ADC controller
2037:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mck_clock, // in MHz
2038:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int adc_clock, // in MHz
2039:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int startup_time, // in us
2040:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int sample_and_hold_time)	// in ns
2041:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2042:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int prescal,startup,shtim;
2043:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2044:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	prescal = mck_clock/(2*adc_clock) - 1;
2045:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	startup = adc_clock*startup_time/8 - 1;
2046:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	shtim = adc_clock*sample_and_hold_time/1000 - 1;
2047:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2048:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the MR register
2049:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pADC->ADC_MR = ( (prescal<<8) & AT91C_ADC_PRESCAL) | ( (startup<<16) & AT91C_ADC_STARTUP) | ( (sht
2050:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2051:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2052:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2053:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_EnableChannel
2054:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return ADC Timer Register Value
2055:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2056:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_ADC_EnableChannel (
2057:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC, // pointer to a ADC controller
2058:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int channel)        // mode register
2059:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2060:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the CHER register
2061:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pADC->ADC_CHER = channel;
2062:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2063:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2064:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2065:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_DisableChannel
2066:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return ADC Timer Register Value
2067:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2068:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_ADC_DisableChannel (
2069:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC, // pointer to a ADC controller
2070:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int channel)        // mode register
2071:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2072:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the CHDR register
2073:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pADC->ADC_CHDR = channel;
2074:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2075:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2076:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2077:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetChannelStatus
2078:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return ADC Timer Register Value
2079:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2080:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetChannelStatus (
2081:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2082:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2083:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2084:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CHSR;
2085:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2086:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2087:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2088:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_StartConversion
2089:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Software request for a analog to digital conversion
2090:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2091:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_ADC_StartConversion (
2092:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2093:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2094:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2095:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pADC->ADC_CR = AT91C_ADC_START;
2096:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2097:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2098:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2099:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_SoftReset
2100:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Software reset
2101:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2102:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_ADC_SoftReset (
2103:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2104:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2105:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2106:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pADC->ADC_CR = AT91C_ADC_SWRST;
2107:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2108:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2109:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2110:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetLastConvertedData
2111:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Last Converted Data
2112:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2113:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetLastConvertedData (
2114:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2115:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2116:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2117:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_LCDR;
2118:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2119:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2120:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2121:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetConvertedDataCH0
2122:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Channel 0 Converted Data
2123:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2124:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetConvertedDataCH0 (
2125:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2126:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2127:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2128:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CDR0;
2129:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2130:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2131:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2132:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetConvertedDataCH1
2133:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Channel 1 Converted Data
2134:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2135:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetConvertedDataCH1 (
2136:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2137:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2138:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2139:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CDR1;
2140:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2141:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2142:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2143:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetConvertedDataCH2
2144:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Channel 2 Converted Data
2145:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2146:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetConvertedDataCH2 (
2147:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2148:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2149:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2150:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CDR2;
2151:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2152:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2153:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2154:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetConvertedDataCH3
2155:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Channel 3 Converted Data
2156:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2157:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetConvertedDataCH3 (
2158:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2159:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2160:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2161:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CDR3;
2162:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2163:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2164:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2165:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetConvertedDataCH4
2166:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Channel 4 Converted Data
2167:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2168:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetConvertedDataCH4 (
2169:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2170:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2171:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2172:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CDR4;
2173:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2174:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2175:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2176:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetConvertedDataCH5
2177:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Channel 5 Converted Data
2178:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2179:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetConvertedDataCH5 (
2180:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2181:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2182:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2183:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CDR5;
2184:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2185:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2186:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2187:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetConvertedDataCH6
2188:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Channel 6 Converted Data
2189:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2190:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetConvertedDataCH6 (
2191:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2192:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2193:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2194:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CDR6;
2195:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2196:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2197:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2198:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_ADC_GetConvertedDataCH7
2199:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the Channel 7 Converted Data
2200:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2201:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_ADC_GetConvertedDataCH7 (
2202:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_ADC pADC // pointer to a ADC controller
2203:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
2204:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2205:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pADC->ADC_CDR7;
2206:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2207:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2208:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
2209:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR SSC
2210:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
2211:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Define the standard I2S mode configuration
2212:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2213:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Configuration to set in the SSC Transmit Clock Mode Register
2214:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Parameters :  nb_bit_by_slot : 8, 16 or 32 bits
2215:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* 			  nb_slot_by_frame : number of channels
2216:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_I2S_ASY_MASTER_TX_SETTING(nb_bit_by_slot, nb_slot_by_frame)( +\
2217:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 									   AT91C_SSC_CKS_DIV   +\
2218:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             		   AT91C_SSC_CKO_CONTINOUS      +\
2219:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             		   AT91C_SSC_CKG_NONE    +\
2220:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                                        AT91C_SSC_START_FALL_RF +\
2221:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                            			   AT91C_SSC_STTOUT  +\
2222:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             		   ((1<<16) & AT91C_SSC_STTDLY) +\
2223:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             		   ((((nb_bit_by_slot*nb_slot_by_frame)/2)-1) <<24))
2224:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2225:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2226:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Configuration to set in the SSC Transmit Frame Mode Register
2227:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Parameters : nb_bit_by_slot : 8, 16 or 32 bits
2228:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* 			 nb_slot_by_frame : number of channels
2229:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_I2S_ASY_TX_FRAME_SETTING(nb_bit_by_slot, nb_slot_by_frame)( +\
2230:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 									(nb_bit_by_slot-1)  +\
2231:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             		AT91C_SSC_MSBF   +\
2232:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             		(((nb_slot_by_frame-1)<<8) & AT91C_SSC_DATNB)  +\
2233:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             		(((nb_bit_by_slot-1)<<16) & AT91C_SSC_FSLEN) +\
2234:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             		AT91C_SSC_FSOS_NEGATIVE)
2235:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2236:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2237:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2238:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_SetBaudrate
2239:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the baudrate according to the CPU clock
2240:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2241:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SSC_SetBaudrate (
2242:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_SSC pSSC,        // \arg pointer to a SSC controller
2243:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int mainClock, // \arg peripheral clock
2244:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int speed)     // \arg SSC baudrate
2245:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2246:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int baud_value;
2247:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         //* Define the baud rate divisor register
2248:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         if (speed == 0)
2249:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****            baud_value = 0;
2250:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         else
2251:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         {
2252:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****            baud_value = (unsigned int) (mainClock * 10)/(2*speed);
2253:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****            if ((baud_value % 10) >= 5)
2254:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                   baud_value = (baud_value / 10) + 1;
2255:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****            else
2256:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                   baud_value /= 10;
2257:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         }
2258:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2259:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pSSC->SSC_CMR = baud_value;
2260:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2261:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2262:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2263:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_Configure
2264:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure SSC
2265:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2266:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SSC_Configure (
2267:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****              AT91PS_SSC pSSC,          // \arg pointer to a SSC controller
2268:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****              unsigned int syst_clock,  // \arg System Clock Frequency
2269:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****              unsigned int baud_rate,   // \arg Expected Baud Rate Frequency
2270:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****              unsigned int clock_rx,    // \arg Receiver Clock Parameters
2271:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****              unsigned int mode_rx,     // \arg mode Register to be programmed
2272:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****              unsigned int clock_tx,    // \arg Transmitter Clock Parameters
2273:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****              unsigned int mode_tx)     // \arg mode Register to be programmed
2274:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2275:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable interrupts
2276:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSSC->SSC_IDR = (unsigned int) -1;
2277:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2278:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Reset receiver and transmitter
2279:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSSC->SSC_CR = AT91C_SSC_SWRST | AT91C_SSC_RXDIS | AT91C_SSC_TXDIS ;
2280:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2281:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Define the Clock Mode Register
2282:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_SSC_SetBaudrate(pSSC, syst_clock, baud_rate);
2283:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2284:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****      //* Write the Receive Clock Mode Register
2285:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSSC->SSC_RCMR =  clock_rx;
2286:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2287:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****      //* Write the Transmit Clock Mode Register
2288:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSSC->SSC_TCMR =  clock_tx;
2289:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2290:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****      //* Write the Receive Frame Mode Register
2291:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSSC->SSC_RFMR =  mode_rx;
2292:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2293:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****      //* Write the Transmit Frame Mode Register
2294:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSSC->SSC_TFMR =  mode_tx;
2295:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2296:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Clear Transmit and Receive Counters
2297:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_Open((AT91PS_PDC) &(pSSC->SSC_RPR));
2298:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2299:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2300:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2301:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2302:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2303:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_EnableRx
2304:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable receiving datas
2305:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2306:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SSC_EnableRx (
2307:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SSC pSSC)     // \arg pointer to a SSC controller
2308:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2309:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Enable receiver
2310:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSSC->SSC_CR = AT91C_SSC_RXEN;
2311:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2312:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2313:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2314:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_DisableRx
2315:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable receiving datas
2316:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2317:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SSC_DisableRx (
2318:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SSC pSSC)     // \arg pointer to a SSC controller
2319:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2320:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable receiver
2321:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSSC->SSC_CR = AT91C_SSC_RXDIS;
2322:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2323:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2324:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2325:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_EnableTx
2326:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable sending datas
2327:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2328:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SSC_EnableTx (
2329:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SSC pSSC)     // \arg pointer to a SSC controller
2330:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2331:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Enable  transmitter
2332:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSSC->SSC_CR = AT91C_SSC_TXEN;
2333:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2334:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2335:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2336:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_DisableTx
2337:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable sending datas
2338:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2339:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SSC_DisableTx (
2340:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SSC pSSC)     // \arg pointer to a SSC controller
2341:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2342:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable  transmitter
2343:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pSSC->SSC_CR = AT91C_SSC_TXDIS;
2344:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2345:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2346:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2347:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_EnableIt
2348:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable SSC IT
2349:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2350:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SSC_EnableIt (
2351:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SSC pSSC, // \arg pointer to a SSC controller
2352:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // \arg IT to be enabled
2353:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2354:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IER register
2355:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSSC->SSC_IER = flag;
2356:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2357:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2358:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2359:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_DisableIt
2360:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable SSC IT
2361:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2362:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SSC_DisableIt (
2363:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SSC pSSC, // \arg pointer to a SSC controller
2364:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // \arg IT to be disabled
2365:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2366:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IDR register
2367:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSSC->SSC_IDR = flag;
2368:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2369:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2370:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2371:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_ReceiveFrame
2372:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return 2 if PDC has been initialized with Buffer and Next Buffer, 1 if PDC has been init
2373:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2374:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_SSC_ReceiveFrame (
2375:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SSC pSSC,
2376:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pBuffer,
2377:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
2378:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
2379:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
2380:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2381:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return AT91F_PDC_ReceiveFrame(
2382:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		(AT91PS_PDC) &(pSSC->SSC_RPR),
2383:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pBuffer,
2384:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szBuffer,
2385:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pNextBuffer,
2386:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szNextBuffer);
2387:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2388:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2389:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2390:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_SendFrame
2391:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return 2 if PDC has been initialized with Buffer and Next Buffer, 1 if PDC has been init
2392:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2393:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_SSC_SendFrame(
2394:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SSC pSSC,
2395:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pBuffer,
2396:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
2397:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
2398:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
2399:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2400:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return AT91F_PDC_SendFrame(
2401:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		(AT91PS_PDC) &(pSSC->SSC_RPR),
2402:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pBuffer,
2403:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szBuffer,
2404:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pNextBuffer,
2405:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szNextBuffer);
2406:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2407:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2408:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2409:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_GetInterruptMaskStatus
2410:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return SSC Interrupt Mask Status
2411:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2412:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_SSC_GetInterruptMaskStatus( // \return SSC Interrupt Mask Status
2413:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_SSC pSsc) // \arg  pointer to a SSC controller
2414:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2415:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pSsc->SSC_IMR;
2416:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2417:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2418:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2419:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SSC_IsInterruptMasked
2420:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if SSC Interrupt is Masked
2421:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2422:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_SSC_IsInterruptMasked(
2423:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_SSC pSsc,   // \arg  pointer to a SSC controller
2424:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
2425:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2426:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_SSC_GetInterruptMaskStatus(pSsc) & flag);
2427:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2428:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2429:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
2430:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR USART
2431:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
2432:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_Baudrate
2433:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Calculate the baudrate
2434:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Standard Asynchronous Mode : 8 bits , 1 stop , no parity
2435:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_US_ASYNC_MODE ( AT91C_US_USMODE_NORMAL + \
2436:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                         AT91C_US_NBSTOP_1_BIT + \
2437:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                         AT91C_US_PAR_NONE + \
2438:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                         AT91C_US_CHRL_8_BITS + \
2439:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                         AT91C_US_CLKS_CLOCK )
2440:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2441:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Standard External Asynchronous Mode : 8 bits , 1 stop , no parity
2442:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_US_ASYNC_SCK_MODE ( AT91C_US_USMODE_NORMAL + \
2443:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             AT91C_US_NBSTOP_1_BIT + \
2444:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             AT91C_US_PAR_NONE + \
2445:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             AT91C_US_CHRL_8_BITS + \
2446:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             AT91C_US_CLKS_EXT )
2447:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2448:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Standard Synchronous Mode : 8 bits , 1 stop , no parity
2449:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_US_SYNC_MODE ( AT91C_US_SYNC + \
2450:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        AT91C_US_USMODE_NORMAL + \
2451:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        AT91C_US_NBSTOP_1_BIT + \
2452:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        AT91C_US_PAR_NONE + \
2453:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        AT91C_US_CHRL_8_BITS + \
2454:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        AT91C_US_CLKS_CLOCK )
2455:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2456:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* SCK used Label
2457:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_US_SCK_USED (AT91C_US_CKLO | AT91C_US_CLKS_EXT)
2458:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2459:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Standard ISO T=0 Mode : 8 bits , 1 stop , parity
2460:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_US_ISO_READER_MODE ( AT91C_US_USMODE_ISO7816_0 + \
2461:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 					   		 AT91C_US_CLKS_CLOCK +\
2462:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        		 AT91C_US_NBSTOP_1_BIT + \
2463:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        		 AT91C_US_PAR_EVEN + \
2464:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        		 AT91C_US_CHRL_8_BITS + \
2465:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        		 AT91C_US_CKLO +\
2466:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                        		 AT91C_US_OVER)
2467:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2468:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Standard IRDA mode
2469:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_US_ASYNC_IRDA_MODE (  AT91C_US_USMODE_IRDA + \
2470:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             AT91C_US_NBSTOP_1_BIT + \
2471:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             AT91C_US_PAR_NONE + \
2472:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             AT91C_US_CHRL_8_BITS + \
2473:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                             AT91C_US_CLKS_CLOCK )
2474:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2475:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2476:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2477:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_Baudrate
2478:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Caluculate baud_value according to the main clock and the baud rate
2479:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2480:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_US_Baudrate (
2481:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	const unsigned int main_clock, // \arg peripheral clock
2482:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	const unsigned int baud_rate)  // \arg UART baudrate
2483:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2484:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int baud_value = ((main_clock*10)/(baud_rate * 16));
2485:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	if ((baud_value % 10) >= 5)
2486:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		baud_value = (baud_value / 10) + 1;
2487:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	else
2488:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		baud_value /= 10;
2489:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return baud_value;
2490:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2491:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2492:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2493:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_SetBaudrate
2494:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the baudrate according to the CPU clock
2495:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2496:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_SetBaudrate (
2497:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART,    // \arg pointer to a USART controller
2498:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mainClock, // \arg peripheral clock
2499:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int speed)     // \arg UART baudrate
2500:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2501:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Define the baud rate divisor register
2502:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pUSART->US_BRGR = AT91F_US_Baudrate(mainClock, speed);
2503:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2504:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2505:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2506:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_SetTimeguard
2507:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set USART timeguard
2508:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2509:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_SetTimeguard (
2510:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART,    // \arg pointer to a USART controller
2511:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int timeguard) // \arg timeguard value
2512:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2513:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write the Timeguard Register
2514:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pUSART->US_TTGR = timeguard ;
2515:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2516:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2517:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2518:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_EnableIt
2519:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable USART IT
2520:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2521:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_EnableIt (
2522:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART, // \arg pointer to a USART controller
2523:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // \arg IT to be enabled
2524:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2525:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IER register
2526:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pUSART->US_IER = flag;
2527:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2528:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2529:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2530:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_DisableIt
2531:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable USART IT
2532:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2533:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_DisableIt (
2534:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART, // \arg pointer to a USART controller
2535:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // \arg IT to be disabled
2536:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2537:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IER register
2538:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pUSART->US_IDR = flag;
2539:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2540:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2541:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2542:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_Configure
2543:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure USART
2544:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2545:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_Configure (
2546:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART,     // \arg pointer to a USART controller
2547:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mainClock,  // \arg peripheral clock
2548:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode ,      // \arg mode Register to be programmed
2549:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int baudRate ,  // \arg baudrate to be programmed
2550:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int timeguard ) // \arg timeguard to be programmed
2551:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2552:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable interrupts
2553:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_IDR = (unsigned int) -1;
2554:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2555:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Reset receiver and transmitter
2556:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_CR = AT91C_US_RSTRX | AT91C_US_RSTTX | AT91C_US_RXDIS | AT91C_US_TXDIS ;
2557:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2558:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Define the baud rate divisor register
2559:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_US_SetBaudrate(pUSART, mainClock, baudRate);
2560:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2561:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write the Timeguard Register
2562:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_US_SetTimeguard(pUSART, timeguard);
2563:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2564:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Clear Transmit and Receive Counters
2565:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     AT91F_PDC_Open((AT91PS_PDC) &(pUSART->US_RPR));
2566:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2567:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Define the USART mode
2568:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_MR = mode  ;
2569:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2570:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2571:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2572:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2573:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_EnableRx
2574:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable receiving characters
2575:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2576:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_EnableRx (
2577:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART)     // \arg pointer to a USART controller
2578:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2579:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Enable receiver
2580:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_CR = AT91C_US_RXEN;
2581:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2582:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2583:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2584:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_EnableTx
2585:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable sending characters
2586:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2587:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_EnableTx (
2588:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART)     // \arg pointer to a USART controller
2589:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2590:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Enable  transmitter
2591:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_CR = AT91C_US_TXEN;
2592:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2593:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2594:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2595:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_ResetRx
2596:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Reset Receiver and re-enable it
2597:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2598:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_ResetRx (
2599:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART)     // \arg pointer to a USART controller
2600:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2601:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Reset receiver
2602:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pUSART->US_CR = AT91C_US_RSTRX;
2603:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Re-Enable receiver
2604:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_CR = AT91C_US_RXEN;
2605:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2606:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2607:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2608:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_ResetTx
2609:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Reset Transmitter and re-enable it
2610:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2611:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_ResetTx (
2612:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART)     // \arg pointer to a USART controller
2613:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2614:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Reset transmitter
2615:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pUSART->US_CR = AT91C_US_RSTTX;
2616:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Enable transmitter
2617:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_CR = AT91C_US_TXEN;
2618:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2619:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2620:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2621:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_DisableRx
2622:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable Receiver
2623:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2624:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_DisableRx (
2625:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART)     // \arg pointer to a USART controller
2626:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2627:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable receiver
2628:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_CR = AT91C_US_RXDIS;
2629:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2630:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2631:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2632:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_DisableTx
2633:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable Transmitter
2634:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2635:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_DisableTx (
2636:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART)     // \arg pointer to a USART controller
2637:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2638:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable transmitter
2639:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_CR = AT91C_US_TXDIS;
2640:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2641:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2642:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2643:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_Close
2644:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Close USART: disable IT disable receiver and transmitter, close PDC
2645:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2646:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_Close (
2647:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART)     // \arg pointer to a USART controller
2648:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2649:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Reset the baud rate divisor register
2650:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_BRGR = 0 ;
2651:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2652:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Reset the USART mode
2653:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_MR = 0  ;
2654:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2655:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Reset the Timeguard Register
2656:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_TTGR = 0;
2657:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2658:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable all interrupts
2659:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_IDR = 0xFFFFFFFF ;
2660:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2661:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Abort the Peripheral Data Transfers
2662:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     AT91F_PDC_Close((AT91PS_PDC) &(pUSART->US_RPR));
2663:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2664:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable receiver and transmitter and stop any activity immediately
2665:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_CR = AT91C_US_TXDIS | AT91C_US_RXDIS | AT91C_US_RSTTX | AT91C_US_RSTRX ;
2666:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2667:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2668:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2669:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_TxReady
2670:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return 1 if a character can be written in US_THR
2671:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2672:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_US_TxReady (
2673:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART )     // \arg pointer to a USART controller
2674:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2675:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     return (pUSART->US_CSR & AT91C_US_TXRDY);
2676:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2677:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2678:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2679:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_RxReady
2680:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return 1 if a character can be read in US_RHR
2681:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2682:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_US_RxReady (
2683:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART )     // \arg pointer to a USART controller
2684:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2685:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     return (pUSART->US_CSR & AT91C_US_RXRDY);
2686:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2687:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2688:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2689:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_Error
2690:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the error flag
2691:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2692:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_US_Error (
2693:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART )     // \arg pointer to a USART controller
2694:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2695:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     return (pUSART->US_CSR &
2696:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     	(AT91C_US_OVRE |  // Overrun error
2697:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     	 AT91C_US_FRAME | // Framing error
2698:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     	 AT91C_US_PARE));  // Parity error
2699:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2700:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2701:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2702:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_PutChar
2703:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Send a character,does not check if ready to send
2704:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2705:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_PutChar (
2706:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART,
2707:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	int character )
2708:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2709:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pUSART->US_THR = (character & 0x1FF);
2710:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2711:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2712:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2713:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_GetChar
2714:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Receive a character,does not check if a character is available
2715:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2716:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_US_GetChar (
2717:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	const AT91PS_USART pUSART)
2718:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2719:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     return((pUSART->US_RHR) & 0x1FF);
2720:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2721:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2722:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2723:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_SendFrame
2724:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return 2 if PDC has been initialized with Buffer and Next Buffer, 1 if PDC has been init
2725:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2726:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_US_SendFrame(
2727:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART,
2728:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pBuffer,
2729:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
2730:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
2731:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
2732:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2733:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return AT91F_PDC_SendFrame(
2734:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		(AT91PS_PDC) &(pUSART->US_RPR),
2735:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pBuffer,
2736:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szBuffer,
2737:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pNextBuffer,
2738:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szNextBuffer);
2739:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2740:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2741:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2742:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_ReceiveFrame
2743:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return 2 if PDC has been initialized with Buffer and Next Buffer, 1 if PDC has been init
2744:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2745:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_US_ReceiveFrame (
2746:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART,
2747:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pBuffer,
2748:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
2749:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
2750:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
2751:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2752:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return AT91F_PDC_ReceiveFrame(
2753:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		(AT91PS_PDC) &(pUSART->US_RPR),
2754:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pBuffer,
2755:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szBuffer,
2756:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		pNextBuffer,
2757:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		szNextBuffer);
2758:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2759:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2760:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2761:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_US_SetIrdaFilter
2762:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the value of IrDa filter tregister
2763:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2764:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_US_SetIrdaFilter (
2765:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_USART pUSART,
2766:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned char value
2767:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** )
2768:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2769:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pUSART->US_IF = value;
2770:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2771:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2772:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
2773:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR TWI
2774:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
2775:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2776:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_TWI_EnableIt
2777:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable TWI IT
2778:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2779:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_TWI_EnableIt (
2780:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_TWI pTWI, // \arg pointer to a TWI controller
2781:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // \arg IT to be enabled
2782:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2783:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IER register
2784:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pTWI->TWI_IER = flag;
2785:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2786:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2787:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2788:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_TWI_DisableIt
2789:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable TWI IT
2790:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2791:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_TWI_DisableIt (
2792:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_TWI pTWI, // \arg pointer to a TWI controller
2793:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // \arg IT to be disabled
2794:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2795:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IDR register
2796:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pTWI->TWI_IDR = flag;
2797:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
2798:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2799:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2800:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_TWI_Configure
2801:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure TWI in master mode
2802:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
2803:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_TWI_Configure ( AT91PS_TWI pTWI )          // \arg pointer to a TWI controller
2804:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
2805:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable interrupts
2806:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pTWI->TWI_IDR = (unsigned int) -1;
  51              		.loc 2 2806 0
  52 002c 0020E0E3 		mvn	r2, #0
  53 0030 D72003E5 		str	r2, [r3, #-215]
2807:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2808:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Reset peripheral
2809:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pTWI->TWI_CR = AT91C_TWI_SWRST;
  54              		.loc 2 2809 0
  55 0034 812082E2 		add	r2, r2, #129
  56 0038 FF2003E5 		str	r2, [r3, #-255]
2810:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
2811:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Set Master mode
2812:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pTWI->TWI_CR = AT91C_TWI_MSEN;
  57              		.loc 2 2812 0
  58 003c 7C2042E2 		sub	r2, r2, #124
  59 0040 FF2003E5 		str	r2, [r3, #-255]
  60              	.LBE62:
  61              	.LBE61:
  62              	.LBB63:
  63              	.LBB64:
  64              	.LBB65:
  65              	.LBB66:
  66              		.loc 2 495 0
  67 0044 0B2CE0E3 		mvn	r2, #2816
  68 0048 1810A0E3 		mov	r1, #24
  69 004c 8F1002E5 		str	r1, [r2, #-143]
  70              		.loc 2 496 0
  71 0050 0050A0E3 		mov	r5, #0
  72 0054 8B5002E5 		str	r5, [r2, #-139]
  73              		.loc 2 497 0
  74 0058 FB1002E5 		str	r1, [r2, #-251]
  75              	.LBE66:
  76              	.LBE65:
  77              	.LBE64:
  78              	.LBE63:
  79              	.LBB67:
  80              	.LBB68:
  81              		.loc 2 534 0
  82 005c 1830E0E3 		mvn	r3, #24
  83 0060 AB3002E5 		str	r3, [r2, #-171]
  84              		.loc 2 535 0
  85 0064 AF1002E5 		str	r1, [r2, #-175]
  86              	.LBE68:
  87              	.LBE67:
  88              	.LBB69:
  89              	.LBB70:
  90              	.LBB71:
  91              	.LBB72:
  92              		.loc 2 1044 0
  93 0068 024CA0E3 		mov	r4, #512
  94 006c BA3F43E2 		sub	r3, r3, #744
  95 0070 EF4003E5 		str	r4, [r3, #-239]
  96              	.LBE72:
  97              	.LBE71:
  98              	.LBE70:
  99              	.LBE69:
  93:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****  // Configure TWI in master mode
  94:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	 AT91F_TWI_Configure (AT91C_BASE_TWI);
  95:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          // Configure TWI PIOs
  96:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	 AT91F_TWI_CfgPIO();
  97:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       	 AT91F_PIO_CfgOpendrain(AT91C_BASE_PIOA, // PIO controller base address
  98:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****     		                ((unsigned int) AT91C_PA4_TWCK    ) |
  99:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       		                ((unsigned int) AT91C_PA3_TWD  )  );
 100:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 101:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          // Configure PMC by enabling TWI clock
 102:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	 AT91F_TWI_CfgPMC ();
 103:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****     	 // AT91F_PMC_EnablePeriphClock ( AT91C_BASE_PMC, 1<<AT91C_ID_TWI ) ;
 104:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	 // Set TWI Clock Waveform Generator Register
 105:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****  	 AT91F_SetTwiClock();
 100              		.loc 1 105 0
 101 0074 FEFFFFEB 		bl	AT91F_SetTwiClock
 102              	.LBB73:
 103              	.LBB74:
 104              		.loc 2 62 0
 105 0078 0F2CE0E3 		mvn	r2, #3840
 106 007c 5B3012E5 		ldr	r3, [r2, #-91]
 107              	.LVL0:
 108              		.loc 2 66 0
 109 0080 254082E5 		str	r4, [r2, #37]
 110              		.loc 2 68 0
 111 0084 20309FE5 		ldr	r3, .L5
 112              	.LVL1:
 113 0088 5B3002E5 		str	r3, [r2, #-91]
 114              		.loc 2 70 0
 115 008c 0730A0E3 		mov	r3, #7
 116 0090 DB3002E5 		str	r3, [r2, #-219]
 117              		.loc 2 72 0
 118 0094 294082E5 		str	r4, [r2, #41]
 119              	.LBE74:
 120              	.LBE73:
 121              	.LBB75:
 122              	.LBB76:
 123              		.loc 2 86 0
 124 0098 214082E5 		str	r4, [r2, #33]
 125              	.LBE76:
 126              	.LBE75:
 106:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          AT91F_AIC_ConfigureIt ( AT91C_BASE_AIC,
 107:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                                 AT91C_ID_TWI,
 108:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                                 TWI_INTERRUPT_LEVEL,
 109:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                                 AT91C_AIC_SRCTYPE_INT_HIGH_LEVEL,
 110:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                                 ( void (*)( void ) )AT91_TWI_ISR_ENTRY);
 111:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 112:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   	 AT91F_AIC_EnableIt (AT91C_BASE_AIC, AT91C_ID_TWI);
 113:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_TransferStatus = FREE;
 127              		.loc 1 113 0
 128 009c 0C309FE5 		ldr	r3, .L5+4
 129 00a0 005083E5 		str	r5, [r3, #0]
 114:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** }
 130              		.loc 1 114 0
 131 00a4 3040BDE8 		ldmfd	sp!, {r4, r5, lr}
 132 00a8 1EFF2FE1 		bx	lr
 133              	.L6:
 134              		.align	2
 135              	.L5:
 136 00ac 00000000 		.word	AT91_TWI_ISR_ENTRY
 137 00b0 00000000 		.word	TWI_TransferStatus
 138              	.LFE292:
 140              		.section	.rodata.str1.4,"aMS",%progbits,1
 141              		.align	2
 142              	.LC0:
 143 0000 54574920 		.ascii	"TWI Nack\000"
 143      4E61636B 
 143      00
 144 0009 000000   		.align	2
 145              	.LC1:
 146 000c 54574920 		.ascii	"TWI TimeOut\000"
 146      54696D65 
 146      4F757400 
 147              		.align	2
 148              	.LC2:
 149 0018 54574920 		.ascii	"TWI Access\000"
 149      41636365 
 149      737300
 150 0023 00       		.align	2
 151              	.LC3:
 152 0024 54574920 		.ascii	"TWI Write\000"
 152      57726974 
 152      6500
 153 002e 0000     		.align	2
 154              	.LC4:
 155 0030 54574920 		.ascii	"TWI OVRE\000"
 155      4F565245 
 155      00
 156 0039 000000   		.text
 157              		.align	2
 158              		.global	AT91F_TWI_Init
 160              	AT91F_TWI_Init:
 161              	.LFB298:
 115:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 116:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 117:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 118:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 119:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*=========================================================
 120:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*		WRITE
 121:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*=========================================================
 122:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*----------------------------------------------------------------------------
 123:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* \fn    AT91F_TWI_Write
 124:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* \brief Send n bytes to a slave device
 125:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*----------------------------------------------------------------------------
 126:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** int AT91F_TWI_Write(unsigned int devaddress,unsigned int address,unsigned char *data2send, int size
 127:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** {
 128:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****  unsigned int SizeNotWrited = 0;
 129:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //---------------------------------------------------------
 130:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****  if( TWI_Semaphore != NULL )
 131:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****     {
 132:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       if( xSemaphoreTake( TWI_Semaphore, ( portTickType ) 2000 ) == pdTRUE )
 133:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       {
 134:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_TransferStatus = ON_WRITE_DATA;
 135:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         SizeNotWrited = 0;
 136:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_DataPointer = data2send;
 137:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_Bytes2Transfere = size;
 138:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_DeviceAddr = (devaddress<<16);
 139:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_TransferStatus = ON_WRITE_DATA;
 140:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** taskDISABLE_INTERRUPTS();
 141:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         AT91C_BASE_TWI->TWI_MMR = ( TWI_DeviceAddr | AT91C_TWI_IADRSZ_2_BYTE ) & ~AT91C_TWI_MREAD;
 142:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         AT91C_BASE_TWI->TWI_IADR = address;
 143:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	AT91C_BASE_TWI->TWI_THR = *(TWI_DataPointer++);
 144:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         AT91F_TWI_EnableIt(AT91C_BASE_TWI,AT91C_TWI_TXRDY | AT91C_TWI_NACK);
 145:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         AT91C_BASE_TWI->TWI_CR = AT91C_TWI_START ;
 146:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** taskENABLE_INTERRUPTS();
 147:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         xQueueReceive( TWI_QUEUE, &( SizeNotWrited ), ( portTickType ) AT91C_TWI_TMO_VOL(size));
 148:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         if( TWI_TransferStatus != FREE)
 149:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          {
 150:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****           // SYSTEM_ERROR(TWI_TMO_Error);
 151:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****            RESET_TWI();
 152:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          };
 153:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_TransferStatus = FREE;
 154:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 155:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         xSemaphoreGive( TWI_Semaphore );
 156:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       }
 157:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         else
 158:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         {
 159:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          //SYSTEM_ERROR(TWI_SEM_Error);
 160:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         }
 161:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****     }
 162:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****  return SizeNotWrited;
 163:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** }
 164:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*=========================================================
 165:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*		READ
 166:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*=========================================================
 167:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*----------------------------------------------------------------------------
 168:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* \fn    AT91F_TWI_Read
 169:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* \brief Read n bytes from a slave device
 170:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*----------------------------------------------------------------------------
 171:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** int AT91F_TWI_Read(unsigned int devaddress,unsigned int address,unsigned char *data,int size)
 172:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** {
 173:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   unsigned int SizeReaded;
 174:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   volatile unsigned int status;
 175:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   if( TWI_Semaphore != NULL )
 176:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****     {
 177:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       if( xSemaphoreTake( TWI_Semaphore, ( portTickType ) 2000 ) == pdTRUE )
 178:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       {
 179:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         SizeReaded = 0;
 180:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         AT91PS_TWI TWI = AT91C_BASE_TWI;
 181:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_DataPointer = data;
 182:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_Bytes2Transfere = size;
 183:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_DeviceAddr = (devaddress<<16);
 184:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	if(TWI_Bytes2Transfere>1)TWI_ConitiosTransaction = 1;
 185:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** taskDISABLE_INTERRUPTS();
 186:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	TWI->TWI_IADR = address;
 187:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	TWI->TWI_MMR = TWI_DeviceAddr | AT91C_TWI_IADRSZ_2_BYTE | AT91C_TWI_MREAD;
 188:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_TransferStatus = ON_READ_DATA;
 189:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         AT91F_TWI_EnableIt(TWI, AT91C_TWI_TXCOMP | AT91C_TWI_NACK | AT91C_TWI_OVRE | AT91C_TWI_UNRE
 190:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI->TWI_CR = AT91C_TWI_START | AT91C_TWI_MSEN | AT91C_TWI_STOP ;
 191:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         status = TWI->TWI_SR;
 192:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** taskENABLE_INTERRUPTS();
 193:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         xQueueReceive( TWI_QUEUE, &( SizeReaded ), ( portTickType ) AT91C_TWI_TMO_VOL(size) );
 194:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 195:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****    if( TWI_TransferStatus != FREE)
 196:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          {
 197:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          //  SYSTEM_ERROR(TWI_TMO_Error);
 198:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****            RESET_TWI();
 199:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 200:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          } ;
 201:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_TransferStatus = FREE;
 202:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         xSemaphoreGive( TWI_Semaphore );
 203:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       }
 204:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         else
 205:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         {
 206:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          //SYSTEM_ERROR(TWI_SEM_Error);
 207:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         }
 208:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****     }
 209:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   return SizeReaded;
 210:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** }
 211:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 212:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** int AT91F_TWI_WriteByteAddress(unsigned int devaddress,unsigned int address,unsigned char *data2sen
 213:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** {
 214:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   unsigned int SizeNotWrited;
 215:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   if( TWI_Semaphore != NULL )
 216:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****     {
 217:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       if( xSemaphoreTake( TWI_Semaphore, ( portTickType ) 2000 ) == pdTRUE )
 218:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       {
 219:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         SizeNotWrited = 0;
 220:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_DataPointer = data2send;
 221:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_Bytes2Transfere = size;
 222:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_DeviceAddr = (devaddress<<16);
 223:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_TransferStatus = ON_WRITE_DATA;
 224:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** taskDISABLE_INTERRUPTS();
 225:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         AT91C_BASE_TWI->TWI_MMR = ( TWI_DeviceAddr | AT91C_TWI_IADRSZ_1_BYTE ) & ~AT91C_TWI_MREAD;
 226:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	AT91C_BASE_TWI->TWI_IADR = address;
 227:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	AT91C_BASE_TWI->TWI_THR = *(TWI_DataPointer++);
 228:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         AT91F_TWI_EnableIt(AT91C_BASE_TWI,AT91C_TWI_TXRDY | AT91C_TWI_NACK);
 229:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         AT91C_BASE_TWI->TWI_CR = AT91C_TWI_START ;
 230:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** taskENABLE_INTERRUPTS();
 231:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         xQueueReceive( TWI_QUEUE, &( SizeNotWrited ), ( portTickType ) AT91C_TWI_TMO_VOL(size) );
 232:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         if( TWI_TransferStatus != FREE)
 233:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         {
 234:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          // SYSTEM_ERROR(TWI_TMO_Error);
 235:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****            RESET_TWI();
 236:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         };
 237:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_TransferStatus = FREE;
 238:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         xSemaphoreGive( TWI_Semaphore );
 239:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       }
 240:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         else
 241:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         {
 242:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 243:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         //  SYSTEM_ERROR(TWI_SEM_Error);
 244:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          TWI_TransferStatus = FREE;
 245:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         }
 246:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****     }
 247:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****    return SizeNotWrited;
 248:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** }
 249:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*=========================================================
 250:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*		READ
 251:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*=========================================================
 252:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*----------------------------------------------------------------------------
 253:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* \fn    AT91F_TWI_Read
 254:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* \brief Read n bytes from a slave device
 255:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*----------------------------------------------------------------------------
 256:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** int AT91F_TWI_ReadByteAddress(unsigned int devaddress,unsigned int address,unsigned char *data, int
 257:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** {
 258:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****  unsigned int SizeReaded,status;
 259:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****  if( TWI_Semaphore != NULL )
 260:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****     {
 261:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       if( xSemaphoreTake( TWI_Semaphore, ( portTickType ) 2000 ) == pdTRUE )
 262:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       {
 263:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         SizeReaded = 0;
 264:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 265:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_DataPointer = data;
 266:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_Bytes2Transfere = size;
 267:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_DeviceAddr = (devaddress<<16);
 268:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	if(TWI_Bytes2Transfere>1)TWI_ConitiosTransaction = 1;
 269:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** taskDISABLE_INTERRUPTS();
 270:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI->TWI_IADR = address;
 271:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	TWI->TWI_MMR = TWI_DeviceAddr | AT91C_TWI_IADRSZ_1_BYTE | AT91C_TWI_MREAD;
 272:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_TransferStatus = ON_READ_DATA;
 273:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         AT91F_TWI_EnableIt(TWI, AT91C_TWI_TXCOMP/* | AT91C_TWI_RXRDY*/|AT91C_TWI_NACK );
 274:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         status = TWI->TWI_SR;
 275:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI->TWI_CR = AT91C_TWI_START | AT91C_TWI_MSEN | AT91C_TWI_STOP ;
 276:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** taskENABLE_INTERRUPTS();
 277:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         xQueueReceive( TWI_QUEUE, &( SizeReaded ), ( portTickType ) AT91C_TWI_TMO_VOL(size) );
 278:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         if( TWI_TransferStatus != FREE)
 279:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         {
 280:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          // SYSTEM_ERROR(TWI_TMO_Error);
 281:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****           RESET_TWI();
 282:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         };
 283:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_TransferStatus = FREE;
 284:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         xSemaphoreGive( TWI_Semaphore );
 285:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       }
 286:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         else
 287:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         {
 288:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****        //  SYSTEM_ERROR(TWI_SEM_Error);
 289:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         }
 290:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****     }
 291:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****  return SizeReaded;
 292:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** }
 293:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 294:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*=========================================================
 295:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*		INIT
 296:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*=========================================================
 297:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*----------------------------------------------------------------------------
 298:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* \fn    AT91F_SetTwiClock
 299:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* \brief Initialization
 300:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*----------------------------------------------------------------------------
 301:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //===============================================================================================
 302:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** void AT91_TWI_ISR(void)
 303:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** {
 304:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   unsigned int status;
 305:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   volatile int SizeNotWrited;
 306:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   portBASE_TYPE xTaskWokenByTx = pdFALSE,xTaskWokenByPost = pdFALSE;
 307:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   // What caused the interrupt?
 308:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   status = AT91C_BASE_TWI->TWI_SR &= AT91C_BASE_TWI->TWI_IMR;
 309:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   SizeNotWrited = SizeNotWrited;
 310:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   if(status & AT91C_TWI_OVRE)
 311:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   {
 312:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       AT91F_TWI_DisableIt(AT91C_BASE_TWI,AT91C_TWI_TXRDY | AT91C_TWI_NACK | AT91C_TWI_TXCOMP|AT91C_
 313:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       AT91C_BASE_TWI->TWI_CR = AT91C_TWI_STOP;
 314:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****      // SYSTEM_ERROR(TWI_OVRE_Error);
 315:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       xQueueSendFromISR( TWI_QUEUE, &TWI_Bytes2Transfere, &xTaskWokenByPost );
 316:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       TWI_TransferStatus = FREE;
 317:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   }else
 318:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   if (status & AT91C_TWI_NACK)
 319:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****    {
 320:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       AT91F_TWI_DisableIt(AT91C_BASE_TWI,AT91C_TWI_TXRDY | AT91C_TWI_NACK | AT91C_TWI_TXCOMP|AT91C_
 321:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       AT91C_BASE_TWI->TWI_CR = AT91C_TWI_STOP;
 322:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****      // SYSTEM_ERROR(TWI_NACK_Error);
 323:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       xQueueSendFromISR( TWI_QUEUE, &TWI_Bytes2Transfere, &xTaskWokenByPost );
 324:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       TWI_TransferStatus = FREE;
 325:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****    }else
 326:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****      {
 327:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****        switch(TWI_TransferStatus)
 328:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****        {
 329:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****        case ON_READ_DATA:
 330:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****           if(status & AT91C_TWI_TXCOMP)
 331:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****              { // next char can be read
 332:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                if(TWI_Bytes2Transfere-- > 1)
 333:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                  {
 334:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                      *(TWI_DataPointer++) = AT91C_BASE_TWI->TWI_RHR;
 335:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 336:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                     if(TWI_ConitiosTransaction)
 337:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                      {
 338:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                        TWI_ConitiosTransaction = 0;
 339:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                        TWI->TWI_MMR = TWI_DeviceAddr | AT91C_TWI_IADRSZ_NO | AT91C_TWI_MREAD;
 340:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                       // AT91F_TWI_EnableIt(TWI, AT91C_TWI_TXCOMP | AT91C_TWI_NACK );
 341:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                      //  AT91C_BASE_TWI->TWI_CR = AT91C_TWI_START | AT91C_TWI_MSEN | AT91C_TWI_STOP
 342:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                      }
 343:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                      AT91C_BASE_TWI->TWI_CR = AT91C_TWI_START | AT91C_TWI_MSEN | AT91C_TWI_STOP;
 344:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 345:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                  } else
 346:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                      {
 347:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                        *(TWI_DataPointer++) = AT91C_BASE_TWI->TWI_RHR;
 348:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                        AT91F_TWI_DisableIt(AT91C_BASE_TWI,AT91C_TWI_TXCOMP|AT91C_TWI_NACK);
 349:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                        AT91C_BASE_TWI->TWI_CR = AT91C_TWI_STOP;
 350:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                        xQueueSendFromISR( TWI_QUEUE, &TWI_Bytes2Transfere, &xTaskWokenByPost );
 351:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                        TWI_TransferStatus = FREE;
 352:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                      }
 353:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****               }else
 354:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                 {
 355:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                   AT91C_BASE_TWI->TWI_CR = AT91C_TWI_STOP;
 356:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                 }
 357:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 358:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****             //-----------------------------
 359:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          break;
 360:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****        case ON_WRITE_DATA:
 361:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                if(status& AT91C_TWI_TXRDY)
 362:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****              { // next char can be write
 363:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                if(TWI_Bytes2Transfere-- > 1)
 364:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                  {
 365:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                      AT91C_BASE_TWI->TWI_THR = *(TWI_DataPointer++) ;
 366:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                  } else
 367:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                      {
 368:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                        AT91F_TWI_DisableIt(AT91C_BASE_TWI,AT91C_TWI_TXRDY|AT91C_TWI_NACK);
 369:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                        AT91C_BASE_TWI->TWI_CR = AT91C_TWI_STOP;
 370:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                        xQueueSendFromISR( TWI_QUEUE, &TWI_Bytes2Transfere, &xTaskWokenByPost );
 371:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                        TWI_TransferStatus = FREE;
 372:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                      }
 373:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****               }
 374:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****             //-----------------------------
 375:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          break;
 376:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****        default:
 377:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****             AT91F_TWI_DisableIt(AT91C_BASE_TWI,AT91C_TWI_RXRDY|AT91C_TWI_TXCOMP|AT91C_TWI_NACK);
 378:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****             xQueueSendFromISR( TWI_QUEUE, &TWI_Bytes2Transfere, &xTaskWokenByPost );
 379:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****             TWI_TransferStatus = FREE;
 380:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****        }
 381:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****      }
 382:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   if( xTaskWokenByPost)
 383:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          {
 384:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                  portYIELD_FROM_ISR();
 385:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          }
 386:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   AT91F_AIC_AcknowledgeIt(AT91C_BASE_AIC);
 387:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   // AT91C_BASE_AIC->AIC_EOICR = 0;
 388:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** }
 389:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 390:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //===============================================================================================
 391:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*----------------------------------------------------------------------------
 392:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* \fn    AT91F_TWI_Open
 393:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //* \brief Initializes TWI device
 394:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** //*----------------------------------------------------------------------------
 395:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** void AT91F_TWI_Init(void)
 396:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** {
 162              		.loc 1 396 0
 163              		@ Function supports interworking.
 164              		@ args = 0, pretend = 0, frame = 0
 165              		@ frame_needed = 0, uses_anonymous_args = 0
 166 00b4 30402DE9 		stmfd	sp!, {r4, r5, lr}
 167              	.LCFI1:
 397:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 398:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 399:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_QUEUE = xQueueCreate( 1, sizeof( unsigned int ) );
 168              		.loc 1 399 0
 169 00b8 0100A0E3 		mov	r0, #1
 170 00bc 0410A0E3 		mov	r1, #4
 171 00c0 FEFFFFEB 		bl	xQueueCreate
 172 00c4 0C319FE5 		ldr	r3, .L13
 173 00c8 000083E5 		str	r0, [r3, #0]
 400:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_NACK_Error = ErrorCreate("TWI Nack");
 174              		.loc 1 400 0
 175 00cc 08019FE5 		ldr	r0, .L13+4
 176 00d0 FEFFFFEB 		bl	ErrorCreate
 177 00d4 04319FE5 		ldr	r3, .L13+8
 178 00d8 B000C3E1 		strh	r0, [r3, #0]	@ movhi
 401:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_TMO_Error  = ErrorCreate("TWI TimeOut");
 179              		.loc 1 401 0
 180 00dc 00019FE5 		ldr	r0, .L13+12
 181 00e0 FEFFFFEB 		bl	ErrorCreate
 182 00e4 FC309FE5 		ldr	r3, .L13+16
 183 00e8 B000C3E1 		strh	r0, [r3, #0]	@ movhi
 402:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_SEM_Error  = ErrorCreate("TWI Access");
 184              		.loc 1 402 0
 185 00ec F8009FE5 		ldr	r0, .L13+20
 186 00f0 FEFFFFEB 		bl	ErrorCreate
 187 00f4 F4309FE5 		ldr	r3, .L13+24
 188 00f8 B000C3E1 		strh	r0, [r3, #0]	@ movhi
 403:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_WriteData_Error = ErrorCreate("TWI Write");
 189              		.loc 1 403 0
 190 00fc F0009FE5 		ldr	r0, .L13+28
 191 0100 FEFFFFEB 		bl	ErrorCreate
 192 0104 EC309FE5 		ldr	r3, .L13+32
 193 0108 B000C3E1 		strh	r0, [r3, #0]	@ movhi
 404:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_OVRE_Error = ErrorCreate("TWI OVRE");
 194              		.loc 1 404 0
 195 010c E8009FE5 		ldr	r0, .L13+36
 196 0110 FEFFFFEB 		bl	ErrorCreate
 197 0114 E4309FE5 		ldr	r3, .L13+40
 198 0118 B000C3E1 		strh	r0, [r3, #0]	@ movhi
 405:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_Semaphore = xSemaphoreCreateMutex();
 199              		.loc 1 405 0
 200 011c FEFFFFEB 		bl	xQueueCreateMutex
 201 0120 DC309FE5 		ldr	r3, .L13+44
 202 0124 000083E5 		str	r0, [r3, #0]
 406:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         while( TWI_QUEUE == 0 ) ;    // Queue was not created and must not be used.
 203              		.loc 1 406 0
 204 0128 A8209FE5 		ldr	r2, .L13
 205              	.L8:
 206 012c 003092E5 		ldr	r3, [r2, #0]
 207 0130 000053E3 		cmp	r3, #0
 208 0134 FCFFFF0A 		beq	.L8
 407:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         while( TWI_Semaphore == 0 ) ;    // Queue was not created and must not be used.
 209              		.loc 1 407 0
 210 0138 000050E3 		cmp	r0, #0
 211 013c 2400000A 		beq	.L9
 212              	.LBB77:
 213              	.LBB78:
 214              		.loc 2 2806 0
 215 0140 472AE0E3 		mvn	r2, #290816
 216 0144 0F2C42E2 		sub	r2, r2, #3840
 217 0148 0030E0E3 		mvn	r3, #0
 218 014c D73002E5 		str	r3, [r2, #-215]
 219              		.loc 2 2809 0
 220 0150 813083E2 		add	r3, r3, #129
 221 0154 FF3002E5 		str	r3, [r2, #-255]
 222              		.loc 2 2812 0
 223 0158 7C3043E2 		sub	r3, r3, #124
 224 015c FF3002E5 		str	r3, [r2, #-255]
 225              	.LBE78:
 226              	.LBE77:
 227              	.LBB79:
 228              	.LBB80:
 229              		.loc 2 508 0
 230 0160 0B3CE0E3 		mvn	r3, #2816
 231 0164 1020A0E3 		mov	r2, #16
 232 0168 FF2003E5 		str	r2, [r3, #-255]
 233              		.loc 2 509 0
 234 016c EF2003E5 		str	r2, [r3, #-239]
 235              	.LBE80:
 236              	.LBE79:
 237              	.LBB81:
 238              	.LBB82:
 239              		.loc 2 534 0
 240 0170 292042E2 		sub	r2, r2, #41
 241 0174 AB2003E5 		str	r2, [r3, #-171]
 242              		.loc 2 535 0
 243 0178 312082E2 		add	r2, r2, #49
 244 017c AF2003E5 		str	r2, [r3, #-175]
 245              	.LBE82:
 246              	.LBE81:
 247              	.LBB83:
 248              	.LBB84:
 249              	.LBB85:
 250              	.LBB86:
 251              		.loc 2 495 0
 252 0180 8F2003E5 		str	r2, [r3, #-143]
 253              		.loc 2 496 0
 254 0184 0050A0E3 		mov	r5, #0
 255 0188 8B5003E5 		str	r5, [r3, #-139]
 256              		.loc 2 497 0
 257 018c FB2003E5 		str	r2, [r3, #-251]
 258              	.LBE86:
 259              	.LBE85:
 260              	.LBE84:
 261              	.LBE83:
 262              	.LBB87:
 263              	.LBB88:
 264              	.LBB89:
 265              	.LBB90:
 266              		.loc 2 1044 0
 267 0190 024CA0E3 		mov	r4, #512
 268 0194 023B83E2 		add	r3, r3, #2048
 269 0198 EF4003E5 		str	r4, [r3, #-239]
 270              	.LBE90:
 271              	.LBE89:
 272              	.LBE88:
 273              	.LBE87:
 408:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 409:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         // Configure TWI in master mode
 410:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	 AT91F_TWI_Configure (AT91C_BASE_TWI);
 411:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          // Configure TWI PIOs
 412:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       	 AT91F_PIO_CfgOutput(AT91C_BASE_PIOA, AT91C_PA4_TWCK );
 413:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          AT91F_PIO_CfgOpendrain(AT91C_BASE_PIOA, // PIO controller base address
 414:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****     		                ((unsigned int) AT91C_PA4_TWCK    ) |
 415:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****       		                ((unsigned int) AT91C_PA3_TWD  )  );
 416:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 417:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          AT91F_TWI_CfgPIO();
 418:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 419:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          // Configure PMC by enabling TWI clock
 420:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	 AT91F_TWI_CfgPMC ();
 421:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****     	 // AT91F_PMC_EnablePeriphClock ( AT91C_BASE_PMC, 1<<AT91C_ID_TWI ) ;
 422:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 	 // Set TWI Clock Waveform Generator Register
 423:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****  	 AT91F_SetTwiClock();
 274              		.loc 1 423 0
 275 019c FEFFFFEB 		bl	AT91F_SetTwiClock
 276              	.LBB91:
 277              	.LBB92:
 278              		.loc 2 62 0
 279 01a0 0F2CE0E3 		mvn	r2, #3840
 280 01a4 5B3012E5 		ldr	r3, [r2, #-91]
 281              	.LVL2:
 282              		.loc 2 66 0
 283 01a8 254082E5 		str	r4, [r2, #37]
 284              		.loc 2 68 0
 285 01ac 54309FE5 		ldr	r3, .L13+48
 286              	.LVL3:
 287 01b0 5B3002E5 		str	r3, [r2, #-91]
 288              		.loc 2 70 0
 289 01b4 0730A0E3 		mov	r3, #7
 290 01b8 DB3002E5 		str	r3, [r2, #-219]
 291              		.loc 2 72 0
 292 01bc 294082E5 		str	r4, [r2, #41]
 293              	.LBE92:
 294              	.LBE91:
 295              	.LBB93:
 296              	.LBB94:
 297              		.loc 2 86 0
 298 01c0 214082E5 		str	r4, [r2, #33]
 299              	.LBE94:
 300              	.LBE93:
 424:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****          AT91F_AIC_ConfigureIt ( AT91C_BASE_AIC,
 425:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                                 AT91C_ID_TWI,
 426:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                                 TWI_INTERRUPT_LEVEL,
 427:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                                 AT91C_AIC_SRCTYPE_INT_HIGH_LEVEL,
 428:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****                                 ( void (*)( void ) )AT91_TWI_ISR_ENTRY);
 429:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c **** 
 430:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****   	 AT91F_AIC_EnableIt (AT91C_BASE_AIC, AT91C_ID_TWI);
 431:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****         TWI_TransferStatus = FREE;
 301              		.loc 1 431 0
 302 01c4 40309FE5 		ldr	r3, .L13+52
 303 01c8 005083E5 		str	r5, [r3, #0]
 432:rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c ****        }
 304              		.loc 1 432 0
 305 01cc 3040BDE8 		ldmfd	sp!, {r4, r5, lr}
 306 01d0 1EFF2FE1 		bx	lr
 307              	.L9:
 308              	.L12:
 309 01d4 FEFFFFEA 		b	.L12
 310              	.L14:
 311              		.align	2
 312              	.L13:
 313 01d8 00000000 		.word	TWI_QUEUE
 314 01dc 00000000 		.word	.LC0
 315 01e0 00000000 		.word	TWI_NACK_Error
 316 01e4 0C000000 		.word	.LC1
 317 01e8 00000000 		.word	TWI_TMO_Error
 318 01ec 18000000 		.word	.LC2
 319 01f0 00000000 		.word	TWI_SEM_Error
 320 01f4 24000000 		.word	.LC3
 321 01f8 00000000 		.word	TWI_WriteData_Error
 322 01fc 30000000 		.word	.LC4
 323 0200 00000000 		.word	TWI_OVRE_Error
 324 0204 00000000 		.word	TWI_Semaphore
 325 0208 00000000 		.word	AT91_TWI_ISR_ENTRY
 326 020c 00000000 		.word	TWI_TransferStatus
 327              	.LFE298:
 329              		.align	2
 330              		.global	AT91_TWI_ISR
 332              	AT91_TWI_ISR:
 333              	.LFB297:
 334              		.loc 1 303 0
 335              		@ Function supports interworking.
 336              		@ args = 0, pretend = 0, frame = 8
 337              		@ frame_needed = 0, uses_anonymous_args = 0
 338 0210 04E02DE5 		str	lr, [sp, #-4]!
 339              	.LCFI2:
 340 0214 08D04DE2 		sub	sp, sp, #8
 341              	.LCFI3:
 342              		.loc 1 306 0
 343 0218 0030A0E3 		mov	r3, #0
 344 021c 00308DE5 		str	r3, [sp, #0]
 345              	.LVL4:
 346              		.loc 1 308 0
 347 0220 472AE0E3 		mvn	r2, #290816
 348 0224 0F2C42E2 		sub	r2, r2, #3840
 349 0228 DF1012E5 		ldr	r1, [r2, #-223]
 350 022c D33012E5 		ldr	r3, [r2, #-211]
 351 0230 013003E0 		and	r3, r3, r1
 352 0234 DF3002E5 		str	r3, [r2, #-223]
 353 0238 DF2012E5 		ldr	r2, [r2, #-223]
 354              	.LVL5:
 355              		.loc 1 309 0
 356 023c 04309DE5 		ldr	r3, [sp, #4]
 357              	.LVL6:
 358 0240 04308DE5 		str	r3, [sp, #4]
 359              		.loc 1 310 0
 360 0244 400012E3 		tst	r2, #64
 361 0248 1000000A 		beq	.L16
 362              	.LVL7:
 363              	.LBB95:
 364              	.LBB96:
 365              		.loc 2 2796 0
 366 024c 472AE0E3 		mvn	r2, #290816
 367              	.LVL8:
 368 0250 0F2C42E2 		sub	r2, r2, #3840
 369 0254 413FA0E3 		mov	r3, #260
 370 0258 033083E2 		add	r3, r3, #3
 371 025c D73002E5 		str	r3, [r2, #-215]
 372              	.LBE96:
 373              	.LBE95:
 374              		.loc 1 313 0
 375 0260 0230A0E3 		mov	r3, #2
 376 0264 FF3002E5 		str	r3, [r2, #-255]
 377              		.loc 1 315 0
 378 0268 58329FE5 		ldr	r3, .L30
 379 026c 000093E5 		ldr	r0, [r3, #0]
 380 0270 54129FE5 		ldr	r1, .L30+4
 381 0274 0D20A0E1 		mov	r2, sp
 382 0278 0030A0E3 		mov	r3, #0
 383 027c FEFFFFEB 		bl	xQueueGenericSendFromISR
 384              		.loc 1 316 0
 385 0280 0020A0E3 		mov	r2, #0
 386 0284 44329FE5 		ldr	r3, .L30+8
 387 0288 002083E5 		str	r2, [r3, #0]
 388 028c 840000EA 		b	.L17
 389              	.LVL9:
 390              	.L16:
 391              		.loc 1 318 0
 392 0290 010C12E3 		tst	r2, #256
 393 0294 1000000A 		beq	.L18
 394              	.LBB97:
 395              	.LBB98:
 396              		.loc 2 2796 0
 397 0298 472AE0E3 		mvn	r2, #290816
 398              	.LVL10:
 399 029c 0F2C42E2 		sub	r2, r2, #3840
 400 02a0 413FA0E3 		mov	r3, #260
 401 02a4 033083E2 		add	r3, r3, #3
 402 02a8 D73002E5 		str	r3, [r2, #-215]
 403              	.LBE98:
 404              	.LBE97:
 405              		.loc 1 321 0
 406 02ac 0230A0E3 		mov	r3, #2
 407 02b0 FF3002E5 		str	r3, [r2, #-255]
 408              		.loc 1 323 0
 409 02b4 0C329FE5 		ldr	r3, .L30
 410 02b8 000093E5 		ldr	r0, [r3, #0]
 411 02bc 08129FE5 		ldr	r1, .L30+4
 412 02c0 0D20A0E1 		mov	r2, sp
 413 02c4 0030A0E3 		mov	r3, #0
 414 02c8 FEFFFFEB 		bl	xQueueGenericSendFromISR
 415              		.loc 1 324 0
 416 02cc 0020A0E3 		mov	r2, #0
 417 02d0 F8319FE5 		ldr	r3, .L30+8
 418 02d4 002083E5 		str	r2, [r3, #0]
 419 02d8 710000EA 		b	.L17
 420              	.LVL11:
 421              	.L18:
 422              		.loc 1 327 0
 423 02dc EC319FE5 		ldr	r3, .L30+8
 424 02e0 003093E5 		ldr	r3, [r3, #0]
 425 02e4 010053E3 		cmp	r3, #1
 426 02e8 0200000A 		beq	.L20
 427 02ec 020053E3 		cmp	r3, #2
 428 02f0 5D00001A 		bne	.L28
 429 02f4 3C0000EA 		b	.L29
 430              	.L20:
 431              		.loc 1 330 0
 432 02f8 010012E3 		tst	r2, #1
 433              		.loc 1 355 0
 434 02fc 473AE003 		mvneq	r3, #290816
 435 0300 0F3C4302 		subeq	r3, r3, #3840
 436 0304 0220A003 		moveq	r2, #2
 437              	.LVL12:
 438 0308 FF200305 		streq	r2, [r3, #-255]
 439              		.loc 1 330 0
 440 030c 6700000A 		beq	.L25
 441              		.loc 1 332 0
 442 0310 B4319FE5 		ldr	r3, .L30+4
 443 0314 001093E5 		ldr	r1, [r3, #0]
 444 0318 012041E2 		sub	r2, r1, #1
 445 031c 002083E5 		str	r2, [r3, #0]
 446 0320 010051E3 		cmp	r1, #1
 447 0324 1900009A 		bls	.L23
 448              		.loc 1 334 0
 449 0328 A4119FE5 		ldr	r1, .L30+12
 450 032c 473AE0E3 		mvn	r3, #290816
 451 0330 0F3C43E2 		sub	r3, r3, #3840
 452 0334 CF2013E5 		ldr	r2, [r3, #-207]
 453 0338 FF2002E2 		and	r2, r2, #255
 454 033c 003091E5 		ldr	r3, [r1, #0]
 455 0340 0120C3E4 		strb	r2, [r3], #1
 456 0344 003081E5 		str	r3, [r1, #0]
 457              		.loc 1 336 0
 458 0348 88319FE5 		ldr	r3, .L30+16
 459 034c 003093E5 		ldr	r3, [r3, #0]
 460 0350 000053E3 		cmp	r3, #0
 461 0354 0800000A 		beq	.L24
 462              		.loc 1 338 0
 463 0358 0020A0E3 		mov	r2, #0
 464 035c 74319FE5 		ldr	r3, .L30+16
 465 0360 002083E5 		str	r2, [r3, #0]
 466              		.loc 1 339 0
 467 0364 70319FE5 		ldr	r3, .L30+20
 468 0368 002093E5 		ldr	r2, [r3, #0]
 469 036c 6C319FE5 		ldr	r3, .L30+24
 470 0370 003093E5 		ldr	r3, [r3, #0]
 471 0374 013A83E3 		orr	r3, r3, #4096
 472 0378 043082E5 		str	r3, [r2, #4]
 473              	.L24:
 474              		.loc 1 343 0
 475 037c 473AE0E3 		mvn	r3, #290816
 476 0380 0F3C43E2 		sub	r3, r3, #3840
 477 0384 0720A0E3 		mov	r2, #7
 478 0388 FF2003E5 		str	r2, [r3, #-255]
 479 038c 440000EA 		b	.L17
 480              	.L23:
 481              		.loc 1 347 0
 482 0390 3C019FE5 		ldr	r0, .L30+12
 483 0394 471AE0E3 		mvn	r1, #290816
 484 0398 0F1C41E2 		sub	r1, r1, #3840
 485 039c CF2011E5 		ldr	r2, [r1, #-207]
 486 03a0 FF2002E2 		and	r2, r2, #255
 487 03a4 003090E5 		ldr	r3, [r0, #0]
 488 03a8 0120C3E4 		strb	r2, [r3], #1
 489 03ac 003080E5 		str	r3, [r0, #0]
 490              	.LBB99:
 491              	.LBB100:
 492              		.loc 2 2796 0
 493 03b0 013CA0E3 		mov	r3, #256
 494 03b4 013083E2 		add	r3, r3, #1
 495 03b8 D73001E5 		str	r3, [r1, #-215]
 496              	.LBE100:
 497              	.LBE99:
 498              		.loc 1 349 0
 499 03bc FF3043E2 		sub	r3, r3, #255
 500 03c0 FF3001E5 		str	r3, [r1, #-255]
 501              		.loc 1 350 0
 502 03c4 FC309FE5 		ldr	r3, .L30
 503 03c8 000093E5 		ldr	r0, [r3, #0]
 504 03cc F8109FE5 		ldr	r1, .L30+4
 505 03d0 0D20A0E1 		mov	r2, sp
 506 03d4 0030A0E3 		mov	r3, #0
 507 03d8 FEFFFFEB 		bl	xQueueGenericSendFromISR
 508              		.loc 1 351 0
 509 03dc 0020A0E3 		mov	r2, #0
 510 03e0 E8309FE5 		ldr	r3, .L30+8
 511 03e4 002083E5 		str	r2, [r3, #0]
 512 03e8 2D0000EA 		b	.L17
 513              	.LVL13:
 514              	.L29:
 515              		.loc 1 361 0
 516 03ec 040012E3 		tst	r2, #4
 517 03f0 2E00000A 		beq	.L25
 518              		.loc 1 363 0
 519 03f4 D0309FE5 		ldr	r3, .L30+4
 520 03f8 001093E5 		ldr	r1, [r3, #0]
 521 03fc 012041E2 		sub	r2, r1, #1
 522              	.LVL14:
 523 0400 002083E5 		str	r2, [r3, #0]
 524 0404 010051E3 		cmp	r1, #1
 525 0408 0700009A 		bls	.L26
 526              		.loc 1 365 0
 527 040c C0009FE5 		ldr	r0, .L30+12
 528 0410 001090E5 		ldr	r1, [r0, #0]
 529 0414 0120D1E4 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 530 0418 473AE0E3 		mvn	r3, #290816
 531 041c 0F3C43E2 		sub	r3, r3, #3840
 532 0420 CB2003E5 		str	r2, [r3, #-203]
 533 0424 001080E5 		str	r1, [r0, #0]
 534 0428 200000EA 		b	.L25
 535              	.L26:
 536              	.LBB101:
 537              	.LBB102:
 538              		.loc 2 2796 0
 539 042c 473AE0E3 		mvn	r3, #290816
 540 0430 0F3C43E2 		sub	r3, r3, #3840
 541 0434 412FA0E3 		mov	r2, #260
 542 0438 D72003E5 		str	r2, [r3, #-215]
 543              	.LBE102:
 544              	.LBE101:
 545              		.loc 1 369 0
 546 043c 0220A0E3 		mov	r2, #2
 547 0440 FF2003E5 		str	r2, [r3, #-255]
 548              		.loc 1 370 0
 549 0444 7C309FE5 		ldr	r3, .L30
 550 0448 000093E5 		ldr	r0, [r3, #0]
 551 044c 78109FE5 		ldr	r1, .L30+4
 552 0450 0D20A0E1 		mov	r2, sp
 553 0454 0030A0E3 		mov	r3, #0
 554 0458 FEFFFFEB 		bl	xQueueGenericSendFromISR
 555              		.loc 1 371 0
 556 045c 0020A0E3 		mov	r2, #0
 557 0460 68309FE5 		ldr	r3, .L30+8
 558 0464 002083E5 		str	r2, [r3, #0]
 559 0468 0D0000EA 		b	.L17
 560              	.LVL15:
 561              	.L28:
 562              	.LBB103:
 563              	.LBB104:
 564              		.loc 2 2796 0
 565 046c 472AE0E3 		mvn	r2, #290816
 566              	.LVL16:
 567 0470 0F2C42E2 		sub	r2, r2, #3840
 568 0474 013CA0E3 		mov	r3, #256
 569 0478 033083E2 		add	r3, r3, #3
 570 047c D73002E5 		str	r3, [r2, #-215]
 571              	.LBE104:
 572              	.LBE103:
 573              		.loc 1 378 0
 574 0480 40309FE5 		ldr	r3, .L30
 575 0484 000093E5 		ldr	r0, [r3, #0]
 576 0488 3C109FE5 		ldr	r1, .L30+4
 577 048c 0D20A0E1 		mov	r2, sp
 578 0490 0030A0E3 		mov	r3, #0
 579 0494 FEFFFFEB 		bl	xQueueGenericSendFromISR
 580              		.loc 1 379 0
 581 0498 0020A0E3 		mov	r2, #0
 582 049c 2C309FE5 		ldr	r3, .L30+8
 583 04a0 002083E5 		str	r2, [r3, #0]
 584              	.L17:
 585              		.loc 1 382 0
 586 04a4 00309DE5 		ldr	r3, [sp, #0]
 587 04a8 000053E3 		cmp	r3, #0
 588              	.LVL17:
 589              		.loc 1 384 0
 590 04ac FEFFFF1B 		blne	vTaskSwitchContext
 591              	.LVL18:
 592              	.L25:
 593              	.LBB105:
 594              	.LBB106:
 595              		.loc 2 123 0
 596 04b0 0F2CE0E3 		mvn	r2, #3840
 597              	.LVL19:
 598 04b4 313092E5 		ldr	r3, [r2, #49]
 599 04b8 313082E5 		str	r3, [r2, #49]
 600              	.LBE106:
 601              	.LBE105:
 602              		.loc 1 388 0
 603 04bc 08D08DE2 		add	sp, sp, #8
 604 04c0 04E09DE4 		ldr	lr, [sp], #4
 605 04c4 1EFF2FE1 		bx	lr
 606              	.L31:
 607              		.align	2
 608              	.L30:
 609 04c8 00000000 		.word	TWI_QUEUE
 610 04cc 00000000 		.word	TWI_Bytes2Transfere
 611 04d0 00000000 		.word	TWI_TransferStatus
 612 04d4 00000000 		.word	TWI_DataPointer
 613 04d8 00000000 		.word	TWI_ConitiosTransaction
 614 04dc 00000000 		.word	TWI
 615 04e0 00000000 		.word	TWI_DeviceAddr
 616              	.LFE297:
 618              		.align	2
 619              		.global	AT91_TWI_ISR_ENTRY
 621              	AT91_TWI_ISR_ENTRY:
 622              	.LFB290:
 623              		.loc 1 60 0
 624              		@ Function supports interworking.
 625              		@ Naked Function: prologue and epilogue provided by programmer.
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              		.loc 1 61 0
 629              	@ 61 "rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c" 1
 630 04e4 01002DE9 		STMDB	SP!, {R0}											
 631 04e8 00204DE9 		STMDB	SP,{SP}^											
 632 04ec 0000A0E1 		NOP														
 633 04f0 04D04DE2 		SUB	SP, SP, #4											
 634 04f4 0100BDE8 		LDMIA	SP!,{R0}											
 635 04f8 004020E9 		STMDB	R0!, {LR}											
 636 04fc 00E0A0E1 		MOV	LR, R0												
 637 0500 0100BDE8 		LDMIA	SP!, {R0}											
 638 0504 FF7F4EE9 		STMDB	LR,{R0-LR}^											
 639 0508 0000A0E1 		NOP														
 640 050c 3CE04EE2 		SUB	LR, LR, #60											
 641 0510 00004FE1 		MRS	R0, SPSR											
 642 0514 01002EE9 		STMDB	LR!, {R0}											
 643 0518 3C059FE5 		LDR	R0, =ulCriticalNesting								
 644 051c 000090E5 		LDR	R0, [R0]											
 645 0520 01002EE9 		STMDB	LR!, {R0}											
 646 0524 34059FE5 		LDR	R0, =pxCurrentTCB									
 647 0528 000090E5 		LDR	R0, [R0]											
 648 052c 00E080E5 		STR	LR, [R0]											
 649              		
 650              	@ 0 "" 2
 651 0530 44509FE5 		ldr	r5, .L34
 652 0534 003095E5 		ldr	r3, [r5, #0]
 653 0538 40409FE5 		ldr	r4, .L34+4
 654 053c 003094E5 		ldr	r3, [r4, #0]
 655              		.loc 1 62 0
 656 0540 FEFFFFEB 		bl	AT91_TWI_ISR
 657              		.loc 1 63 0
 658              	@ 63 "rtos/portable/GCC/AT91SAM7S256/perepherial/twi.c" 1
 659 0544 14059FE5 		LDR		R0, =pxCurrentTCB								
 660 0548 000090E5 		LDR		R0, [R0]										
 661 054c 00E090E5 		LDR		LR, [R0]										
 662 0550 04059FE5 		LDR		R0, =ulCriticalNesting							
 663 0554 0200BEE8 		LDMFD	LR!, {R1}											
 664 0558 001080E5 		STR		R1, [R0]										
 665 055c 0100BEE8 		LDMFD	LR!, {R0}											
 666 0560 00F069E1 		MSR		SPSR, R0										
 667 0564 FF7FDEE8 		LDMFD	LR, {R0-R14}^										
 668 0568 0000A0E1 		NOP														
 669 056c 3CE09EE5 		LDR		LR, [LR, #+60]									
 670 0570 04F05EE2 		SUBS	PC, LR, #4											
 671              		
 672              	@ 0 "" 2
 673 0574 005095E5 		ldr	r5, [r5, #0]
 674 0578 004094E5 		ldr	r4, [r4, #0]
 675              		.loc 1 64 0
 676              	.L35:
 677              		.align	2
 678              	.L34:
 679 057c 00000000 		.word	ulCriticalNesting
 680 0580 00000000 		.word	pxCurrentTCB
 681              	.LFE290:
 683              		.align	2
 684              		.global	AT91F_TWI_ReadByteAddress
 686              	AT91F_TWI_ReadByteAddress:
 687              	.LFB296:
 688              		.loc 1 257 0
 689              		@ Function supports interworking.
 690              		@ args = 0, pretend = 0, frame = 4
 691              		@ frame_needed = 0, uses_anonymous_args = 0
 692              	.LVL20:
 693 0584 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
 694              	.LCFI4:
 695 0588 04D04DE2 		sub	sp, sp, #4
 696              	.LCFI5:
 697 058c 0060A0E1 		mov	r6, r0
 698 0590 0170A0E1 		mov	r7, r1
 699 0594 0240A0E1 		mov	r4, r2
 700 0598 0350A0E1 		mov	r5, r3
 701              		.loc 1 259 0
 702 059c 04319FE5 		ldr	r3, .L41
 703              	.LVL21:
 704 05a0 000093E5 		ldr	r0, [r3, #0]
 705              	.LVL22:
 706 05a4 000050E3 		cmp	r0, #0
 707 05a8 3A00000A 		beq	.L37
 708              	.LVL23:
 709              		.loc 1 261 0
 710 05ac 0010A0E3 		mov	r1, #0
 711 05b0 7D2EA0E3 		mov	r2, #2000
 712 05b4 0130A0E1 		mov	r3, r1
 713 05b8 FEFFFFEB 		bl	xQueueGenericReceive
 714 05bc 010050E3 		cmp	r0, #1
 715 05c0 3400001A 		bne	.L37
 716              		.loc 1 265 0
 717 05c4 E0309FE5 		ldr	r3, .L41+4
 718 05c8 004083E5 		str	r4, [r3, #0]
 719              		.loc 1 266 0
 720 05cc DC109FE5 		ldr	r1, .L41+8
 721 05d0 005081E5 		str	r5, [r1, #0]
 722              		.loc 1 267 0
 723 05d4 0628A0E1 		mov	r2, r6, asl #16
 724 05d8 D4309FE5 		ldr	r3, .L41+12
 725 05dc 002083E5 		str	r2, [r3, #0]
 726              		.loc 1 268 0
 727 05e0 003091E5 		ldr	r3, [r1, #0]
 728 05e4 010053E3 		cmp	r3, #1
 729 05e8 0120A083 		movhi	r2, #1
 730 05ec C4309F85 		ldrhi	r3, .L41+16
 731 05f0 00208385 		strhi	r2, [r3, #0]
 732              		.loc 1 263 0
 733 05f4 0060A0E3 		mov	r6, #0
 734              	.LVL24:
 735 05f8 04408DE2 		add	r4, sp, #4
 736              	.LVL25:
 737 05fc 046024E5 		str	r6, [r4, #-4]!
 738              	.LVL26:
 739              		.loc 1 269 0
 740 0600 FEFFFFEB 		bl	vPortDisableInterruptsFromThumb
 741              		.loc 1 270 0
 742 0604 B0209FE5 		ldr	r2, .L41+20
 743 0608 003092E5 		ldr	r3, [r2, #0]
 744 060c 0C7083E5 		str	r7, [r3, #12]
 745              		.loc 1 271 0
 746 0610 001092E5 		ldr	r1, [r2, #0]
 747 0614 98309FE5 		ldr	r3, .L41+12
 748 0618 003093E5 		ldr	r3, [r3, #0]
 749 061c 113C83E3 		orr	r3, r3, #4352
 750 0620 043081E5 		str	r3, [r1, #4]
 751              		.loc 1 272 0
 752 0624 94509FE5 		ldr	r5, .L41+24
 753              	.LVL27:
 754 0628 0130A0E3 		mov	r3, #1
 755 062c 003085E5 		str	r3, [r5, #0]
 756              		.loc 1 273 0
 757 0630 001092E5 		ldr	r1, [r2, #0]
 758              	.LBB107:
 759              	.LBB108:
 760              		.loc 2 2784 0
 761 0634 FF3083E2 		add	r3, r3, #255
 762 0638 013083E2 		add	r3, r3, #1
 763 063c 243081E5 		str	r3, [r1, #36]
 764              	.LBE108:
 765              	.LBE107:
 766              		.loc 1 274 0
 767 0640 002092E5 		ldr	r2, [r2, #0]
 768 0644 203092E5 		ldr	r3, [r2, #32]
 769              	.LVL28:
 770              		.loc 1 275 0
 771 0648 0730A0E3 		mov	r3, #7
 772              	.LVL29:
 773 064c 003082E5 		str	r3, [r2, #0]
 774              		.loc 1 276 0
 775 0650 FEFFFFEB 		bl	vPortEnableInterruptsFromThumb
 776              		.loc 1 277 0
 777 0654 68309FE5 		ldr	r3, .L41+28
 778 0658 000093E5 		ldr	r0, [r3, #0]
 779 065c 0D10A0E1 		mov	r1, sp
 780 0660 7D2EA0E3 		mov	r2, #2000
 781 0664 0630A0E1 		mov	r3, r6
 782 0668 FEFFFFEB 		bl	xQueueGenericReceive
 783              		.loc 1 278 0
 784 066c 003095E5 		ldr	r3, [r5, #0]
 785 0670 060053E1 		cmp	r3, r6
 786              		.loc 1 281 0
 787 0674 FEFFFF1B 		blne	RESET_TWI
 788              	.L39:
 789              		.loc 1 283 0
 790 0678 0030A0E3 		mov	r3, #0
 791 067c 3C209FE5 		ldr	r2, .L41+24
 792 0680 003082E5 		str	r3, [r2, #0]
 793              		.loc 1 284 0
 794 0684 1C209FE5 		ldr	r2, .L41
 795 0688 000092E5 		ldr	r0, [r2, #0]
 796 068c 0310A0E1 		mov	r1, r3
 797 0690 0320A0E1 		mov	r2, r3
 798 0694 FEFFFFEB 		bl	xQueueGenericSend
 799              	.LVL30:
 800              	.L37:
 801              		.loc 1 292 0
 802 0698 00009DE5 		ldr	r0, [sp, #0]
 803 069c 04D08DE2 		add	sp, sp, #4
 804 06a0 F040BDE8 		ldmfd	sp!, {r4, r5, r6, r7, lr}
 805 06a4 1EFF2FE1 		bx	lr
 806              	.L42:
 807              		.align	2
 808              	.L41:
 809 06a8 00000000 		.word	TWI_Semaphore
 810 06ac 00000000 		.word	TWI_DataPointer
 811 06b0 00000000 		.word	TWI_Bytes2Transfere
 812 06b4 00000000 		.word	TWI_DeviceAddr
 813 06b8 00000000 		.word	TWI_ConitiosTransaction
 814 06bc 00000000 		.word	TWI
 815 06c0 00000000 		.word	TWI_TransferStatus
 816 06c4 00000000 		.word	TWI_QUEUE
 817              	.LFE296:
 819              		.align	2
 820              		.global	AT91F_TWI_WriteByteAddress
 822              	AT91F_TWI_WriteByteAddress:
 823              	.LFB295:
 824              		.loc 1 213 0
 825              		@ Function supports interworking.
 826              		@ args = 0, pretend = 0, frame = 4
 827              		@ frame_needed = 0, uses_anonymous_args = 0
 828              	.LVL31:
 829 06c8 F0472DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 830              	.LCFI6:
 831 06cc 04D04DE2 		sub	sp, sp, #4
 832              	.LCFI7:
 833 06d0 00A0A0E1 		mov	sl, r0
 834 06d4 0190A0E1 		mov	r9, r1
 835 06d8 0240A0E1 		mov	r4, r2
 836 06dc 0370A0E1 		mov	r7, r3
 837              		.loc 1 215 0
 838 06e0 F8309FE5 		ldr	r3, .L48
 839              	.LVL32:
 840 06e4 000093E5 		ldr	r0, [r3, #0]
 841              	.LVL33:
 842 06e8 000050E3 		cmp	r0, #0
 843 06ec 3700000A 		beq	.L44
 844              	.LVL34:
 845              		.loc 1 217 0
 846 06f0 0010A0E3 		mov	r1, #0
 847 06f4 7D2EA0E3 		mov	r2, #2000
 848 06f8 0130A0E1 		mov	r3, r1
 849 06fc FEFFFFEB 		bl	xQueueGenericReceive
 850 0700 010050E3 		cmp	r0, #1
 851              		.loc 1 244 0
 852 0704 0020A013 		movne	r2, #0
 853 0708 D4309F15 		ldrne	r3, .L48+4
 854 070c 00208315 		strne	r2, [r3, #0]
 855              		.loc 1 217 0
 856 0710 2E00001A 		bne	.L44
 857              		.loc 1 219 0
 858 0714 0080A0E3 		mov	r8, #0
 859 0718 04608DE2 		add	r6, sp, #4
 860 071c 048026E5 		str	r8, [r6, #-4]!
 861              	.LVL35:
 862              		.loc 1 220 0
 863 0720 C0509FE5 		ldr	r5, .L48+8
 864 0724 004085E5 		str	r4, [r5, #0]
 865              		.loc 1 221 0
 866 0728 BC309FE5 		ldr	r3, .L48+12
 867 072c 007083E5 		str	r7, [r3, #0]
 868              		.loc 1 222 0
 869 0730 0A38A0E1 		mov	r3, sl, asl #16
 870 0734 B4409FE5 		ldr	r4, .L48+16
 871              	.LVL36:
 872 0738 003084E5 		str	r3, [r4, #0]
 873              		.loc 1 223 0
 874 073c A0709FE5 		ldr	r7, .L48+4
 875              	.LVL37:
 876 0740 0230A0E3 		mov	r3, #2
 877 0744 003087E5 		str	r3, [r7, #0]
 878              		.loc 1 224 0
 879 0748 FEFFFFEB 		bl	vPortDisableInterruptsFromThumb
 880              		.loc 1 225 0
 881 074c 003094E5 		ldr	r3, [r4, #0]
 882 0750 113CC3E3 		bic	r3, r3, #4352
 883 0754 013C83E3 		orr	r3, r3, #256
 884 0758 472AE0E3 		mvn	r2, #290816
 885 075c 0F2C42E2 		sub	r2, r2, #3840
 886 0760 FB3002E5 		str	r3, [r2, #-251]
 887              		.loc 1 226 0
 888 0764 F39002E5 		str	r9, [r2, #-243]
 889              		.loc 1 227 0
 890 0768 001095E5 		ldr	r1, [r5, #0]
 891 076c 0130D1E4 		ldrb	r3, [r1], #1	@ zero_extendqisi2
 892 0770 CB3002E5 		str	r3, [r2, #-203]
 893 0774 001085E5 		str	r1, [r5, #0]
 894              	.LBB109:
 895              	.LBB110:
 896              		.loc 2 2784 0
 897 0778 413FA0E3 		mov	r3, #260
 898 077c DB3002E5 		str	r3, [r2, #-219]
 899              	.LBE110:
 900              	.LBE109:
 901              		.loc 1 229 0
 902 0780 0130A0E3 		mov	r3, #1
 903 0784 FF3002E5 		str	r3, [r2, #-255]
 904              		.loc 1 230 0
 905 0788 FEFFFFEB 		bl	vPortEnableInterruptsFromThumb
 906              		.loc 1 231 0
 907 078c 60309FE5 		ldr	r3, .L48+20
 908 0790 000093E5 		ldr	r0, [r3, #0]
 909 0794 0D10A0E1 		mov	r1, sp
 910 0798 7D2EA0E3 		mov	r2, #2000
 911 079c 0830A0E1 		mov	r3, r8
 912 07a0 FEFFFFEB 		bl	xQueueGenericReceive
 913              		.loc 1 232 0
 914 07a4 003097E5 		ldr	r3, [r7, #0]
 915 07a8 080053E1 		cmp	r3, r8
 916              		.loc 1 235 0
 917 07ac FEFFFF1B 		blne	RESET_TWI
 918              	.L46:
 919              		.loc 1 237 0
 920 07b0 0030A0E3 		mov	r3, #0
 921 07b4 28209FE5 		ldr	r2, .L48+4
 922 07b8 003082E5 		str	r3, [r2, #0]
 923              		.loc 1 238 0
 924 07bc 1C209FE5 		ldr	r2, .L48
 925 07c0 000092E5 		ldr	r0, [r2, #0]
 926 07c4 0310A0E1 		mov	r1, r3
 927 07c8 0320A0E1 		mov	r2, r3
 928 07cc FEFFFFEB 		bl	xQueueGenericSend
 929              	.LVL38:
 930              	.L44:
 931              		.loc 1 248 0
 932 07d0 00009DE5 		ldr	r0, [sp, #0]
 933 07d4 04D08DE2 		add	sp, sp, #4
 934 07d8 F047BDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 935 07dc 1EFF2FE1 		bx	lr
 936              	.L49:
 937              		.align	2
 938              	.L48:
 939 07e0 00000000 		.word	TWI_Semaphore
 940 07e4 00000000 		.word	TWI_TransferStatus
 941 07e8 00000000 		.word	TWI_DataPointer
 942 07ec 00000000 		.word	TWI_Bytes2Transfere
 943 07f0 00000000 		.word	TWI_DeviceAddr
 944 07f4 00000000 		.word	TWI_QUEUE
 945              	.LFE295:
 947              		.align	2
 948              		.global	AT91F_TWI_Read
 950              	AT91F_TWI_Read:
 951              	.LFB294:
 952              		.loc 1 172 0
 953              		@ Function supports interworking.
 954              		@ args = 0, pretend = 0, frame = 8
 955              		@ frame_needed = 0, uses_anonymous_args = 0
 956              	.LVL39:
 957 07f8 F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
 958              	.LCFI8:
 959 07fc 08D04DE2 		sub	sp, sp, #8
 960              	.LCFI9:
 961 0800 0060A0E1 		mov	r6, r0
 962 0804 0170A0E1 		mov	r7, r1
 963 0808 0240A0E1 		mov	r4, r2
 964 080c 0350A0E1 		mov	r5, r3
 965              		.loc 1 175 0
 966 0810 F8309FE5 		ldr	r3, .L55
 967              	.LVL40:
 968 0814 000093E5 		ldr	r0, [r3, #0]
 969              	.LVL41:
 970 0818 000050E3 		cmp	r0, #0
 971 081c 3700000A 		beq	.L51
 972              	.LVL42:
 973              		.loc 1 177 0
 974 0820 0010A0E3 		mov	r1, #0
 975 0824 7D2EA0E3 		mov	r2, #2000
 976 0828 0130A0E1 		mov	r3, r1
 977 082c FEFFFFEB 		bl	xQueueGenericReceive
 978 0830 010050E3 		cmp	r0, #1
 979 0834 3100001A 		bne	.L51
 980              	.LBB111:
 981              		.loc 1 181 0
 982 0838 D4309FE5 		ldr	r3, .L55+4
 983 083c 004083E5 		str	r4, [r3, #0]
 984              		.loc 1 182 0
 985 0840 D0109FE5 		ldr	r1, .L55+8
 986 0844 005081E5 		str	r5, [r1, #0]
 987              		.loc 1 183 0
 988 0848 0628A0E1 		mov	r2, r6, asl #16
 989 084c C8309FE5 		ldr	r3, .L55+12
 990 0850 002083E5 		str	r2, [r3, #0]
 991              		.loc 1 184 0
 992 0854 003091E5 		ldr	r3, [r1, #0]
 993 0858 010053E3 		cmp	r3, #1
 994 085c 0120A083 		movhi	r2, #1
 995 0860 B8309F85 		ldrhi	r3, .L55+16
 996 0864 00208385 		strhi	r2, [r3, #0]
 997              		.loc 1 179 0
 998 0868 0050A0E3 		mov	r5, #0
 999              	.LVL43:
 1000 086c 04508DE5 		str	r5, [sp, #4]
 1001              	.LVL44:
 1002              		.loc 1 185 0
 1003 0870 FEFFFFEB 		bl	vPortDisableInterruptsFromThumb
 1004              		.loc 1 186 0
 1005 0874 472AE0E3 		mvn	r2, #290816
 1006 0878 0F2C42E2 		sub	r2, r2, #3840
 1007 087c F37002E5 		str	r7, [r2, #-243]
 1008              		.loc 1 187 0
 1009 0880 94309FE5 		ldr	r3, .L55+12
 1010 0884 003093E5 		ldr	r3, [r3, #0]
 1011 0888 123C83E3 		orr	r3, r3, #4608
 1012 088c FB3002E5 		str	r3, [r2, #-251]
 1013              		.loc 1 188 0
 1014 0890 8C409FE5 		ldr	r4, .L55+20
 1015              	.LVL45:
 1016 0894 0130A0E3 		mov	r3, #1
 1017 0898 003084E5 		str	r3, [r4, #0]
 1018              	.LBB112:
 1019              	.LBB113:
 1020              		.loc 2 2784 0
 1021 089c 073DA0E3 		mov	r3, #448
 1022 08a0 013083E2 		add	r3, r3, #1
 1023 08a4 DB3002E5 		str	r3, [r2, #-219]
 1024              	.LBE113:
 1025              	.LBE112:
 1026              		.loc 1 190 0
 1027 08a8 0730A0E3 		mov	r3, #7
 1028 08ac FF3002E5 		str	r3, [r2, #-255]
 1029              		.loc 1 191 0
 1030 08b0 DF3012E5 		ldr	r3, [r2, #-223]
 1031              	.LVL46:
 1032 08b4 00308DE5 		str	r3, [sp, #0]
 1033              		.loc 1 192 0
 1034 08b8 FEFFFFEB 		bl	vPortEnableInterruptsFromThumb
 1035              	.LVL47:
 1036              		.loc 1 193 0
 1037 08bc 64309FE5 		ldr	r3, .L55+24
 1038 08c0 000093E5 		ldr	r0, [r3, #0]
 1039 08c4 04108DE2 		add	r1, sp, #4
 1040 08c8 7D2EA0E3 		mov	r2, #2000
 1041 08cc 0530A0E1 		mov	r3, r5
 1042 08d0 FEFFFFEB 		bl	xQueueGenericReceive
 1043              		.loc 1 195 0
 1044 08d4 003094E5 		ldr	r3, [r4, #0]
 1045 08d8 050053E1 		cmp	r3, r5
 1046              		.loc 1 198 0
 1047 08dc FEFFFF1B 		blne	RESET_TWI
 1048              	.L53:
 1049              		.loc 1 201 0
 1050 08e0 0030A0E3 		mov	r3, #0
 1051 08e4 38209FE5 		ldr	r2, .L55+20
 1052 08e8 003082E5 		str	r3, [r2, #0]
 1053              		.loc 1 202 0
 1054 08ec 1C209FE5 		ldr	r2, .L55
 1055 08f0 000092E5 		ldr	r0, [r2, #0]
 1056 08f4 0310A0E1 		mov	r1, r3
 1057 08f8 0320A0E1 		mov	r2, r3
 1058 08fc FEFFFFEB 		bl	xQueueGenericSend
 1059              	.LVL48:
 1060              	.L51:
 1061              	.LBE111:
 1062              		.loc 1 210 0
 1063 0900 04009DE5 		ldr	r0, [sp, #4]
 1064 0904 08D08DE2 		add	sp, sp, #8
 1065 0908 F040BDE8 		ldmfd	sp!, {r4, r5, r6, r7, lr}
 1066 090c 1EFF2FE1 		bx	lr
 1067              	.L56:
 1068              		.align	2
 1069              	.L55:
 1070 0910 00000000 		.word	TWI_Semaphore
 1071 0914 00000000 		.word	TWI_DataPointer
 1072 0918 00000000 		.word	TWI_Bytes2Transfere
 1073 091c 00000000 		.word	TWI_DeviceAddr
 1074 0920 00000000 		.word	TWI_ConitiosTransaction
 1075 0924 00000000 		.word	TWI_TransferStatus
 1076 0928 00000000 		.word	TWI_QUEUE
 1077              	.LFE294:
 1079              		.align	2
 1080              		.global	AT91F_TWI_Write
 1082              	AT91F_TWI_Write:
 1083              	.LFB293:
 1084              		.loc 1 127 0
 1085              		@ Function supports interworking.
 1086              		@ args = 0, pretend = 0, frame = 4
 1087              		@ frame_needed = 0, uses_anonymous_args = 0
 1088              	.LVL49:
 1089 092c F04F2DE9 		stmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1090              	.LCFI10:
 1091 0930 04D04DE2 		sub	sp, sp, #4
 1092              	.LCFI11:
 1093 0934 0090A0E1 		mov	r9, r0
 1094 0938 01B0A0E1 		mov	fp, r1
 1095 093c 0240A0E1 		mov	r4, r2
 1096 0940 03A0A0E1 		mov	sl, r3
 1097              		.loc 1 128 0
 1098 0944 0030A0E3 		mov	r3, #0
 1099              	.LVL50:
 1100 0948 00308DE5 		str	r3, [sp, #0]
 1101              	.LVL51:
 1102              		.loc 1 130 0
 1103 094c F0309FE5 		ldr	r3, .L61
 1104 0950 000093E5 		ldr	r0, [r3, #0]
 1105              	.LVL52:
 1106 0954 000050E3 		cmp	r0, #0
 1107 0958 3500000A 		beq	.L58
 1108              	.LVL53:
 1109              		.loc 1 132 0
 1110 095c 0010A0E3 		mov	r1, #0
 1111 0960 7D2EA0E3 		mov	r2, #2000
 1112 0964 0130A0E1 		mov	r3, r1
 1113 0968 FEFFFFEB 		bl	xQueueGenericReceive
 1114 096c 010050E3 		cmp	r0, #1
 1115 0970 2F00001A 		bne	.L58
 1116              		.loc 1 134 0
 1117 0974 CC709FE5 		ldr	r7, .L61+4
 1118 0978 0220A0E3 		mov	r2, #2
 1119 097c 002087E5 		str	r2, [r7, #0]
 1120              		.loc 1 135 0
 1121 0980 0080A0E3 		mov	r8, #0
 1122 0984 04608DE2 		add	r6, sp, #4
 1123 0988 048026E5 		str	r8, [r6, #-4]!
 1124              	.LVL54:
 1125              		.loc 1 136 0
 1126 098c B8509FE5 		ldr	r5, .L61+8
 1127 0990 004085E5 		str	r4, [r5, #0]
 1128              		.loc 1 137 0
 1129 0994 B4309FE5 		ldr	r3, .L61+12
 1130 0998 00A083E5 		str	sl, [r3, #0]
 1131              		.loc 1 138 0
 1132 099c 0938A0E1 		mov	r3, r9, asl #16
 1133 09a0 AC409FE5 		ldr	r4, .L61+16
 1134              	.LVL55:
 1135 09a4 003084E5 		str	r3, [r4, #0]
 1136              		.loc 1 139 0
 1137 09a8 002087E5 		str	r2, [r7, #0]
 1138              		.loc 1 140 0
 1139 09ac FEFFFFEB 		bl	vPortDisableInterruptsFromThumb
 1140              		.loc 1 141 0
 1141 09b0 003094E5 		ldr	r3, [r4, #0]
 1142 09b4 123CC3E3 		bic	r3, r3, #4608
 1143 09b8 023C83E3 		orr	r3, r3, #512
 1144 09bc 472AE0E3 		mvn	r2, #290816
 1145 09c0 0F2C42E2 		sub	r2, r2, #3840
 1146 09c4 FB3002E5 		str	r3, [r2, #-251]
 1147              		.loc 1 142 0
 1148 09c8 F3B002E5 		str	fp, [r2, #-243]
 1149              		.loc 1 143 0
 1150 09cc 001095E5 		ldr	r1, [r5, #0]
 1151 09d0 0130D1E4 		ldrb	r3, [r1], #1	@ zero_extendqisi2
 1152 09d4 CB3002E5 		str	r3, [r2, #-203]
 1153 09d8 001085E5 		str	r1, [r5, #0]
 1154              	.LBB114:
 1155              	.LBB115:
 1156              		.loc 2 2784 0
 1157 09dc 413FA0E3 		mov	r3, #260
 1158 09e0 DB3002E5 		str	r3, [r2, #-219]
 1159              	.LBE115:
 1160              	.LBE114:
 1161              		.loc 1 145 0
 1162 09e4 0130A0E3 		mov	r3, #1
 1163 09e8 FF3002E5 		str	r3, [r2, #-255]
 1164              		.loc 1 146 0
 1165 09ec FEFFFFEB 		bl	vPortEnableInterruptsFromThumb
 1166              		.loc 1 147 0
 1167 09f0 60309FE5 		ldr	r3, .L61+20
 1168 09f4 000093E5 		ldr	r0, [r3, #0]
 1169 09f8 0D10A0E1 		mov	r1, sp
 1170 09fc 7D2EA0E3 		mov	r2, #2000
 1171 0a00 0830A0E1 		mov	r3, r8
 1172 0a04 FEFFFFEB 		bl	xQueueGenericReceive
 1173              		.loc 1 148 0
 1174 0a08 003097E5 		ldr	r3, [r7, #0]
 1175 0a0c 080053E1 		cmp	r3, r8
 1176              		.loc 1 151 0
 1177 0a10 FEFFFF1B 		blne	RESET_TWI
 1178              	.L59:
 1179              		.loc 1 153 0
 1180 0a14 0030A0E3 		mov	r3, #0
 1181 0a18 28209FE5 		ldr	r2, .L61+4
 1182 0a1c 003082E5 		str	r3, [r2, #0]
 1183              		.loc 1 155 0
 1184 0a20 1C209FE5 		ldr	r2, .L61
 1185 0a24 000092E5 		ldr	r0, [r2, #0]
 1186 0a28 0310A0E1 		mov	r1, r3
 1187 0a2c 0320A0E1 		mov	r2, r3
 1188 0a30 FEFFFFEB 		bl	xQueueGenericSend
 1189              	.LVL56:
 1190              	.L58:
 1191              		.loc 1 163 0
 1192 0a34 00009DE5 		ldr	r0, [sp, #0]
 1193 0a38 04D08DE2 		add	sp, sp, #4
 1194 0a3c F04FBDE8 		ldmfd	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 1195 0a40 1EFF2FE1 		bx	lr
 1196              	.L62:
 1197              		.align	2
 1198              	.L61:
 1199 0a44 00000000 		.word	TWI_Semaphore
 1200 0a48 00000000 		.word	TWI_TransferStatus
 1201 0a4c 00000000 		.word	TWI_DataPointer
 1202 0a50 00000000 		.word	TWI_Bytes2Transfere
 1203 0a54 00000000 		.word	TWI_DeviceAddr
 1204 0a58 00000000 		.word	TWI_QUEUE
 1205              	.LFE293:
 1207              		.global	TWI
 1208              		.data
 1209              		.align	2
 1212              	TWI:
 1213 0000 0080FBFF 		.word	-294912
 1214              		.global	TWI_Semaphore
 1215              		.bss
 1216              		.align	2
 1219              	TWI_Semaphore:
 1220 0000 00000000 		.space	4
 1221              		.global	TWI_ConitiosTransaction
 1222              		.align	2
 1225              	TWI_ConitiosTransaction:
 1226 0004 00000000 		.space	4
 1227              		.comm	TWI_TransferStatus,4,4
 1228              		.comm	TWI_QUEUE,4,4
 1229              		.comm	TWI_NACK_Error,2,2
 1230              		.comm	TWI_TMO_Error,2,2
 1231              		.comm	TWI_SEM_Error,2,2
 1232              		.comm	TWI_WriteData_Error,2,2
 1233              		.comm	TWI_OVRE_Error,2,2
 1234              		.comm	TWI_Bytes2Transfere,4,4
 1235              		.comm	TWI_DeviceAddr,4,4
 1236              		.comm	TWI_DataPointer,4,4
 1441              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 twi.c
     /tmp/ccWL8nQe.s:13     .text:00000000 AT91F_SetTwiClock
     /tmp/ccWL8nQe.s:22     .text:00000000 $a
     /tmp/ccWL8nQe.s:34     .text:00000018 RESET_TWI
     /tmp/ccWL8nQe.s:136    .text:000000ac $d
     /tmp/ccWL8nQe.s:621    .text:000004e4 AT91_TWI_ISR_ENTRY
                            *COM*:00000004 TWI_TransferStatus
     /tmp/ccWL8nQe.s:160    .text:000000b4 AT91F_TWI_Init
     /tmp/ccWL8nQe.s:166    .text:000000b4 $a
     /tmp/ccWL8nQe.s:313    .text:000001d8 $d
                            *COM*:00000004 TWI_QUEUE
                            *COM*:00000002 TWI_NACK_Error
                            *COM*:00000002 TWI_TMO_Error
                            *COM*:00000002 TWI_SEM_Error
                            *COM*:00000002 TWI_WriteData_Error
                            *COM*:00000002 TWI_OVRE_Error
     /tmp/ccWL8nQe.s:1219   .bss:00000000 TWI_Semaphore
     /tmp/ccWL8nQe.s:332    .text:00000210 AT91_TWI_ISR
     /tmp/ccWL8nQe.s:338    .text:00000210 $a
     /tmp/ccWL8nQe.s:609    .text:000004c8 $d
                            *COM*:00000004 TWI_Bytes2Transfere
                            *COM*:00000004 TWI_DataPointer
     /tmp/ccWL8nQe.s:1225   .bss:00000004 TWI_ConitiosTransaction
     /tmp/ccWL8nQe.s:1212   .data:00000000 TWI
                            *COM*:00000004 TWI_DeviceAddr
     /tmp/ccWL8nQe.s:630    .text:000004e4 $a
     /tmp/ccWL8nQe.s:679    .text:0000057c $d
     /tmp/ccWL8nQe.s:686    .text:00000584 AT91F_TWI_ReadByteAddress
     /tmp/ccWL8nQe.s:693    .text:00000584 $a
     /tmp/ccWL8nQe.s:809    .text:000006a8 $d
     /tmp/ccWL8nQe.s:822    .text:000006c8 AT91F_TWI_WriteByteAddress
     /tmp/ccWL8nQe.s:829    .text:000006c8 $a
     /tmp/ccWL8nQe.s:939    .text:000007e0 $d
     /tmp/ccWL8nQe.s:950    .text:000007f8 AT91F_TWI_Read
     /tmp/ccWL8nQe.s:957    .text:000007f8 $a
     /tmp/ccWL8nQe.s:1070   .text:00000910 $d
     /tmp/ccWL8nQe.s:1082   .text:0000092c AT91F_TWI_Write
     /tmp/ccWL8nQe.s:1089   .text:0000092c $a
     /tmp/ccWL8nQe.s:1199   .text:00000a44 $d
     /tmp/ccWL8nQe.s:1213   .data:00000000 $d

UNDEFINED SYMBOLS
xQueueCreate
ErrorCreate
xQueueCreateMutex
xQueueGenericSendFromISR
vTaskSwitchContext
ulCriticalNesting
pxCurrentTCB
xQueueGenericReceive
vPortDisableInterruptsFromThumb
vPortEnableInterruptsFromThumb
xQueueGenericSend
