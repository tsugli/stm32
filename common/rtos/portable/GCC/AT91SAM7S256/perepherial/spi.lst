   1              		.file	"spi.c"
   9              	.Ltext0:
  10              		.align	2
  11              		.global	SPI_Init
  13              	SPI_Init:
  14              	.LFB293:
  15              		.file 1 "rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c"
   1:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //*----------------------------------------------------------------------------
   2:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //*      ATMEL Microcontroller Software Support  -  ROUSSET  -
   3:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //*----------------------------------------------------------------------------
   4:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //* The software is delivered "AS IS" without warranty or condition of any
   5:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //* kind, either express, implied or statutory. This includes without
   6:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //* limitation any warranty or condition with respect to merchantability or
   7:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //* fitness for any particular purpose, or against the infringements of
   8:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //* intellectual property rights of others.
   9:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //*----------------------------------------------------------------------------
  10:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //* File Name           : interrupt_Usart.c
  11:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //* Object              : USART Interrupt Management
  12:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //*
  13:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //* 1.0 03/Jun/03 JPP   : Creation
  14:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //*----------------------------------------------------------------------------
  15:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** 
  16:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** // Include Standard LIB  files
  17:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** #include "FreeRTOS.h"
  18:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** #include "board.h"
  19:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** #include "task.h"
  20:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** #include "queue.h"
  21:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** #include "error.h"
  22:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** #include "spi.h"
  23:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** 
  24:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** AT91PS_SPI SPI = AT91C_BASE_SPI;
  25:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** xQueueHandle SPI_QUEUE;
  26:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** 
  27:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** /* Interrupt entry point written in the assembler file serialISR.s79. */
  28:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** void AT91_SPI_ISR_ENTRY( void )  __attribute__((naked));
  29:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** void AT91_SPI_ISR(void);
  30:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //*------------------------- Internal Function --------------------------------
  31:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //===============================================================================================
  32:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** void AT91_SPI_ISR_ENTRY( void )
  33:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** {
  34:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         portSAVE_CONTEXT();
  35:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         AT91_SPI_ISR();
  36:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         portRESTORE_CONTEXT();
  37:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** }
  38:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** void AT91_SPI_ISR(void)
  39:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** {
  40:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         unsigned int size;
  41:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         unsigned int status;
  42:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         status = SPI->SPI_SR &= SPI->SPI_IMR;
  43:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         portBASE_TYPE xTaskWokenByPost = pdFALSE;
  44:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         size = (unsigned int)SPI->SPI_TCR;
  45:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         xQueueSendFromISR( SPI_QUEUE, &size, &xTaskWokenByPost );
  46:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         AT91C_BASE_SPI->SPI_IDR = AT91C_SPI_TXEMPTY ;
  47:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         if( xTaskWokenByPost)
  48:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         {
  49:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****                 portYIELD_FROM_ISR();
  50:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         }
  51:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         AT91C_BASE_AIC->AIC_EOICR = 0;
  52:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** }
  53:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** 
  54:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** void AT91F_SPI_TRANSACTION_BLOCK (SPI_PCD_DATA *data,int size)
  55:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** {
  56:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****   unsigned int Param = 0;
  57:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****   portENTER_CRITICAL();
  58:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****     {
  59:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         SPI->SPI_TNCR = 0;
  60:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         SPI->SPI_RNCR = 0;
  61:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         SPI->SPI_RCR  = 0;
  62:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         SPI->SPI_TCR  = 0 ;
  63:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         SPI->SPI_RPR  = (unsigned int) data;
  64:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         SPI->SPI_TPR  = (unsigned int) data;
  65:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         SPI->SPI_RCR  = size;
  66:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****         SPI->SPI_TCR  = size;
  67:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****     }
  68:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****   portEXIT_CRITICAL();
  69:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****   AT91F_SPI_EnableIt(AT91C_BASE_SPI,AT91C_SPI_TXEMPTY);
  70:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****   xQueueReceive( SPI_QUEUE, &( Param ), ( portTickType ) 1000 );
  71:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** }
  72:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //===============================================================================================
  73:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** //===============================================================================================
  74:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** void SPI_Init ( void )
  75:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** {
  16              		.loc 1 75 0
  17              		@ Function supports interworking.
  18              		@ args = 0, pretend = 0, frame = 0
  19              		@ frame_needed = 0, uses_anonymous_args = 0
  20 0000 04E02DE5 		str	lr, [sp, #-4]!
  21              	.LCFI0:
  76:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****   SPI_QUEUE = xQueueCreate( 1, sizeof( unsigned int ) );
  22              		.loc 1 76 0
  23 0004 0100A0E3 		mov	r0, #1
  24 0008 0410A0E3 		mov	r1, #4
  25 000c FEFFFFEB 		bl	xQueueCreate
  26 0010 FC309FE5 		ldr	r3, .L5
  27 0014 000083E5 		str	r0, [r3, #0]
  77:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****   while( SPI_QUEUE == 0 ) ;    // Queue was not created and must not be used.
  28              		.loc 1 77 0
  29 0018 000050E3 		cmp	r0, #0
  30 001c 3B00000A 		beq	.L2
  78:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** 
  79:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****   portENTER_CRITICAL();
  31              		.loc 1 79 0
  32 0020 FEFFFFEB 		bl	vPortEnterCritical
  33              	.LBB55:
  34              	.LBB56:
  35              	.LBB57:
  36              	.LBB58:
  37              	.LBB59:
  38              		.file 2 "./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h"
   1:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
   2:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*         ATMEL Microcontroller Software Support  -  ROUSSET  -
   3:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
   4:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* DISCLAIMER:  THIS SOFTWARE IS PROVIDED BY ATMEL "AS IS" AND ANY EXPRESS OR
   5:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
   6:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT ARE
   7:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* DISCLAIMED. IN NO EVENT SHALL ATMEL BE LIABLE FOR ANY DIRECT, INDIRECT,
   8:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
   9:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA,
  10:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  11:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
  12:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  13:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  14:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
  15:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* File Name           : lib_AT91SAM7S256.h
  16:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Object              : AT91SAM7S256 inlined functions
  17:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* Generated           : AT91 SW Application Group  01/16/2006 (16:36:07)
  18:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*
  19:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_MC_SAM7S.h/1.1/Thu Mar 25 15:19:14 2004//
  20:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pdc.h/1.2/Tue Jul  2 13:29:40 2002//
  21:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_dbgu.h/1.1/Thu Aug 25 12:56:22 2005//
  22:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_VREG_6085B.h/1.1/Tue Feb  1 16:20:47 2005//
  23:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_ssc.h/1.4/Fri Jan 31 12:19:20 2003//
  24:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_spi2.h/1.2/Tue Aug 23 15:37:28 2005//
  25:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_PWM_SAM.h/1.3/Thu Jan 22 10:10:50 2004//
  26:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_tc_1753b.h/1.1/Fri Jan 31 12:20:02 2003//
  27:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pitc_6079A.h/1.2/Tue Nov  9 14:43:56 2004//
  28:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pmc_SAM7S.h/1.5/Fri Nov  4 09:37:21 2005//
  29:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_adc.h/1.6/Fri Oct 17 09:12:38 2003//
  30:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_rstc_6098A.h/1.1/Wed Oct  6 10:39:20 2004//
  31:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_rttc_6081A.h/1.1/Wed Oct  6 10:39:38 2004//
  32:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_pio.h/1.3/Fri Jan 31 12:18:56 2003//
  33:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_twi.h/1.3/Mon Jul 19 14:27:58 2004//
  34:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_wdtc_6080A.h/1.1/Wed Oct  6 10:38:30 2004//
  35:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_usart.h/1.5/Thu Nov 21 16:01:54 2002//
  36:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_udp.h/1.5/Tue Aug 30 12:13:47 2005//
  37:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* CVS Reference       : /lib_aic_6075b.h/1.2/Thu Jul  7 07:48:22 2005//
  38:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* ----------------------------------------------------------------------------
  39:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  40:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #ifndef lib_AT91SAM7S256_H
  41:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define lib_AT91SAM7S256_H
  42:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  43:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
  44:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR AIC
  45:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
  46:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_AIC_BRANCH_OPCODE ((void (*) ()) 0xE51FFF20) // ldr, pc, [pc, #-&F20]
  47:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  48:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  49:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_ConfigureIt
  50:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Interrupt Handler Initialization
  51:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  52:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_AIC_ConfigureIt (
  53:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,  // \arg pointer to the AIC registers
  54:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id,     // \arg interrupt number to initialize
  55:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int priority,   // \arg priority to give to the interrupt
  56:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int src_type,   // \arg activation and sense of activation
  57:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*newHandler) () ) // \arg address of the interrupt handler
  58:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
  59:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int oldHandler;
  60:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     unsigned int mask ;
  61:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  62:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     oldHandler = pAic->AIC_SVR[irq_id];
  63:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  64:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     mask = 0x1 << irq_id ;
  65:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable the interrupt on the interrupt controller
  66:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_IDCR = mask ;
  67:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Save the interrupt handler routine pointer and the interrupt priority
  68:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_SVR[irq_id] = (unsigned int) newHandler ;
  69:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Store the Source Mode Register
  70:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_SMR[irq_id] = src_type | priority  ;
  71:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Clear the interrupt on the interrupt controller
  72:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_ICCR = mask ;
  73:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  74:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return oldHandler;
  75:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
  76:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  77:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  78:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_EnableIt
  79:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable corresponding IT number
  80:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  81:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_EnableIt (
  82:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,      // \arg pointer to the AIC registers
  83:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id ) // \arg interrupt number to initialize
  84:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
  85:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Enable the interrupt on the interrupt controller
  86:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_IECR = 0x1 << irq_id ;
  87:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
  88:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
  89:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  90:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_DisableIt
  91:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable corresponding IT number
  92:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
  93:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_DisableIt (
  94:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,      // \arg pointer to the AIC registers
  95:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id ) // \arg interrupt number to initialize
  96:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
  97:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     unsigned int mask = 0x1 << irq_id;
  98:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable the interrupt on the interrupt controller
  99:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_IDCR = mask ;
 100:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Clear the interrupt on the Interrupt Controller ( if one is pending )
 101:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_ICCR = mask ;
 102:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 103:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 104:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 105:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_ClearIt
 106:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Clear corresponding IT number
 107:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 108:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_ClearIt (
 109:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 110:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg interrupt number to initialize
 111:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 112:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Clear the interrupt on the Interrupt Controller ( if one is pending )
 113:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_ICCR = (0x1 << irq_id);
 114:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 115:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 116:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 117:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_AcknowledgeIt
 118:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Acknowledge corresponding IT number
 119:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 120:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_AcknowledgeIt (
 121:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic)     // \arg pointer to the AIC registers
 122:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 123:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pAic->AIC_EOICR = pAic->AIC_EOICR;
 124:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 125:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 126:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 127:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_SetExceptionVector
 128:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure vector handler
 129:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 130:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int  AT91F_AIC_SetExceptionVector (
 131:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int *pVector, // \arg pointer to the AIC registers
 132:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*Handler) () )   // \arg Interrupt Handler
 133:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 134:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int oldVector = *pVector;
 135:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 136:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	if ((unsigned int) Handler == (unsigned int) AT91C_AIC_BRANCH_OPCODE)
 137:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		*pVector = (unsigned int) AT91C_AIC_BRANCH_OPCODE;
 138:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	else
 139:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		*pVector = (((((unsigned int) Handler) - ((unsigned int) pVector) - 0x8) >> 2) & 0x00FFFFFF) | 0x
 140:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 141:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return oldVector;
 142:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 143:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 144:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 145:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_Trig
 146:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Trig an IT
 147:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 148:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void  AT91F_AIC_Trig (
 149:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 150:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg interrupt number
 151:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 152:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pAic->AIC_ISCR = (0x1 << irq_id) ;
 153:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 154:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 155:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 156:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_IsActive
 157:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if an IT is active
 158:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 159:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int  AT91F_AIC_IsActive (
 160:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 161:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg Interrupt Number
 162:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 163:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (pAic->AIC_ISR & (0x1 << irq_id));
 164:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 165:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 166:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 167:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_IsPending
 168:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if an IT is pending
 169:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 170:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int  AT91F_AIC_IsPending (
 171:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,     // \arg pointer to the AIC registers
 172:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int irq_id) // \arg Interrupt Number
 173:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 174:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (pAic->AIC_IPR & (0x1 << irq_id));
 175:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 176:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 177:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 178:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_AIC_Open
 179:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set exception vectors and AIC registers to default values
 180:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 181:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_AIC_Open(
 182:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_AIC pAic,        // \arg pointer to the AIC registers
 183:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*IrqHandler) (),  // \arg Default IRQ vector exception
 184:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*FiqHandler) (),  // \arg Default FIQ vector exception
 185:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*DefaultHandler)  (), // \arg Default Handler set in ISR
 186:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	void (*SpuriousHandler) (), // \arg Default Spurious Handler
 187:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int protectMode)   // \arg Debug Control Register
 188:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 189:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	int i;
 190:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 191:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Disable all interrupts and set IVR to the default handler
 192:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	for (i = 0; i < 32; ++i) {
 193:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_AIC_DisableIt(pAic, i);
 194:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_AIC_ConfigureIt(pAic, i, AT91C_AIC_PRIOR_LOWEST, AT91C_AIC_SRCTYPE_HIGH_LEVEL, DefaultHandl
 195:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 196:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 197:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Set the IRQ exception vector
 198:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_AIC_SetExceptionVector((unsigned int *) 0x18, IrqHandler);
 199:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Set the Fast Interrupt exception vector
 200:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_AIC_SetExceptionVector((unsigned int *) 0x1C, FiqHandler);
 201:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 202:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pAic->AIC_SPU = (unsigned int) SpuriousHandler;
 203:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pAic->AIC_DCR = protectMode;
 204:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 205:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
 206:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PDC
 207:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
 208:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 209:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetNextRx
 210:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the next receive transfer descriptor
 211:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 212:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetNextRx (
 213:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,     // \arg pointer to a PDC controller
 214:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *address,       // \arg address to the next bloc to be received
 215:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int bytes)  // \arg number of bytes to be received
 216:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 217:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_RNPR = (unsigned int) address;
 218:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_RNCR = bytes;
 219:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 220:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 221:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 222:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetNextTx
 223:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the next transmit transfer descriptor
 224:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 225:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetNextTx (
 226:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,       // \arg pointer to a PDC controller
 227:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *address,         // \arg address to the next bloc to be transmitted
 228:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int bytes)    // \arg number of bytes to be transmitted
 229:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 230:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_TNPR = (unsigned int) address;
 231:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_TNCR = bytes;
 232:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 233:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 234:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 235:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetRx
 236:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the receive transfer descriptor
 237:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 238:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetRx (
 239:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,       // \arg pointer to a PDC controller
 240:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *address,         // \arg address to the next bloc to be received
 241:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int bytes)    // \arg number of bytes to be received
 242:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 243:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_RPR = (unsigned int) address;
 244:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_RCR = bytes;
 245:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 246:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 247:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 248:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SetTx
 249:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the transmit transfer descriptor
 250:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 251:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_SetTx (
 252:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,       // \arg pointer to a PDC controller
 253:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *address,         // \arg address to the next bloc to be transmitted
 254:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int bytes)    // \arg number of bytes to be transmitted
 255:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 256:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_TPR = (unsigned int) address;
 257:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_TCR = bytes;
 258:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 259:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 260:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 261:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_EnableTx
 262:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable transmit
 263:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 264:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_EnableTx (
 265:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 266:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 267:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_TXTEN;
 268:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 269:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 270:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 271:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_EnableRx
 272:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable receive
 273:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 274:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_EnableRx (
 275:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 276:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 277:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_RXTEN;
 278:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 279:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 280:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 281:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_DisableTx
 282:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable transmit
 283:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 284:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_DisableTx (
 285:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 286:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 287:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_TXTDIS;
 288:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 289:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 290:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 291:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_DisableRx
 292:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable receive
 293:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 294:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_DisableRx (
 295:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 296:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 297:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPDC->PDC_PTCR = AT91C_PDC_RXTDIS;
 298:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 299:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 300:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 301:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsTxEmpty
 302:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if the current transfer descriptor has been sent
 303:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 304:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsTxEmpty ( // \return return 1 if transfer is complete
 305:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 306:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 307:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_TCR);
 308:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 309:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 310:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 311:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsNextTxEmpty
 312:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if the next transfer descriptor has been moved to the current td
 313:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 314:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsNextTxEmpty ( // \return return 1 if transfer is complete
 315:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 316:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 317:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_TNCR);
 318:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 319:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 320:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 321:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsRxEmpty
 322:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if the current transfer descriptor has been filled
 323:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 324:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsRxEmpty ( // \return return 1 if transfer is complete
 325:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 326:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 327:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_RCR);
 328:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 329:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 330:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 331:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_IsNextRxEmpty
 332:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if the next transfer descriptor has been moved to the current td
 333:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 334:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PDC_IsNextRxEmpty ( // \return return 1 if transfer is complete
 335:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC )       // \arg pointer to a PDC controller
 336:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 337:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return !(pPDC->PDC_RNCR);
 338:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 339:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 340:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 341:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_Open
 342:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Open PDC: disable TX and RX reset transfer descriptors, re-enable RX and TX
 343:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 344:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_Open (
 345:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC)       // \arg pointer to a PDC controller
 346:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 347:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable the RX and TX PDC transfer requests
 348:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableRx(pPDC);
 349:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableTx(pPDC);
 350:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 351:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Reset all Counter register Next buffer first
 352:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextTx(pPDC, (char *) 0, 0);
 353:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextRx(pPDC, (char *) 0, 0);
 354:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetTx(pPDC, (char *) 0, 0);
 355:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetRx(pPDC, (char *) 0, 0);
 356:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 357:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Enable the RX and TX PDC transfer requests
 358:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_EnableRx(pPDC);
 359:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_EnableTx(pPDC);
 360:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 361:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 362:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 363:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_Close
 364:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Close PDC: disable TX and RX reset transfer descriptors
 365:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 366:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PDC_Close (
 367:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC)       // \arg pointer to a PDC controller
 368:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 369:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     //* Disable the RX and TX PDC transfer requests
 370:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableRx(pPDC);
 371:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_DisableTx(pPDC);
 372:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 373:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Reset all Counter register Next buffer first
 374:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextTx(pPDC, (char *) 0, 0);
 375:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetNextRx(pPDC, (char *) 0, 0);
 376:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetTx(pPDC, (char *) 0, 0);
 377:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91F_PDC_SetRx(pPDC, (char *) 0, 0);
 378:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 379:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 380:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 381:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 382:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_SendFrame
 383:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Close PDC: disable TX and RX reset transfer descriptors
 384:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 385:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PDC_SendFrame(
 386:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,
 387:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pBuffer,
 388:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
 389:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
 390:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
 391:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 392:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	if (AT91F_PDC_IsTxEmpty(pPDC)) {
 393:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* Buffer and next buffer can be initialized
 394:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetTx(pPDC, pBuffer, szBuffer);
 395:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextTx(pPDC, pNextBuffer, szNextBuffer);
 396:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 2;
 397:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 398:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	else if (AT91F_PDC_IsNextTxEmpty(pPDC)) {
 399:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* Only one buffer can be initialized
 400:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextTx(pPDC, pBuffer, szBuffer);
 401:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 1;
 402:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 403:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	else {
 404:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* All buffer are in use...
 405:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 0;
 406:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 407:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 408:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 409:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 410:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PDC_ReceiveFrame
 411:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Close PDC: disable TX and RX reset transfer descriptors
 412:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 413:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PDC_ReceiveFrame (
 414:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PDC pPDC,
 415:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pBuffer,
 416:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szBuffer,
 417:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	char *pNextBuffer,
 418:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int szNextBuffer )
 419:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 420:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	if (AT91F_PDC_IsRxEmpty(pPDC)) {
 421:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* Buffer and next buffer can be initialized
 422:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetRx(pPDC, pBuffer, szBuffer);
 423:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextRx(pPDC, pNextBuffer, szNextBuffer);
 424:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 2;
 425:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 426:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	else if (AT91F_PDC_IsNextRxEmpty(pPDC)) {
 427:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* Only one buffer can be initialized
 428:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		AT91F_PDC_SetNextRx(pPDC, pBuffer, szBuffer);
 429:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 1;
 430:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 431:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	else {
 432:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		//* All buffer are in use...
 433:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 0;
 434:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
 435:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 436:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
 437:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR DBGU
 438:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
 439:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 440:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_InterruptEnable
 441:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable DBGU Interrupt
 442:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 443:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_DBGU_InterruptEnable(
 444:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu,   // \arg  pointer to a DBGU controller
 445:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  dbgu interrupt to be enabled
 446:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 447:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pDbgu->DBGU_IER = flag;
 448:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 449:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 450:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 451:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_InterruptDisable
 452:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable DBGU Interrupt
 453:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 454:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_DBGU_InterruptDisable(
 455:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu,   // \arg  pointer to a DBGU controller
 456:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  dbgu interrupt to be disabled
 457:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 458:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pDbgu->DBGU_IDR = flag;
 459:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 460:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 461:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 462:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_GetInterruptMaskStatus
 463:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return DBGU Interrupt Mask Status
 464:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 465:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_DBGU_GetInterruptMaskStatus( // \return DBGU Interrupt Mask Status
 466:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu) // \arg  pointer to a DBGU controller
 467:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 468:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pDbgu->DBGU_IMR;
 469:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 470:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 471:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 472:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_DBGU_IsInterruptMasked
 473:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if DBGU Interrupt is Masked
 474:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 475:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_DBGU_IsInterruptMasked(
 476:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_DBGU pDbgu,   // \arg  pointer to a DBGU controller
 477:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 478:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 479:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_DBGU_GetInterruptMaskStatus(pDbgu) & flag);
 480:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 481:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 482:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
 483:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PIO
 484:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
 485:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 486:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgPeriph
 487:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable pins to be drived by peripheral
 488:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 489:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgPeriph(
 490:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 491:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int periphAEnable,  // \arg PERIPH A to enable
 492:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int periphBEnable)  // \arg PERIPH B to enable
 493:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 494:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 495:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_ASR = periphAEnable;
 496:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_BSR = periphBEnable;
 497:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_PDR = (periphAEnable | periphBEnable); // Set in Periph mode
 498:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 499:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 500:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 501:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgOutput
 502:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PIO in output mode
 503:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 504:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgOutput(
 505:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 506:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int pioEnable)      // \arg PIO to be enabled
 507:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 508:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_PER = pioEnable; // Set in PIO mode
 509:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_OER = pioEnable; // Configure in Output
 510:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 511:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 512:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 513:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgInput
 514:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PIO in input mode
 515:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 516:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgInput(
 517:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 518:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int inputEnable)      // \arg PIO to be enabled
 519:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 520:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Disable output
 521:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_ODR  = inputEnable;
 522:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_PER  = inputEnable;
 523:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 524:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 525:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 526:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgOpendrain
 527:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure PIO in open drain
 528:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 529:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgOpendrain(
 530:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 531:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int multiDrvEnable) // \arg pio to be configured in open drain
 532:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 533:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Configure the multi-drive option
 534:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_MDDR = ~multiDrvEnable;
 535:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_MDER = multiDrvEnable;
 536:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 537:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 538:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 539:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgPullup
 540:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable pullup on PIO
 541:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 542:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgPullup(
 543:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 544:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int pullupEnable)   // \arg enable pullup on PIO
 545:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 546:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		// Connect or not Pullup
 547:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_PPUDR = ~pullupEnable;
 548:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_PPUER = pullupEnable;
 549:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 550:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 551:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 552:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgDirectDrive
 553:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable direct drive on PIO
 554:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 555:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgDirectDrive(
 556:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 557:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int directDrive)    // \arg PIO to be configured with direct drive
 558:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 559:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 560:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Configure the Direct Drive
 561:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_OWDR  = ~directDrive;
 562:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_OWER  = directDrive;
 563:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 564:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 565:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 566:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_CfgInputFilter
 567:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable input filter on input PIO
 568:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 569:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_CfgInputFilter(
 570:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,             // \arg pointer to a PIO controller
 571:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int inputFilter)    // \arg PIO to be configured with input filter
 572:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 573:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 574:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Configure the Direct Drive
 575:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_IFDR  = ~inputFilter;
 576:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_IFER  = inputFilter;
 577:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 578:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 579:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 580:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInput
 581:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO input value
 582:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 583:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInput( // \return PIO input
 584:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 585:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 586:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPio->PIO_PDSR;
 587:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 588:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 589:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 590:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInputSet
 591:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO is input flag is active
 592:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 593:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInputSet(
 594:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 595:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  flag to be tested
 596:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 597:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_PIO_GetInput(pPio) & flag);
 598:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 599:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 600:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 601:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 602:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_SetOutput
 603:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set to 1 output PIO
 604:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 605:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_SetOutput(
 606:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 607:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  output to be set
 608:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 609:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_SODR = flag;
 610:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 611:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 612:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 613:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_ClearOutput
 614:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set to 0 output PIO
 615:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 616:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_ClearOutput(
 617:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 618:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  output to be cleared
 619:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 620:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_CODR = flag;
 621:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 622:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 623:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 624:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_ForceOutput
 625:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Force output when Direct drive option is enabled
 626:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 627:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_ForceOutput(
 628:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 629:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // \arg  output to be forced
 630:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 631:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPio->PIO_ODSR = flag;
 632:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 633:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 634:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 635:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_Enable
 636:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PIO
 637:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 638:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_Enable(
 639:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 640:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be enabled
 641:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 642:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_PER = flag;
 643:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 644:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 645:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 646:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_Disable
 647:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable PIO
 648:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 649:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_Disable(
 650:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 651:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be disabled
 652:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 653:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_PDR = flag;
 654:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 655:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 656:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 657:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetStatus
 658:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Status
 659:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 660:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetStatus( // \return PIO Status
 661:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 662:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 663:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_PSR;
 664:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 665:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 666:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 667:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsSet
 668:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO is Set
 669:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 670:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsSet(
 671:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 672:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 673:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 674:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetStatus(pPio) & flag);
 675:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 676:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 677:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 678:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputEnable
 679:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Output Enable PIO
 680:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 681:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputEnable(
 682:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 683:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output to be enabled
 684:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 685:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_OER = flag;
 686:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 687:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 688:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 689:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputDisable
 690:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Output Enable PIO
 691:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 692:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputDisable(
 693:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 694:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output to be disabled
 695:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 696:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_ODR = flag;
 697:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 698:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 699:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 700:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetOutputStatus
 701:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Output Status
 702:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 703:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetOutputStatus( // \return PIO Output Status
 704:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 705:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 706:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_OSR;
 707:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 708:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 709:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 710:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsOuputSet
 711:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Output is Set
 712:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 713:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsOutputSet(
 714:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 715:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 716:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 717:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetOutputStatus(pPio) & flag);
 718:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 719:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 720:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 721:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InputFilterEnable
 722:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Input Filter Enable PIO
 723:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 724:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InputFilterEnable(
 725:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 726:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio input filter to be enabled
 727:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 728:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_IFER = flag;
 729:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 730:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 731:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 732:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InputFilterDisable
 733:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Input Filter Disable PIO
 734:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 735:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InputFilterDisable(
 736:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 737:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio input filter to be disabled
 738:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 739:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_IFDR = flag;
 740:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 741:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 742:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 743:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInputFilterStatus
 744:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Input Filter Status
 745:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 746:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInputFilterStatus( // \return PIO Input Filter Status
 747:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 748:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 749:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_IFSR;
 750:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 751:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 752:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 753:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInputFilterSet
 754:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Input filter is Set
 755:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 756:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInputFilterSet(
 757:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 758:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 759:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 760:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetInputFilterStatus(pPio) & flag);
 761:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 762:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 763:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 764:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetOutputDataStatus
 765:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Output Data Status
 766:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 767:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetOutputDataStatus( // \return PIO Output Data Status
 768:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 769:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 770:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_ODSR;
 771:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 772:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 773:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 774:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InterruptEnable
 775:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PIO Interrupt
 776:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 777:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InterruptEnable(
 778:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 779:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio interrupt to be enabled
 780:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 781:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_IER = flag;
 782:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 783:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 784:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 785:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_InterruptDisable
 786:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable PIO Interrupt
 787:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 788:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_InterruptDisable(
 789:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 790:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio interrupt to be disabled
 791:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 792:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_IDR = flag;
 793:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 794:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 795:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 796:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInterruptMaskStatus
 797:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Interrupt Mask Status
 798:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 799:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInterruptMaskStatus( // \return PIO Interrupt Mask Status
 800:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 801:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 802:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_IMR;
 803:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 804:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 805:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 806:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetInterruptStatus
 807:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Interrupt Status
 808:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 809:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetInterruptStatus( // \return PIO Interrupt Status
 810:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 811:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 812:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_ISR;
 813:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 814:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 815:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 816:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInterruptMasked
 817:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Interrupt is Masked
 818:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 819:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInterruptMasked(
 820:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 821:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 822:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 823:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetInterruptMaskStatus(pPio) & flag);
 824:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 825:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 826:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 827:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsInterruptSet
 828:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Interrupt is Set
 829:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 830:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsInterruptSet(
 831:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 832:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 833:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 834:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetInterruptStatus(pPio) & flag);
 835:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 836:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 837:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 838:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_MultiDriverEnable
 839:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Multi Driver Enable PIO
 840:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 841:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_MultiDriverEnable(
 842:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 843:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be enabled
 844:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 845:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_MDER = flag;
 846:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 847:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 848:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 849:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_MultiDriverDisable
 850:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Multi Driver Disable PIO
 851:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 852:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_MultiDriverDisable(
 853:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 854:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio to be disabled
 855:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 856:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_MDDR = flag;
 857:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 858:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 859:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 860:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetMultiDriverStatus
 861:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Multi Driver Status
 862:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 863:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetMultiDriverStatus( // \return PIO Multi Driver Status
 864:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 865:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 866:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_MDSR;
 867:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 868:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 869:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 870:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsMultiDriverSet
 871:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO MultiDriver is Set
 872:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 873:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsMultiDriverSet(
 874:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 875:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 876:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 877:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetMultiDriverStatus(pPio) & flag);
 878:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 879:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 880:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 881:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_A_RegisterSelection
 882:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief PIO A Register Selection
 883:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 884:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_A_RegisterSelection(
 885:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 886:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio A register selection
 887:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 888:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_ASR = flag;
 889:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 890:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 891:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 892:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_B_RegisterSelection
 893:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief PIO B Register Selection
 894:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 895:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_B_RegisterSelection(
 896:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 897:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio B register selection
 898:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 899:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_BSR = flag;
 900:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 901:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 902:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 903:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_Get_AB_RegisterStatus
 904:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Interrupt Status
 905:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 906:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_Get_AB_RegisterStatus( // \return PIO AB Register Status
 907:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 908:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 909:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_ABSR;
 910:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 911:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 912:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 913:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsAB_RegisterSet
 914:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO AB Register is Set
 915:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 916:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsAB_RegisterSet(
 917:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 918:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 919:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 920:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_Get_AB_RegisterStatus(pPio) & flag);
 921:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 922:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 923:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 924:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputWriteEnable
 925:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Output Write Enable PIO
 926:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 927:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputWriteEnable(
 928:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 929:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output write to be enabled
 930:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 931:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_OWER = flag;
 932:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 933:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 934:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 935:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_OutputWriteDisable
 936:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Output Write Disable PIO
 937:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 938:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PIO_OutputWriteDisable(
 939:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 940:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  pio output write to be disabled
 941:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 942:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         pPio->PIO_OWDR = flag;
 943:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 944:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 945:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 946:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetOutputWriteStatus
 947:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Output Write Status
 948:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 949:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetOutputWriteStatus( // \return PIO Output Write Status
 950:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 951:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 952:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_OWSR;
 953:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 954:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 955:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 956:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsOutputWriteSet
 957:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO OutputWrite is Set
 958:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 959:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsOutputWriteSet(
 960:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 961:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 962:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 963:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetOutputWriteStatus(pPio) & flag);
 964:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 965:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 966:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 967:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_GetCfgPullup
 968:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PIO Configuration Pullup
 969:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 970:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PIO_GetCfgPullup( // \return PIO Configuration Pullup
 971:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio) // \arg  pointer to a PIO controller
 972:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 973:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return pPio->PIO_PPUSR;
 974:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 975:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 976:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 977:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsOutputDataStatusSet
 978:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Output Data Status is Set
 979:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 980:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsOutputDataStatusSet(
 981:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 982:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 983:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 984:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (AT91F_PIO_GetOutputDataStatus(pPio) & flag);
 985:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 986:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 987:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 988:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PIO_IsCfgPullupStatusSet
 989:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PIO Configuration Pullup Status is Set
 990:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
 991:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline int AT91F_PIO_IsCfgPullupStatusSet(
 992:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PIO pPio,   // \arg  pointer to a PIO controller
 993:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
 994:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
 995:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         return (~AT91F_PIO_GetCfgPullup(pPio) & flag);
 996:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
 997:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
 998:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
 999:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PMC
1000:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1001:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1002:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_CfgSysClkEnableReg
1003:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure the System Clock Enable Register of the PMC controller
1004:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1005:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_CfgSysClkEnableReg (
1006:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1007:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1008:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1009:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the SCER register
1010:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_SCER = mode;
1011:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1012:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1013:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1014:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_CfgSysClkDisableReg
1015:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure the System Clock Disable Register of the PMC controller
1016:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1017:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_CfgSysClkDisableReg (
1018:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1019:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1020:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1021:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the SCDR register
1022:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_SCDR = mode;
1023:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1024:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1025:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1026:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetSysClkStatusReg
1027:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return the System Clock Status Register of the PMC controller
1028:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1029:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetSysClkStatusReg (
1030:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC // pointer to a CAN controller
1031:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
1032:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1033:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPMC->PMC_SCSR;
1034:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1035:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1036:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1037:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_EnablePeriphClock
1038:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable peripheral clock
1039:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1040:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_EnablePeriphClock (
1041:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1042:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int periphIds)  // \arg IDs of peripherals
1043:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1044:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_PCER = periphIds;
  39              		.loc 2 1044 0
  40 0024 2000A0E3 		mov	r0, #32
  41 0028 033CE0E3 		mvn	r3, #768
  42 002c EF0003E5 		str	r0, [r3, #-239]
  43              	.LBE59:
  44              	.LBE58:
  45              	.LBE57:
  46              	.LBE56:
  47              	.LBB60:
  48              	.LBB61:
  49              		.loc 2 495 0
  50 0030 0B2CE0E3 		mvn	r2, #2816
  51 0034 0231A0E3 		mov	r3, #-2147483648
  52 0038 1E3B83E2 		add	r3, r3, #30720
  53 003c 8F3002E5 		str	r3, [r2, #-143]
  54              		.loc 2 496 0
  55 0040 0131A0E3 		mov	r3, #1073741824
  56 0044 8B3002E5 		str	r3, [r2, #-139]
  57              		.loc 2 497 0
  58 0048 023183E2 		add	r3, r3, #-2147483648
  59 004c 1E3B83E2 		add	r3, r3, #30720
  60 0050 FB3002E5 		str	r3, [r2, #-251]
  61              	.LBE61:
  62              	.LBE60:
  63              	.LBB62:
  64              	.LBB63:
1045:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1046:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1047:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1048:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_DisablePeriphClock
1049:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable peripheral clock
1050:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1051:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_DisablePeriphClock (
1052:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1053:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int periphIds)  // \arg IDs of peripherals
1054:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1055:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_PCDR = periphIds;
1056:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1057:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1058:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1059:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetPeriphClock
1060:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Get peripheral clock status
1061:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1062:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetPeriphClock (
1063:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC) // \arg pointer to PMC controller
1064:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1065:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPMC->PMC_PCSR;
1066:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1067:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1068:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1069:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_CfgMainOscillatorReg
1070:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Cfg the main oscillator
1071:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1072:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_CKGR_CfgMainOscillatorReg (
1073:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
1074:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1075:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1076:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_MOR = mode;
1077:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1078:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1079:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1080:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_GetMainOscillatorReg
1081:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Cfg the main oscillator
1082:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1083:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_CKGR_GetMainOscillatorReg (
1084:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
1085:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1086:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pCKGR->CKGR_MOR;
1087:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1088:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1089:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1090:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_EnableMainOscillator
1091:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable the main oscillator
1092:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1093:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_CKGR_EnableMainOscillator(
1094:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
1095:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1096:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_MOR |= AT91C_CKGR_MOSCEN;
1097:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1098:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1099:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1100:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_DisableMainOscillator
1101:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable the main oscillator
1102:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1103:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_CKGR_DisableMainOscillator (
1104:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
1105:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1106:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_MOR &= ~AT91C_CKGR_MOSCEN;
1107:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1108:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1109:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1110:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_CfgMainOscStartUpTime
1111:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Cfg MOR Register according to the main osc startup time
1112:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1113:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_CKGR_CfgMainOscStartUpTime (
1114:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
1115:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int startup_time,  // \arg main osc startup time in microsecond (us)
1116:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int slowClock)  // \arg slowClock in Hz
1117:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1118:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_MOR &= ~AT91C_CKGR_OSCOUNT;
1119:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_MOR |= ((slowClock * startup_time)/(8*1000000)) << 8;
1120:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1121:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1122:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1123:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_GetMainClockFreqReg
1124:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Cfg the main oscillator
1125:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1126:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_CKGR_GetMainClockFreqReg (
1127:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
1128:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1129:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pCKGR->CKGR_MCFR;
1130:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1131:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1132:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1133:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_CKGR_GetMainClock
1134:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return Main clock in Hz
1135:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1136:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_CKGR_GetMainClock (
1137:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
1138:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int slowClock)  // \arg slowClock in Hz
1139:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1140:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return ((pCKGR->CKGR_MCFR  & AT91C_CKGR_MAINF) * slowClock) >> 4;
1141:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1142:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1143:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1144:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_CfgMCKReg
1145:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Cfg Master Clock Register
1146:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1147:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_CfgMCKReg (
1148:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1149:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1150:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1151:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_MCKR = mode;
1152:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1153:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1154:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1155:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetMCKReg
1156:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return Master Clock Register
1157:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1158:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetMCKReg(
1159:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC) // \arg pointer to PMC controller
1160:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1161:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPMC->PMC_MCKR;
1162:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1163:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1164:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*------------------------------------------------------------------------------
1165:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetMasterClock
1166:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return master clock in Hz which correponds to processor clock for ARM7
1167:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*------------------------------------------------------------------------------
1168:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetMasterClock (
1169:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1170:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
1171:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int slowClock)  // \arg slowClock in Hz
1172:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1173:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int reg = pPMC->PMC_MCKR;
1174:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int prescaler = (1 << ((reg & AT91C_PMC_PRES) >> 2));
1175:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int pllDivider, pllMultiplier;
1176:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1177:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	switch (reg & AT91C_PMC_CSS) {
1178:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		case AT91C_PMC_CSS_SLOW_CLK: // Slow clock selected
1179:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			return slowClock / prescaler;
1180:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		case AT91C_PMC_CSS_MAIN_CLK: // Main clock is selected
1181:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			return AT91F_CKGR_GetMainClock(pCKGR, slowClock) / prescaler;
1182:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		case AT91C_PMC_CSS_PLL_CLK: // PLLB clock is selected
1183:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			reg = pCKGR->CKGR_PLLR;
1184:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			pllDivider    = (reg  & AT91C_CKGR_DIV);
1185:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			pllMultiplier = ((reg  & AT91C_CKGR_MUL) >> 16) + 1;
1186:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 			return AT91F_CKGR_GetMainClock(pCKGR, slowClock) / pllDivider * pllMultiplier / prescaler;
1187:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
1188:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return 0;
1189:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1190:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1191:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1192:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_EnablePCK
1193:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable Programmable Clock x Output
1194:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1195:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_EnablePCK (
1196:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1197:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int pck,  // \arg Programmable Clock x Output
1198:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1199:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1200:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_PCKR[pck] = mode;
1201:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_SCER = (1 << pck) << 8;
1202:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1203:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1204:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1205:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_DisablePCK
1206:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable Programmable Clock x Output
1207:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1208:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_DisablePCK (
1209:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // \arg pointer to PMC controller
1210:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int pck)  // \arg Programmable Clock x Output
1211:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1212:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_SCDR = (1 << pck) << 8;
1213:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1214:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1215:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1216:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_EnableIt
1217:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PMC interrupt
1218:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1219:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_EnableIt (
1220:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC,     // pointer to a PMC controller
1221:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // IT to be enabled
1222:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1223:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IER register
1224:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_IER = flag;
1225:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1226:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1227:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1228:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_DisableIt
1229:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable PMC interrupt
1230:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1231:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PMC_DisableIt (
1232:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC, // pointer to a PMC controller
1233:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // IT to be disabled
1234:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1235:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IDR register
1236:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPMC->PMC_IDR = flag;
1237:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1238:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1239:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1240:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetStatus
1241:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PMC Interrupt Status
1242:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1243:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetStatus( // \return PMC Interrupt Status
1244:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC) // pointer to a PMC controller
1245:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1246:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPMC->PMC_SR;
1247:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1248:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1249:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1250:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_GetInterruptMaskStatus
1251:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return PMC Interrupt Mask Status
1252:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1253:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_GetInterruptMaskStatus( // \return PMC Interrupt Mask Status
1254:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_PMC pPMC) // pointer to a PMC controller
1255:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1256:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pPMC->PMC_IMR;
1257:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1258:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1259:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1260:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_IsInterruptMasked
1261:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PMC Interrupt is Masked
1262:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1263:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_IsInterruptMasked(
1264:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PMC pPMC,   // \arg  pointer to a PMC controller
1265:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
1266:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1267:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_PMC_GetInterruptMaskStatus(pPMC) & flag);
1268:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1269:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1270:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1271:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PMC_IsStatusSet
1272:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if PMC Status is Set
1273:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1274:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PMC_IsStatusSet(
1275:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PMC pPMC,   // \arg  pointer to a PMC controller
1276:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
1277:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1278:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_PMC_GetStatus(pPMC) & flag);
1279:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1280:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1281:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** // ----------------------------------------------------------------------------
1282:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //  \fn    AT91F_CKGR_CfgPLLReg
1283:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //  \brief Cfg the PLL Register
1284:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** // ----------------------------------------------------------------------------
1285:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_CKGR_CfgPLLReg (
1286:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR, // \arg pointer to CKGR controller
1287:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)
1288:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1289:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pCKGR->CKGR_PLLR = mode;
1290:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1291:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1292:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** // ----------------------------------------------------------------------------
1293:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //  \fn    AT91F_CKGR_GetPLLReg
1294:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //  \brief Get the PLL Register
1295:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** // ----------------------------------------------------------------------------
1296:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_CKGR_GetPLLReg (
1297:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_CKGR pCKGR) // \arg pointer to CKGR controller
1298:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1299:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pCKGR->CKGR_PLLR;
1300:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1301:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1302:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1303:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1304:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1305:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR RSTC
1306:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1307:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1308:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_RSTSoftReset
1309:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Start Software Reset
1310:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1311:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RSTSoftReset(
1312:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RSTC pRSTC,
1313:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int reset)
1314:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1315:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRSTC->RSTC_RCR = (0xA5000000 | reset);
1316:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1317:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1318:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1319:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_RSTSetMode
1320:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set Reset Mode
1321:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1322:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RSTSetMode(
1323:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RSTC pRSTC,
1324:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int mode)
1325:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1326:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRSTC->RSTC_RMR = (0xA5000000 | mode);
1327:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1328:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1329:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1330:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_RSTGetMode
1331:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Get Reset Mode
1332:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1333:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RSTGetMode(
1334:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RSTC pRSTC)
1335:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1336:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (pRSTC->RSTC_RMR);
1337:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1338:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1339:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1340:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_RSTGetStatus
1341:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Get Reset Status
1342:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1343:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RSTGetStatus(
1344:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RSTC pRSTC)
1345:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1346:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (pRSTC->RSTC_RSR);
1347:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1348:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1349:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1350:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_RSTIsSoftRstActive
1351:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return !=0 if software reset is still not completed
1352:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1353:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RSTIsSoftRstActive(
1354:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RSTC pRSTC)
1355:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1356:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return ((pRSTC->RSTC_RSR) & AT91C_RSTC_SRCMP);
1357:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1358:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1359:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR RTTC
1360:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1361:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1362:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_SetRTT_TimeBase()
1363:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Set the RTT prescaler according to the TimeBase in ms
1364:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1365:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RTTSetTimeBase(
1366:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC,
1367:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int ms)
1368:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1369:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	if (ms > 2000)
1370:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 1;   // AT91C_TIME_OUT_OF_RANGE
1371:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR &= ~0xFFFF;
1372:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR |= (((ms << 15) /1000) & 0xFFFF);
1373:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return 0;
1374:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1375:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1376:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1377:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTTSetPrescaler()
1378:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Set the new prescaler value
1379:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1380:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RTTSetPrescaler(
1381:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC,
1382:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int rtpres)
1383:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1384:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR &= ~0xFFFF;
1385:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR |= (rtpres & 0xFFFF);
1386:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (pRTTC->RTTC_RTMR);
1387:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1388:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1389:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1390:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTTRestart()
1391:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Restart the RTT prescaler
1392:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1393:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTRestart(
1394:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1395:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1396:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR |= AT91C_RTTC_RTTRST;
1397:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1398:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1399:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1400:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1401:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_SetAlarmINT()
1402:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Enable RTT Alarm Interrupt
1403:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1404:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTSetAlarmINT(
1405:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1406:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1407:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR |= AT91C_RTTC_ALMIEN;
1408:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1409:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1410:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1411:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_ClearAlarmINT()
1412:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Disable RTT Alarm Interrupt
1413:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1414:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTClearAlarmINT(
1415:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1416:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1417:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR &= ~AT91C_RTTC_ALMIEN;
1418:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1419:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1420:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1421:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_SetRttIncINT()
1422:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Enable RTT INC Interrupt
1423:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1424:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTSetRttIncINT(
1425:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1426:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1427:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR |= AT91C_RTTC_RTTINCIEN;
1428:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1429:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1430:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1431:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_ClearRttIncINT()
1432:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Disable RTT INC Interrupt
1433:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1434:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTClearRttIncINT(
1435:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1436:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1437:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTMR &= ~AT91C_RTTC_RTTINCIEN;
1438:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1439:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1440:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1441:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_SetAlarmValue()
1442:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Set RTT Alarm Value
1443:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1444:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_RTTSetAlarmValue(
1445:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC, unsigned int alarm)
1446:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1447:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pRTTC->RTTC_RTAR = alarm;
1448:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1449:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1450:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1451:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_GetAlarmValue()
1452:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Get RTT Alarm Value
1453:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1454:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RTTGetAlarmValue(
1455:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1456:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1457:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pRTTC->RTTC_RTAR);
1458:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1459:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1460:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1461:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTTGetStatus()
1462:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Read the RTT status
1463:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1464:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RTTGetStatus(
1465:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1466:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1467:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pRTTC->RTTC_RTSR);
1468:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1469:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1470:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1471:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn     AT91F_RTT_ReadValue()
1472:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief  Read the RTT value
1473:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*--------------------------------------------------------------------------------------
1474:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_RTTReadValue(
1475:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_RTTC pRTTC)
1476:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1477:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         register volatile unsigned int val1,val2;
1478:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	do
1479:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	{
1480:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		val1 = pRTTC->RTTC_RTVR;
1481:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		val2 = pRTTC->RTTC_RTVR;
1482:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	}
1483:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	while(val1 != val2);
1484:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(val1);
1485:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1486:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1487:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR PITC
1488:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1489:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1490:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITInit
1491:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief System timer init : period in �second, system clock freq in MHz
1492:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1493:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PITInit(
1494:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC,
1495:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int period,
1496:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int pit_frequency)
1497:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1498:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPITC->PITC_PIMR = period? (period * pit_frequency + 8) >> 4 : 0; // +8 to avoid %10 and /10
1499:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPITC->PITC_PIMR |= AT91C_PITC_PITEN;
1500:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1501:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1502:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1503:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITSetPIV
1504:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set the PIT Periodic Interval Value
1505:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1506:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PITSetPIV(
1507:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC,
1508:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int piv)
1509:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1510:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPITC->PITC_PIMR = piv | (pPITC->PITC_PIMR & (AT91C_PITC_PITEN | AT91C_PITC_PITIEN));
1511:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1512:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1513:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1514:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITEnableInt
1515:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable PIT periodic interrupt
1516:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1517:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PITEnableInt(
1518:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1519:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1520:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPITC->PITC_PIMR |= AT91C_PITC_PITIEN;
1521:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1522:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1523:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1524:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITDisableInt
1525:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable PIT periodic interrupt
1526:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1527:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_PITDisableInt(
1528:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1529:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1530:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pPITC->PITC_PIMR &= ~AT91C_PITC_PITIEN;
1531:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1532:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1533:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1534:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITGetMode
1535:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Read PIT mode register
1536:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1537:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PITGetMode(
1538:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1539:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1540:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pPITC->PITC_PIMR);
1541:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1542:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1543:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1544:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITGetStatus
1545:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Read PIT status register
1546:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1547:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PITGetStatus(
1548:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1549:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1550:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pPITC->PITC_PISR);
1551:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1552:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1553:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1554:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITGetPIIR
1555:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Read PIT CPIV and PICNT without ressetting the counters
1556:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1557:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PITGetPIIR(
1558:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1559:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1560:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pPITC->PITC_PIIR);
1561:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1562:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1563:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1564:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_PITGetPIVR
1565:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Read System timer CPIV and PICNT without ressetting the counters
1566:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1567:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_PITGetPIVR(
1568:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_PITC pPITC)
1569:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1570:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pPITC->PITC_PIVR);
1571:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1572:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1573:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR WDTC
1574:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1575:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1576:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_WDTSetMode
1577:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Set Watchdog Mode Register
1578:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1579:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_WDTSetMode(
1580:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_WDTC pWDTC,
1581:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int Mode)
1582:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1583:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pWDTC->WDTC_WDMR = Mode;
1584:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1585:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1586:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1587:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_WDTRestart
1588:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Restart Watchdog
1589:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1590:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_WDTRestart(
1591:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_WDTC pWDTC)
1592:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1593:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pWDTC->WDTC_WDCR = 0xA5000001;
1594:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1595:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1596:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1597:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_WDTSGettatus
1598:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Get Watchdog Status
1599:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1600:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_WDTSGettatus(
1601:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_WDTC pWDTC)
1602:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1603:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return(pWDTC->WDTC_WDSR & 0x3);
1604:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1605:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1606:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1607:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_WDTGetPeriod
1608:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Translate ms into Watchdog Compatible value
1609:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1610:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_WDTGetPeriod(unsigned int ms)
1611:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1612:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	if ((ms < 4) || (ms > 16000))
1613:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 		return 0;
1614:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return((ms << 8) / 1000);
1615:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1616:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1617:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR VREG
1618:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1619:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1620:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_VREG_Enable_LowPowerMode
1621:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable VREG Low Power Mode
1622:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1623:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_VREG_Enable_LowPowerMode(
1624:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_VREG pVREG)
1625:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1626:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pVREG->VREG_MR |= AT91C_VREG_PSTDBY;
1627:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1628:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1629:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1630:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_VREG_Disable_LowPowerMode
1631:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable VREG Low Power Mode
1632:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1633:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_VREG_Disable_LowPowerMode(
1634:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_VREG pVREG)
1635:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1636:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pVREG->VREG_MR &= ~AT91C_VREG_PSTDBY;
1637:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }/* *****************************************************************************
1638:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR MC
1639:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1640:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1641:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** #define AT91C_MC_CORRECT_KEY  ((unsigned int) 0x5A << 24) // (MC) Correct Protect Key
1642:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1643:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1644:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_Remap
1645:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Make Remap
1646:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1647:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_MC_Remap (void)     //
1648:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1649:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     AT91PS_MC pMC = (AT91PS_MC) AT91C_BASE_MC;
1650:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1651:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     pMC->MC_RCR = AT91C_MC_RCB;
1652:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1653:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1654:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1655:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_CfgModeReg
1656:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure the EFC Mode Register of the MC controller
1657:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1658:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_MC_EFC_CfgModeReg (
1659:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_MC pMC, // pointer to a MC controller
1660:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int mode)        // mode register
1661:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1662:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	// Write to the FMR register
1663:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pMC->MC_FMR = mode;
1664:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1665:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1666:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1667:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_GetModeReg
1668:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return MC EFC Mode Regsiter
1669:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1670:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_MC_EFC_GetModeReg(
1671:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_MC pMC) // pointer to a MC controller
1672:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1673:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pMC->MC_FMR;
1674:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1675:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1676:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1677:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_ComputeFMCN
1678:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return MC EFC Mode Regsiter
1679:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1680:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_MC_EFC_ComputeFMCN(
1681:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	int master_clock) // master clock in Hz
1682:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1683:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (master_clock/1000000 +2);
1684:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1685:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1686:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1687:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_PerformCmd
1688:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Perform EFC Command
1689:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1690:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_MC_EFC_PerformCmd (
1691:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_MC pMC, // pointer to a MC controller
1692:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****     unsigned int transfer_cmd)
1693:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1694:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pMC->MC_FCR = transfer_cmd;
1695:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1696:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1697:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1698:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_GetStatus
1699:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Return MC EFC Status
1700:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1701:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_MC_EFC_GetStatus(
1702:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_MC pMC) // pointer to a MC controller
1703:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1704:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return pMC->MC_FSR;
1705:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1706:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1707:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1708:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_IsInterruptMasked
1709:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if EFC MC Interrupt is Masked
1710:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1711:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_MC_EFC_IsInterruptMasked(
1712:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_MC pMC,   // \arg  pointer to a MC controller
1713:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
1714:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1715:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_MC_EFC_GetModeReg(pMC) & flag);
1716:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1717:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1718:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1719:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_MC_EFC_IsInterruptSet
1720:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Test if EFC MC Interrupt is Set
1721:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1722:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline unsigned int AT91F_MC_EFC_IsInterruptSet(
1723:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         AT91PS_MC pMC,   // \arg  pointer to a MC controller
1724:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****         unsigned int flag) // \arg  flag to be tested
1725:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1726:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	return (AT91F_MC_EFC_GetStatus(pMC) & flag);
1727:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1728:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1729:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** /* *****************************************************************************
1730:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****                 SOFTWARE API FOR SPI
1731:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****    ***************************************************************************** */
1732:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1733:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_CfgCs
1734:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Configure SPI chip select register
1735:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1736:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_CfgCs (
1737:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI,     // pointer to a SPI controller
1738:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	int cs,     // SPI cs number (0 to 3)
1739:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h ****  	int val)   //  chip select register
1740:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1741:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the CSR register
1742:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	*(pSPI->SPI_CSR + cs) = val;
1743:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1744:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1745:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1746:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_EnableIt
1747:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable SPI interrupt
1748:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1749:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_EnableIt (
1750:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI,     // pointer to a SPI controller
1751:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag)   // IT to be enabled
1752:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1753:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IER register
1754:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_IER = flag;
1755:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1756:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1757:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1758:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_DisableIt
1759:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable SPI interrupt
1760:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1761:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_DisableIt (
1762:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI, // pointer to a SPI controller
1763:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	unsigned int flag) // IT to be disabled
1764:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1765:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the IDR register
1766:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_IDR = flag;
1767:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1768:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1769:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1770:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_Reset
1771:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Reset the SPI controller
1772:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1773:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_Reset (
1774:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI // pointer to a SPI controller
1775:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
1776:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1777:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the CR register
1778:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_CR = AT91C_SPI_SWRST;
1779:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1780:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1781:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1782:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_Enable
1783:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable the SPI controller
1784:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1785:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_Enable (
1786:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI // pointer to a SPI controller
1787:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
1788:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1789:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the CR register
1790:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_CR = AT91C_SPI_SPIEN;
  65              		.loc 2 1790 0
  66 0054 7F2BE0E3 		mvn	r2, #130048
  67 0058 032C42E2 		sub	r2, r2, #768
  68 005c 01C0A0E3 		mov	ip, #1
  69 0060 FFC002E5 		str	ip, [r2, #-255]
  70              	.LBE63:
  71              	.LBE62:
  72              	.LBB64:
  73              	.LBB65:
1791:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1792:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1793:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1794:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_Disable
1795:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Disable the SPI controller
1796:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1797:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_Disable (
1798:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI // pointer to a SPI controller
1799:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	)
1800:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1801:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the CR register
1802:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_CR = AT91C_SPI_SPIDIS;
1803:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** }
1804:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 
1805:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1806:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \fn    AT91F_SPI_CfgMode
1807:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //* \brief Enable the SPI controller
1808:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** //*----------------------------------------------------------------------------
1809:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** __inline void AT91F_SPI_CfgMode (
1810:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	AT91PS_SPI pSPI, // pointer to a SPI controller
1811:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	int mode)        // mode register
1812:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** {
1813:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	//* Write to the MR register
1814:./rtos/portable/GCC/AT91SAM7S256/lib_AT91SAM7S256.h **** 	pSPI->SPI_MR = mode;
  74              		.loc 2 1814 0
  75 0064 0F34A0E3 		mov	r3, #251658240
  76 0068 071083E2 		add	r1, r3, #7
  77 006c FB1002E5 		str	r1, [r2, #-251]
  78              	.LBE65:
  79              	.LBE64:
  80:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****   {
  81:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** 
  82:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****   AT91PS_SPI pSpi = AT91C_BASE_SPI;
  83:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** 
  84:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    AT91F_SPI_CfgPMC();
  85:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    // Configure PIO controllers to periph mode
  86:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    	AT91F_PIO_CfgPeriph(
  87:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    		AT91C_BASE_PIOA, // PIO controller base address
  88:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    		((unsigned int) AT91C_PA11_NPCS0   ) |
  89:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    		((unsigned int) AT91C_PA13_MOSI    ) |
  90:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    		((unsigned int) AT91C_PA31_NPCS1   ) |
  91:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    		((unsigned int) AT91C_PA12_MISO    ) |
  92:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    		((unsigned int) AT91C_PA14_SPCK    )
  93:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    		, // Peripheral A
  94:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    		//((unsigned int) AT91C_PA9_NPCS1   ) |
  95:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    		((unsigned int) AT91C_PA30_NPCS2   )
  96:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    		//((unsigned int) AT91C_PA10_NPCS2   ) |
  97:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    		//((unsigned int) AT91C_PA22_NPCS3   ) |
  98:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    		//((unsigned int) AT91C_PA3_NPCS3   ) |
  99:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    		//((unsigned int) AT91C_PA5_NPCS3)
 100:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    		); // Peripheral B
 101:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** 
 102:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    AT91F_SPI_Enable(pSpi);
 103:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    AT91F_SPI_CfgMode(pSpi,AT91C_SPI_MSTR | AT91C_SPI_PS_VARIABLE | AT91C_SPI_PCSDEC |(AT91C_SPI_DLY
 104:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** 
 105:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** 
 106:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    pSpi->SPI_CSR[0] =
  80              		.loc 1 106 0
  81 0070 F13A83E2 		add	r3, r3, #987136
  82 0074 833083E2 		add	r3, r3, #131
  83 0078 C33002E5 		str	r3, [r2, #-195]
  84 007c C33012E5 		ldr	r3, [r2, #-195]
  85 0080 C73002E5 		str	r3, [r2, #-199]
  86 0084 C73012E5 		ldr	r3, [r2, #-199]
  87 0088 CB3002E5 		str	r3, [r2, #-203]
  88 008c CB3012E5 		ldr	r3, [r2, #-203]
  89 0090 CF3002E5 		str	r3, [r2, #-207]
  90              	.LBB66:
  91              	.LBB67:
  92              		.loc 2 62 0
  93 0094 1F2A82E2 		add	r2, r2, #126976
  94 0098 6B3012E5 		ldr	r3, [r2, #-107]
  95              	.LVL0:
  96              		.loc 2 66 0
  97 009c 250082E5 		str	r0, [r2, #37]
  98              		.loc 2 68 0
  99 00a0 70309FE5 		ldr	r3, .L5+4
 100              	.LVL1:
 101 00a4 6B3002E5 		str	r3, [r2, #-107]
 102              		.loc 2 70 0
 103 00a8 0730A0E3 		mov	r3, #7
 104 00ac EB3002E5 		str	r3, [r2, #-235]
 105              		.loc 2 72 0
 106 00b0 290082E5 		str	r0, [r2, #41]
 107              	.LBE67:
 108              	.LBE66:
 109              	.LBB68:
 110              	.LBB69:
 111              		.loc 2 86 0
 112 00b4 210082E5 		str	r0, [r2, #33]
 113              	.LBE69:
 114              	.LBE68:
 115              	.LBB70:
 116              	.LBB71:
 117              	.LBB72:
 118              	.LBB73:
 119              		.loc 2 297 0
 120 00b8 1E3143E2 		sub	r3, r3, #-2147483641
 121 00bc 4337A0E1 		mov	r3, r3, asr #14
 122 00c0 A33B83E1 		orr	r3, r3, r3, lsr #23
 123 00c4 0220A0E3 		mov	r2, #2
 124 00c8 DF2003E5 		str	r2, [r3, #-223]
 125              	.LBE73:
 126              	.LBE72:
 127              	.LBB74:
 128              	.LBB75:
 129              		.loc 2 287 0
 130 00cc 022CA0E3 		mov	r2, #512
 131 00d0 DF2003E5 		str	r2, [r3, #-223]
 132              	.LBE75:
 133              	.LBE74:
 134              	.LBB76:
 135              	.LBB77:
 136              		.loc 2 230 0
 137 00d4 022C42E2 		sub	r2, r2, #512
 138 00d8 E72003E5 		str	r2, [r3, #-231]
 139              		.loc 2 231 0
 140 00dc E32003E5 		str	r2, [r3, #-227]
 141              	.LBE77:
 142              	.LBE76:
 143              	.LBB78:
 144              	.LBB79:
 145              		.loc 2 217 0
 146 00e0 EF2003E5 		str	r2, [r3, #-239]
 147              		.loc 2 218 0
 148 00e4 EB2003E5 		str	r2, [r3, #-235]
 149              	.LBE79:
 150              	.LBE78:
 151              	.LBB80:
 152              	.LBB81:
 153              		.loc 2 256 0
 154 00e8 F72003E5 		str	r2, [r3, #-247]
 155              		.loc 2 257 0
 156 00ec F32003E5 		str	r2, [r3, #-243]
 157              	.LBE81:
 158              	.LBE80:
 159              	.LBB82:
 160              	.LBB83:
 161              		.loc 2 243 0
 162 00f0 FF2003E5 		str	r2, [r3, #-255]
 163              		.loc 2 244 0
 164 00f4 FB2003E5 		str	r2, [r3, #-251]
 165              	.LBE83:
 166              	.LBE82:
 167              	.LBB84:
 168              	.LBB85:
 169              		.loc 2 277 0
 170 00f8 DFC003E5 		str	ip, [r3, #-223]
 171              	.LBE85:
 172              	.LBE84:
 173              	.LBB86:
 174              	.LBB87:
 175              		.loc 2 267 0
 176 00fc 012C82E2 		add	r2, r2, #256
 177 0100 DF2003E5 		str	r2, [r3, #-223]
 178              	.LBE87:
 179              	.LBE86:
 180              	.LBE71:
 181              	.LBE70:
 182              	.LBE55:
 107:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    pSpi->SPI_CSR[1] =
 108:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    pSpi->SPI_CSR[2] =
 109:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    pSpi->SPI_CSR[3] = AT91C_SPI_NCPHA |
 110:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****                     AT91C_SPI_CPOL |
 111:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****                    (AT91C_SPI_BITS & AT91C_SPI_BITS_16)|
 112:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****                     SPI_BAUD_RATE| SPI_DLYBS |
 113:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****                    (AT91C_SPI_DLYBCT & (15 << 24));
 114:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** 
 115:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    //* Initialize the SPI Interrupt
 116:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    AT91F_AIC_ConfigureIt ( AT91C_BASE_AIC, AT91C_ID_SPI, SPI_INTERRUPT_LEVEL,AT91C_AIC_SRCTYPE_INT_
 117:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    AT91F_AIC_EnableIt (AT91C_BASE_AIC, AT91C_ID_SPI);
 118:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    AT91F_PDC_Open(AT91C_BASE_PDC_SPI);
 119:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** 
 120:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** 
 121:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****    //  data_temp = pSpi->SPI_RDR;
 122:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** 
 123:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****   }
 124:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c ****   portEXIT_CRITICAL();
 183              		.loc 1 124 0
 184 0104 FEFFFFEB 		bl	vPortExitCritical
 125:rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c **** }
 185              		.loc 1 125 0
 186 0108 04E09DE4 		ldr	lr, [sp], #4
 187 010c 1EFF2FE1 		bx	lr
 188              	.L2:
 189              	.L4:
 190 0110 FEFFFFEA 		b	.L4
 191              	.L6:
 192              		.align	2
 193              	.L5:
 194 0114 00000000 		.word	SPI_QUEUE
 195 0118 00000000 		.word	AT91_SPI_ISR_ENTRY
 196              	.LFE293:
 198              		.align	2
 199              		.global	AT91F_SPI_TRANSACTION_BLOCK
 201              	AT91F_SPI_TRANSACTION_BLOCK:
 202              	.LFB292:
 203              		.loc 1 55 0
 204              		@ Function supports interworking.
 205              		@ args = 0, pretend = 0, frame = 4
 206              		@ frame_needed = 0, uses_anonymous_args = 0
 207              	.LVL2:
 208 011c F0402DE9 		stmfd	sp!, {r4, r5, r6, r7, lr}
 209              	.LCFI1:
 210 0120 04D04DE2 		sub	sp, sp, #4
 211              	.LCFI2:
 212 0124 0060A0E1 		mov	r6, r0
 213 0128 0170A0E1 		mov	r7, r1
 214              		.loc 1 56 0
 215 012c 0040A0E3 		mov	r4, #0
 216 0130 04508DE2 		add	r5, sp, #4
 217 0134 044025E5 		str	r4, [r5, #-4]!
 218              	.LVL3:
 219              		.loc 1 57 0
 220 0138 FEFFFFEB 		bl	vPortEnterCritical
 221              	.LVL4:
 222              		.loc 1 59 0
 223 013c 74209FE5 		ldr	r2, .L9
 224 0140 003092E5 		ldr	r3, [r2, #0]
 225 0144 1C4183E5 		str	r4, [r3, #284]
 226              		.loc 1 60 0
 227 0148 003092E5 		ldr	r3, [r2, #0]
 228 014c 144183E5 		str	r4, [r3, #276]
 229              		.loc 1 61 0
 230 0150 003092E5 		ldr	r3, [r2, #0]
 231 0154 044183E5 		str	r4, [r3, #260]
 232              		.loc 1 62 0
 233 0158 003092E5 		ldr	r3, [r2, #0]
 234 015c 0C4183E5 		str	r4, [r3, #268]
 235              		.loc 1 63 0
 236 0160 003092E5 		ldr	r3, [r2, #0]
 237 0164 006183E5 		str	r6, [r3, #256]
 238              		.loc 1 64 0
 239 0168 003092E5 		ldr	r3, [r2, #0]
 240 016c 086183E5 		str	r6, [r3, #264]
 241              		.loc 1 65 0
 242 0170 003092E5 		ldr	r3, [r2, #0]
 243 0174 047183E5 		str	r7, [r3, #260]
 244              		.loc 1 66 0
 245 0178 003092E5 		ldr	r3, [r2, #0]
 246 017c 0C7183E5 		str	r7, [r3, #268]
 247              		.loc 1 68 0
 248 0180 FEFFFFEB 		bl	vPortExitCritical
 249              	.LBB88:
 250              	.LBB89:
 251              		.loc 2 1754 0
 252 0184 7F3BE0E3 		mvn	r3, #130048
 253 0188 033C43E2 		sub	r3, r3, #768
 254 018c 022CA0E3 		mov	r2, #512
 255 0190 EB2003E5 		str	r2, [r3, #-235]
 256              	.LBE89:
 257              	.LBE88:
 258              		.loc 1 70 0
 259 0194 20309FE5 		ldr	r3, .L9+4
 260 0198 000093E5 		ldr	r0, [r3, #0]
 261 019c 0D10A0E1 		mov	r1, sp
 262 01a0 7A2F82E2 		add	r2, r2, #488
 263 01a4 0430A0E1 		mov	r3, r4
 264 01a8 FEFFFFEB 		bl	xQueueGenericReceive
 265              		.loc 1 71 0
 266 01ac 04D08DE2 		add	sp, sp, #4
 267 01b0 F040BDE8 		ldmfd	sp!, {r4, r5, r6, r7, lr}
 268 01b4 1EFF2FE1 		bx	lr
 269              	.L10:
 270              		.align	2
 271              	.L9:
 272 01b8 00000000 		.word	SPI
 273 01bc 00000000 		.word	SPI_QUEUE
 274              	.LFE292:
 276              		.align	2
 277              		.global	AT91_SPI_ISR
 279              	AT91_SPI_ISR:
 280              	.LFB291:
 281              		.loc 1 39 0
 282              		@ Function supports interworking.
 283              		@ args = 0, pretend = 0, frame = 8
 284              		@ frame_needed = 0, uses_anonymous_args = 0
 285 01c0 04E02DE5 		str	lr, [sp, #-4]!
 286              	.LCFI3:
 287 01c4 08D04DE2 		sub	sp, sp, #8
 288              	.LCFI4:
 289              		.loc 1 42 0
 290 01c8 70009FE5 		ldr	r0, .L14
 291 01cc 002090E5 		ldr	r2, [r0, #0]
 292 01d0 101092E5 		ldr	r1, [r2, #16]
 293 01d4 1C3092E5 		ldr	r3, [r2, #28]
 294 01d8 013003E0 		and	r3, r3, r1
 295 01dc 103082E5 		str	r3, [r2, #16]
 296 01e0 103092E5 		ldr	r3, [r2, #16]
 297              	.LVL5:
 298              		.loc 1 43 0
 299 01e4 0030A0E3 		mov	r3, #0
 300              	.LVL6:
 301 01e8 00308DE5 		str	r3, [sp, #0]
 302              	.LVL7:
 303              		.loc 1 44 0
 304 01ec 002090E5 		ldr	r2, [r0, #0]
 305 01f0 0C2192E5 		ldr	r2, [r2, #268]
 306              	.LVL8:
 307 01f4 08108DE2 		add	r1, sp, #8
 308 01f8 042021E5 		str	r2, [r1, #-4]!
 309              		.loc 1 45 0
 310 01fc 40209FE5 		ldr	r2, .L14+4
 311              	.LVL9:
 312 0200 000092E5 		ldr	r0, [r2, #0]
 313 0204 0D20A0E1 		mov	r2, sp
 314 0208 FEFFFFEB 		bl	xQueueGenericSendFromISR
 315              		.loc 1 46 0
 316 020c 7F3BE0E3 		mvn	r3, #130048
 317 0210 033C43E2 		sub	r3, r3, #768
 318 0214 022CA0E3 		mov	r2, #512
 319 0218 E72003E5 		str	r2, [r3, #-231]
 320              		.loc 1 47 0
 321 021c 00309DE5 		ldr	r3, [sp, #0]
 322 0220 000053E3 		cmp	r3, #0
 323              	.LVL10:
 324              		.loc 1 49 0
 325 0224 FEFFFF1B 		blne	vTaskSwitchContext
 326              	.LVL11:
 327              	.L12:
 328              		.loc 1 51 0
 329 0228 0020A0E3 		mov	r2, #0
 330 022c 0F3CE0E3 		mvn	r3, #3840
 331 0230 312083E5 		str	r2, [r3, #49]
 332              		.loc 1 52 0
 333 0234 08D08DE2 		add	sp, sp, #8
 334 0238 04E09DE4 		ldr	lr, [sp], #4
 335 023c 1EFF2FE1 		bx	lr
 336              	.L15:
 337              		.align	2
 338              	.L14:
 339 0240 00000000 		.word	SPI
 340 0244 00000000 		.word	SPI_QUEUE
 341              	.LFE291:
 343              		.align	2
 344              		.global	AT91_SPI_ISR_ENTRY
 346              	AT91_SPI_ISR_ENTRY:
 347              	.LFB290:
 348              		.loc 1 33 0
 349              		@ Function supports interworking.
 350              		@ Naked Function: prologue and epilogue provided by programmer.
 351              		@ args = 0, pretend = 0, frame = 0
 352              		@ frame_needed = 0, uses_anonymous_args = 0
 353              		.loc 1 34 0
 354              	@ 34 "rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c" 1
 355 0248 01002DE9 		STMDB	SP!, {R0}											
 356 024c 00204DE9 		STMDB	SP,{SP}^											
 357 0250 0000A0E1 		NOP														
 358 0254 04D04DE2 		SUB	SP, SP, #4											
 359 0258 0100BDE8 		LDMIA	SP!,{R0}											
 360 025c 004020E9 		STMDB	R0!, {LR}											
 361 0260 00E0A0E1 		MOV	LR, R0												
 362 0264 0100BDE8 		LDMIA	SP!, {R0}											
 363 0268 FF7F4EE9 		STMDB	LR,{R0-LR}^											
 364 026c 0000A0E1 		NOP														
 365 0270 3CE04EE2 		SUB	LR, LR, #60											
 366 0274 00004FE1 		MRS	R0, SPSR											
 367 0278 01002EE9 		STMDB	LR!, {R0}											
 368 027c 64009FE5 		LDR	R0, =ulCriticalNesting								
 369 0280 000090E5 		LDR	R0, [R0]											
 370 0284 01002EE9 		STMDB	LR!, {R0}											
 371 0288 5C009FE5 		LDR	R0, =pxCurrentTCB									
 372 028c 000090E5 		LDR	R0, [R0]											
 373 0290 00E080E5 		STR	LR, [R0]											
 374              		
 375              	@ 0 "" 2
 376 0294 44509FE5 		ldr	r5, .L18
 377 0298 003095E5 		ldr	r3, [r5, #0]
 378 029c 40409FE5 		ldr	r4, .L18+4
 379 02a0 003094E5 		ldr	r3, [r4, #0]
 380              		.loc 1 35 0
 381 02a4 FEFFFFEB 		bl	AT91_SPI_ISR
 382              		.loc 1 36 0
 383              	@ 36 "rtos/portable/GCC/AT91SAM7S256/perepherial/spi.c" 1
 384 02a8 3C009FE5 		LDR		R0, =pxCurrentTCB								
 385 02ac 000090E5 		LDR		R0, [R0]										
 386 02b0 00E090E5 		LDR		LR, [R0]										
 387 02b4 2C009FE5 		LDR		R0, =ulCriticalNesting							
 388 02b8 0200BEE8 		LDMFD	LR!, {R1}											
 389 02bc 001080E5 		STR		R1, [R0]										
 390 02c0 0100BEE8 		LDMFD	LR!, {R0}											
 391 02c4 00F069E1 		MSR		SPSR, R0										
 392 02c8 FF7FDEE8 		LDMFD	LR, {R0-R14}^										
 393 02cc 0000A0E1 		NOP														
 394 02d0 3CE09EE5 		LDR		LR, [LR, #+60]									
 395 02d4 04F05EE2 		SUBS	PC, LR, #4											
 396              		
 397              	@ 0 "" 2
 398 02d8 005095E5 		ldr	r5, [r5, #0]
 399 02dc 004094E5 		ldr	r4, [r4, #0]
 400              		.loc 1 37 0
 401              	.L19:
 402              		.align	2
 403              	.L18:
 404 02e0 00000000 		.word	ulCriticalNesting
 405 02e4 00000000 		.word	pxCurrentTCB
 406              	.LFE290:
 408              		.global	SPI
 409              		.data
 410              		.align	2
 413              	SPI:
 414 0000 0000FEFF 		.word	-131072
 415              		.comm	SPI_QUEUE,4,4
 498              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 spi.c
     /tmp/ccEcwQEu.s:13     .text:00000000 SPI_Init
     /tmp/ccEcwQEu.s:20     .text:00000000 $a
     /tmp/ccEcwQEu.s:194    .text:00000114 $d
                            *COM*:00000004 SPI_QUEUE
     /tmp/ccEcwQEu.s:346    .text:00000248 AT91_SPI_ISR_ENTRY
     /tmp/ccEcwQEu.s:201    .text:0000011c AT91F_SPI_TRANSACTION_BLOCK
     /tmp/ccEcwQEu.s:208    .text:0000011c $a
     /tmp/ccEcwQEu.s:272    .text:000001b8 $d
     /tmp/ccEcwQEu.s:413    .data:00000000 SPI
     /tmp/ccEcwQEu.s:279    .text:000001c0 AT91_SPI_ISR
     /tmp/ccEcwQEu.s:285    .text:000001c0 $a
     /tmp/ccEcwQEu.s:339    .text:00000240 $d
     /tmp/ccEcwQEu.s:355    .text:00000248 $a
     /tmp/ccEcwQEu.s:404    .text:000002e0 $d
     /tmp/ccEcwQEu.s:414    .data:00000000 $d

UNDEFINED SYMBOLS
xQueueCreate
vPortEnterCritical
vPortExitCritical
xQueueGenericReceive
xQueueGenericSendFromISR
vTaskSwitchContext
ulCriticalNesting
pxCurrentTCB
