   1              		.code	16
   2              		.file	"lcp.c"
  10              	.Ltext0:
  11              		.align	2
  12              		.code	16
  13              		.thumb_func
  15              	lcp_cilen:
  16              	.LFB301:
  17              		.file 1 "rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c"
   1:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*****************************************************************************
   2:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * lcp.c - Network Link Control Protocol program file.
   3:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** *
   4:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * Copyright (c) 2003 by Marc Boucher, Services Informatiques (MBSI) inc.
   5:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * portions Copyright (c) 1997 by Global Election Systems Inc.
   6:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** *
   7:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * The authors hereby grant permission to use, copy, modify, distribute,
   8:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * and license this software and its documentation for any purpose, provided
   9:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * that existing copyright notices are retained in all copies and that this
  10:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * notice and the following disclaimer are included verbatim in any 
  11:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * distributions. No written agreement, license, or royalty fee is required
  12:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * for any of the authorized uses.
  13:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** *
  14:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * THIS SOFTWARE IS PROVIDED BY THE CONTRIBUTORS *AS IS* AND ANY EXPRESS OR
  15:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  16:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. 
  17:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * IN NO EVENT SHALL THE CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  18:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  19:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  20:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  21:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  22:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  23:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  24:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** *
  25:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** ******************************************************************************
  26:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * REVISION HISTORY
  27:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** *
  28:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * 03-01-01 Marc Boucher <marc@mbsi.ca>
  29:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** *   Ported to lwIP.
  30:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** * 97-12-01 Guy Lancaster <lancasterg@acm.org>, Global Election Systems Inc.
  31:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** *   Original.
  32:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** *****************************************************************************/
  33:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
  34:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
  35:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp.c - PPP Link Control Protocol.
  36:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  *
  37:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * Copyright (c) 1989 Carnegie Mellon University.
  38:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * All rights reserved.
  39:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  *
  40:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * Redistribution and use in source and binary forms are permitted
  41:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * provided that the above copyright notice and this paragraph are
  42:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * duplicated in all such forms and that any documentation,
  43:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * advertising materials, and other materials related to such
  44:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * distribution and use acknowledge that the software was developed
  45:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * by Carnegie Mellon University.  The name of the
  46:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * University may not be used to endorse or promote products derived
  47:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * from this software without specific prior written permission.
  48:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
  49:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
  50:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  51:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
  52:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  
  53:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
  54:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #include "lwip/opt.h"
  55:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
  56:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if PPP_SUPPORT /* don't build if not configured for use in lwipopts.h */
  57:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
  58:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #include "ppp.h"
  59:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #include "pppdebug.h"
  60:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
  61:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #include "fsm.h"
  62:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #include "chap.h"
  63:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #include "magic.h"
  64:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #include "auth.h"
  65:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #include "lcp.h"
  66:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
  67:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #include <string.h>
  68:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
  69:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if PPPOE_SUPPORT
  70:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #include "netif/ppp_oe.h"
  71:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #else
  72:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define PPPOE_MAXMTU PPP_MAXMRU
  73:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
  74:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
  75:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
  76:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*************************/
  77:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*** LOCAL DEFINITIONS ***/
  78:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*************************/
  79:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
  80:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * Length of each type of configuration option (in octets)
  81:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
  82:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define CILEN_VOID  2
  83:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define CILEN_CHAR  3
  84:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define CILEN_SHORT 4 /* CILEN_VOID + sizeof(short) */
  85:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define CILEN_CHAP  5 /* CILEN_VOID + sizeof(short) + 1 */
  86:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define CILEN_LONG  6 /* CILEN_VOID + sizeof(long) */
  87:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define CILEN_LQR   8 /* CILEN_VOID + sizeof(short) + sizeof(long) */
  88:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define CILEN_CBCP  3
  89:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
  90:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
  91:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /***********************************/
  92:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*** LOCAL FUNCTION DECLARATIONS ***/
  93:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /***********************************/
  94:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
  95:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * Callbacks for fsm code.  (CI = Configuration Information)
  96:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
  97:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void lcp_resetci (fsm*);                   /* Reset our CI */
  98:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static int  lcp_cilen (fsm*);                     /* Return length of our CI */
  99:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void lcp_addci (fsm*, u_char*, int*);      /* Add our CI to pkt */
 100:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static int  lcp_ackci (fsm*, u_char*, int);       /* Peer ack'd our CI */
 101:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static int  lcp_nakci (fsm*, u_char*, int);       /* Peer nak'd our CI */
 102:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static int  lcp_rejci (fsm*, u_char*, int);       /* Peer rej'd our CI */
 103:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static int  lcp_reqci (fsm*, u_char*, int*, int); /* Rcv peer CI */
 104:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void lcp_up (fsm*);                        /* We're UP */
 105:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void lcp_down (fsm*);                      /* We're DOWN */
 106:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void lcp_starting (fsm*);                  /* We need lower layer up */
 107:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void lcp_finished (fsm*);                  /* We need lower layer down */
 108:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static int  lcp_extcode (fsm*, int, u_char, u_char*, int);
 109:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 110:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void lcp_rprotrej (fsm*, u_char*, int);
 111:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 112:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
 113:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * routines to send LCP echos to peer
 114:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
 115:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void lcp_echo_lowerup (int);
 116:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void lcp_echo_lowerdown (int);
 117:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void LcpEchoTimeout (void*);
 118:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void lcp_received_echo_reply (fsm*, int, u_char*, int);
 119:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void LcpSendEchoRequest (fsm*);
 120:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void LcpLinkFailure (fsm*);
 121:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void LcpEchoCheck (fsm*);
 122:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 123:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
 124:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * Protocol entry points.
 125:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * Some of these are called directly.
 126:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
 127:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void lcp_input (int, u_char *, int);
 128:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void lcp_protrej (int);
 129:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 130:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define CODENAME(x) ((x) == CONFACK ? "ACK" : (x) == CONFNAK ? "NAK" : "REJ")
 131:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 132:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 133:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /******************************/
 134:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*** PUBLIC DATA STRUCTURES ***/
 135:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /******************************/
 136:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /* global vars */
 137:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** LinkPhase lcp_phase[NUM_PPP];          /* Phase of link session (RFC 1661) */
 138:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_options lcp_wantoptions[NUM_PPP];  /* Options that we want to request */
 139:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_options lcp_gotoptions[NUM_PPP];   /* Options that peer ack'd */
 140:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_options lcp_allowoptions[NUM_PPP]; /* Options we allow peer to request */
 141:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_options lcp_hisoptions[NUM_PPP];   /* Options that we ack'd */
 142:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** ext_accm xmit_accm[NUM_PPP];           /* extended transmit ACCM */
 143:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 144:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 145:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 146:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*****************************/
 147:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*** LOCAL DATA STRUCTURES ***/
 148:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*****************************/
 149:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static fsm lcp_fsm[NUM_PPP];                            /* LCP fsm structure (global)*/
 150:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static u_int lcp_echo_interval      = LCP_ECHOINTERVAL; /* Interval between LCP echo-requests */
 151:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static u_int lcp_echo_fails         = LCP_MAXECHOFAILS; /* Tolerance to unanswered echo-requests */
 152:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static u32_t lcp_echos_pending      = 0;                /* Number of outstanding echo msgs */
 153:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static u32_t lcp_echo_number        = 0;                /* ID number of next echo frame */
 154:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static u32_t lcp_echo_timer_running = 0;                /* TRUE if a timer is running */
 155:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 156:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static u_char nak_buffer[PPP_MRU]; /* where we construct a nak packet */
 157:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 158:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static fsm_callbacks lcp_callbacks = { /* LCP callback routines */
 159:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_resetci,  /* Reset our Configuration Information */
 160:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_cilen,    /* Length of our Configuration Information */
 161:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_addci,    /* Add our Configuration Information */
 162:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_ackci,    /* ACK our Configuration Information */
 163:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_nakci,    /* NAK our Configuration Information */
 164:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_rejci,    /* Reject our Configuration Information */
 165:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_reqci,    /* Request peer's Configuration Information */
 166:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_up,       /* Called when fsm reaches LS_OPENED state */
 167:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_down,     /* Called when fsm leaves LS_OPENED state */
 168:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_starting, /* Called when we want the lower layer up */
 169:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_finished, /* Called when we want the lower layer down */
 170:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   NULL,         /* Called when Protocol-Reject received */
 171:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   NULL,         /* Retransmission is necessary */
 172:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_extcode,  /* Called to handle LCP-specific codes */
 173:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   "LCP"         /* String name of protocol */
 174:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** };
 175:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 176:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** struct protent lcp_protent = {
 177:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PPP_LCP,
 178:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     lcp_init,
 179:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     lcp_input,
 180:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     lcp_protrej,
 181:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     lcp_lowerup,
 182:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     lcp_lowerdown,
 183:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     lcp_open,
 184:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     lcp_close,
 185:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if 0
 186:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     lcp_printpkt,
 187:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     NULL,
 188:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
 189:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     1,
 190:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     "LCP",
 191:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if 0
 192:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     NULL,
 193:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     NULL,
 194:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     NULL
 195:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
 196:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** };
 197:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 198:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** int lcp_loopbackfail = DEFLOOPBACKFAIL;
 199:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 200:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 201:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 202:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /***********************************/
 203:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*** PUBLIC FUNCTION DEFINITIONS ***/
 204:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /***********************************/
 205:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
 206:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_init - Initialize LCP.
 207:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
 208:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** void
 209:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_init(int unit)
 210:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
 211:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   fsm         *f  = &lcp_fsm[unit];
 212:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *wo = &lcp_wantoptions[unit];
 213:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *ao = &lcp_allowoptions[unit];
 214:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   
 215:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   f->unit      = unit;
 216:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   f->protocol  = PPP_LCP;
 217:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   f->callbacks = &lcp_callbacks;
 218:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   
 219:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   fsm_init(f);
 220:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   
 221:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   wo->passive           = 0;
 222:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   wo->silent            = 0;
 223:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   wo->restart           = 0;               /* Set to 1 in kernels or multi-line implementations */
 224:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   wo->neg_mru           = 1;
 225:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   wo->mru               = PPP_DEFMRU;
 226:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   wo->neg_asyncmap      = 1;
 227:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   wo->asyncmap          = 0x00000000l;     /* Assume don't need to escape any ctl chars. */
 228:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   wo->neg_chap          = 0;               /* Set to 1 on server */
 229:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   wo->neg_upap          = 0;               /* Set to 1 on server */
 230:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   wo->chap_mdtype       = CHAP_DIGEST_MD5;
 231:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   wo->neg_magicnumber   = 1;
 232:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   wo->neg_pcompression  = 1;
 233:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   wo->neg_accompression = 1;
 234:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   wo->neg_lqr           = 0;               /* no LQR implementation yet */
 235:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   wo->neg_cbcp          = 0;
 236:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   
 237:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ao->neg_mru           = 1;
 238:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ao->mru               = PPP_MAXMRU;
 239:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ao->neg_asyncmap      = 1;
 240:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ao->asyncmap          = 0x00000000l;     /* Assume don't need to escape any ctl chars. */
 241:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ao->neg_chap          = (CHAP_SUPPORT != 0);
 242:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ao->chap_mdtype       = CHAP_DIGEST_MD5;
 243:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ao->neg_upap          = (PAP_SUPPORT != 0);
 244:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ao->neg_magicnumber   = 1;
 245:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ao->neg_pcompression  = 1;
 246:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ao->neg_accompression = 1;
 247:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ao->neg_lqr           = 0;               /* no LQR implementation yet */
 248:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ao->neg_cbcp          = (CBCP_SUPPORT != 0);
 249:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 250:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /* 
 251:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Set transmit escape for the flag and escape characters plus anything
 252:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * set for the allowable options.
 253:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 254:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   memset(xmit_accm[unit], 0, sizeof(xmit_accm[0]));
 255:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   xmit_accm[unit][15] = 0x60;
 256:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   xmit_accm[unit][0]  = (u_char)((ao->asyncmap        & 0xFF));
 257:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   xmit_accm[unit][1]  = (u_char)((ao->asyncmap >> 8)  & 0xFF);
 258:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   xmit_accm[unit][2]  = (u_char)((ao->asyncmap >> 16) & 0xFF);
 259:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   xmit_accm[unit][3]  = (u_char)((ao->asyncmap >> 24) & 0xFF);
 260:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   LCPDEBUG((LOG_INFO, "lcp_init: xmit_accm=%X %X %X %X\n",
 261:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         xmit_accm[unit][0],
 262:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         xmit_accm[unit][1],
 263:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         xmit_accm[unit][2],
 264:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         xmit_accm[unit][3]));
 265:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   
 266:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_phase[unit] = PHASE_INITIALIZE;
 267:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
 268:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 269:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 270:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
 271:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_open - LCP is allowed to come up.
 272:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
 273:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** void
 274:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_open(int unit)
 275:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
 276:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   fsm         *f  = &lcp_fsm[unit];
 277:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *wo = &lcp_wantoptions[unit];
 278:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 279:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   f->flags = 0;
 280:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (wo->passive) {
 281:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     f->flags |= OPT_PASSIVE;
 282:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 283:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (wo->silent) {
 284:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     f->flags |= OPT_SILENT;
 285:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 286:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   fsm_open(f);
 287:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 288:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_phase[unit] = PHASE_ESTABLISH;
 289:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
 290:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 291:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 292:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
 293:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_close - Take LCP down.
 294:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
 295:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** void
 296:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_close(int unit, char *reason)
 297:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
 298:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   fsm *f = &lcp_fsm[unit];
 299:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 300:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (lcp_phase[unit] != PHASE_DEAD) {
 301:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     lcp_phase[unit] = PHASE_TERMINATE;
 302:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 303:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (f->state == LS_STOPPED && f->flags & (OPT_PASSIVE|OPT_SILENT)) {
 304:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     /*
 305:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****      * This action is not strictly according to the FSM in RFC1548,
 306:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****      * but it does mean that the program terminates if you do an
 307:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****      * lcp_close() in passive/silent mode when a connection hasn't
 308:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****      * been established.
 309:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****      */
 310:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     f->state = LS_CLOSED;
 311:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     lcp_finished(f);
 312:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   } else {
 313:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     fsm_close(&lcp_fsm[unit], reason);
 314:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 315:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
 316:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 317:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 318:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
 319:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_lowerup - The lower layer is up.
 320:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
 321:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** void
 322:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_lowerup(int unit)
 323:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
 324:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *wo = &lcp_wantoptions[unit];
 325:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 326:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
 327:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Don't use A/C or protocol compression on transmission,
 328:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * but accept A/C and protocol compressed packets
 329:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * if we are going to ask for A/C and protocol compression.
 330:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 331:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ppp_set_xaccm(unit, &xmit_accm[unit]);
 332:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ppp_send_config(unit, PPP_MRU, 0xffffffffl, 0, 0);
 333:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ppp_recv_config(unit, PPP_MRU, 0x00000000l,
 334:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   wo->neg_pcompression, wo->neg_accompression);
 335:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   peer_mru[unit] = PPP_MRU;
 336:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_allowoptions[unit].asyncmap = (u_long)xmit_accm[unit][0]
 337:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                                  | ((u_long)xmit_accm[unit][1] << 8)
 338:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                                  | ((u_long)xmit_accm[unit][2] << 16)
 339:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                                  | ((u_long)xmit_accm[unit][3] << 24);
 340:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   LCPDEBUG((LOG_INFO, "lcp_lowerup: asyncmap=%X %X %X %X\n",
 341:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             xmit_accm[unit][3],
 342:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             xmit_accm[unit][2],
 343:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             xmit_accm[unit][1],
 344:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             xmit_accm[unit][0]));
 345:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 346:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   fsm_lowerup(&lcp_fsm[unit]);
 347:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
 348:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 349:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 350:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
 351:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_lowerdown - The lower layer is down.
 352:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
 353:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** void
 354:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_lowerdown(int unit)
 355:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
 356:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   fsm_lowerdown(&lcp_fsm[unit]);
 357:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
 358:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 359:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
 360:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_sprotrej - Send a Protocol-Reject for some protocol.
 361:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
 362:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** void
 363:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_sprotrej(int unit, u_char *p, int len)
 364:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
 365:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
 366:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Send back the protocol and the information field of the
 367:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * rejected packet.  We only get here if LCP is in the LS_OPENED state.
 368:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 369:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 370:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   fsm_sdata(&lcp_fsm[unit], PROTREJ, ++lcp_fsm[unit].id, p, len);
 371:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
 372:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 373:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 374:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 375:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /**********************************/
 376:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*** LOCAL FUNCTION DEFINITIONS ***/
 377:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /**********************************/
 378:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
 379:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_input - Input LCP packet.
 380:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
 381:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void
 382:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_input(int unit, u_char *p, int len)
 383:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
 384:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   fsm *f = &lcp_fsm[unit];
 385:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 386:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   fsm_input(f, p, len);
 387:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
 388:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 389:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 390:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
 391:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_extcode - Handle a LCP-specific code.
 392:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
 393:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static int
 394:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_extcode(fsm *f, int code, u_char id, u_char *inp, int len)
 395:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
 396:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u_char *magp;
 397:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 398:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   switch( code ){
 399:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     case PROTREJ:
 400:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       lcp_rprotrej(f, inp, len);
 401:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       break;
 402:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   
 403:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     case ECHOREQ:
 404:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       if (f->state != LS_OPENED) {
 405:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
 406:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       }
 407:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       LCPDEBUG((LOG_INFO, "lcp: Echo-Request, Rcvd id %d\n", id));
 408:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       magp = inp;
 409:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       PUTLONG(lcp_gotoptions[f->unit].magicnumber, magp);
 410:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       fsm_sdata(f, ECHOREP, id, inp, len);
 411:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       break;
 412:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 413:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     case ECHOREP:
 414:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       lcp_received_echo_reply(f, id, inp, len);
 415:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       break;
 416:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     
 417:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     case DISCREQ:
 418:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       break;
 419:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     
 420:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     default:
 421:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       return 0;
 422:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 423:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   return 1;
 424:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
 425:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 426:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 427:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
 428:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_rprotrej - Receive an Protocol-Reject.
 429:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  *
 430:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * Figure out which protocol is rejected and inform it.
 431:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
 432:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void
 433:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_rprotrej(fsm *f, u_char *inp, int len)
 434:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
 435:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   int i;
 436:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   struct protent *protp;
 437:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u_short prot;
 438:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 439:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (len < sizeof (u_short)) {
 440:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_INFO, "lcp_rprotrej: Rcvd short Protocol-Reject packet!\n"));
 441:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     return;
 442:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 443:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 444:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   GETSHORT(prot, inp);
 445:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 446:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   LCPDEBUG((LOG_INFO, "lcp_rprotrej: Rcvd Protocol-Reject packet for %x!\n", prot));
 447:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 448:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
 449:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Protocol-Reject packets received in any state other than the LCP
 450:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * LS_OPENED state SHOULD be silently discarded.
 451:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 452:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if( f->state != LS_OPENED ) {
 453:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_INFO, "Protocol-Reject discarded: LCP in state %d\n", f->state));
 454:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     return;
 455:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 456:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 457:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
 458:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Upcall the proper Protocol-Reject routine.
 459:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 460:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   for (i = 0; (protp = ppp_protocols[i]) != NULL; ++i) {
 461:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (protp->protocol == prot && protp->enabled_flag) {
 462:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       (*protp->protrej)(f->unit);
 463:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       return;
 464:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     }
 465:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 466:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 467:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   LCPDEBUG((LOG_WARNING, "Protocol-Reject for unsupported protocol 0x%x\n", prot));
 468:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
 469:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 470:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 471:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
 472:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_protrej - A Protocol-Reject was received.
 473:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
 474:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void
 475:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_protrej(int unit)
 476:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
 477:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   LWIP_UNUSED_ARG(unit);
 478:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
 479:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Can't reject LCP!
 480:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 481:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   LCPDEBUG((LOG_WARNING, "lcp_protrej: Received Protocol-Reject for LCP!\n"));
 482:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   fsm_protreject(&lcp_fsm[unit]);
 483:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
 484:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 485:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 486:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
 487:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_resetci - Reset our CI.
 488:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
 489:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void
 490:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_resetci(fsm *f)
 491:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
 492:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_wantoptions[f->unit].magicnumber = magic();
 493:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_wantoptions[f->unit].numloops = 0;
 494:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_gotoptions[f->unit] = lcp_wantoptions[f->unit];
 495:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   peer_mru[f->unit] = PPP_MRU;
 496:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   auth_reset(f->unit);
 497:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
 498:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 499:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 500:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
 501:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_cilen - Return length of our CI.
 502:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
 503:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static int lcp_cilen(fsm *f)
 504:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
  18              		.loc 1 504 0
  19 0000 F0B5     		push	{r4, r5, r6, r7, lr}
  20              	.LCFI0:
  21              	.LVL0:
 505:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *go = &lcp_gotoptions[f->unit];
  22              		.loc 1 505 0
  23 0002 0268     		ldr	r2, [r0]
  24 0004 5300     		lsl	r3, r2, #1
  25 0006 9B18     		add	r3, r3, r2
  26 0008 DB00     		lsl	r3, r3, #3
  27 000a 264A     		ldr	r2, .L20
  28 000c D118     		add	r1, r2, r3
  29              	.LVL1:
 506:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 507:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define LENCIVOID(neg)  ((neg) ? CILEN_VOID : 0)
 508:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define LENCICHAP(neg)  ((neg) ? CILEN_CHAP : 0)
 509:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define LENCISHORT(neg) ((neg) ? CILEN_SHORT : 0)
 510:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define LENCILONG(neg)  ((neg) ? CILEN_LONG : 0)
 511:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define LENCILQR(neg)   ((neg) ? CILEN_LQR: 0)
 512:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define LENCICBCP(neg)  ((neg) ? CILEN_CBCP: 0)
 513:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
 514:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * NB: we only ask for one of CHAP and UPAP, even if we will
 515:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * accept either.
 516:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 517:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   return (LENCISHORT(go->neg_mru && go->mru != PPP_DEFMRU) +
  30              		.loc 1 517 0
  31 000e 0B78     		ldrb	r3, [r1]
  32 0010 1807     		lsl	r0, r3, #28
  33 0012 06D5     		bpl	.L2
  34              	.LVL2:
  35 0014 9423     		mov	r3, #148
  36 0016 5B00     		lsl	r3, r3, #1
  37 0018 4A88     		ldrh	r2, [r1, #2]
  38 001a 9A42     		cmp	r2, r3
  39 001c 01D0     		beq	.L2
  40 001e 0422     		mov	r2, #4
  41 0020 00E0     		b	.L3
  42              	.L2:
  43 0022 0022     		mov	r2, #0
  44              	.L3:
  45 0024 0B78     		ldrb	r3, [r1]
  46 0026 D806     		lsl	r0, r3, #27
  47 0028 04D5     		bpl	.L4
  48 002a 8B68     		ldr	r3, [r1, #8]
  49 002c 0133     		add	r3, r3, #1
  50 002e 01D0     		beq	.L4
  51 0030 0620     		mov	r0, #6
  52 0032 00E0     		b	.L5
  53              	.L4:
  54 0034 0020     		mov	r0, #0
  55              	.L5:
  56 0036 8018     		add	r0, r0, r2
  57 0038 0B78     		ldrb	r3, [r1]
  58 003a 5A06     		lsl	r2, r3, #25
  59 003c 2CD5     		bpl	.L6
  60 003e 0530     		add	r0, r0, #5
  61              	.L17:
  62 0040 0027     		mov	r7, #0
  63              	.L18:
  64 0042 4B78     		ldrb	r3, [r1, #1]
  65 0044 5A07     		lsl	r2, r3, #29
  66 0046 01D4     		bmi	.L7
  67 0048 0026     		mov	r6, #0
  68 004a 00E0     		b	.L8
  69              	.L7:
  70 004c 0826     		mov	r6, #8
  71              	.L8:
  72 004e 4B78     		ldrb	r3, [r1, #1]
  73 0050 1A07     		lsl	r2, r3, #28
  74 0052 01D4     		bmi	.L9
  75 0054 0025     		mov	r5, #0
  76 0056 00E0     		b	.L10
  77              	.L9:
  78 0058 0325     		mov	r5, #3
  79              	.L10:
  80 005a 0B78     		ldrb	r3, [r1]
  81 005c DB09     		lsr	r3, r3, #7
  82 005e 002B     		cmp	r3, #0
  83 0060 01D1     		bne	.L11
  84 0062 0024     		mov	r4, #0
  85 0064 00E0     		b	.L12
  86              	.L11:
  87 0066 0624     		mov	r4, #6
  88              	.L12:
  89 0068 4B78     		ldrb	r3, [r1, #1]
  90 006a DB07     		lsl	r3, r3, #31
  91 006c DB0F     		lsr	r3, r3, #31
  92 006e 1B06     		lsl	r3, r3, #24
  93 0070 002B     		cmp	r3, #0
  94 0072 01D1     		bne	.L13
  95 0074 0022     		mov	r2, #0
  96 0076 00E0     		b	.L14
  97              	.L13:
  98 0078 0222     		mov	r2, #2
  99              	.L14:
 100 007a 4B78     		ldrb	r3, [r1, #1]
 101 007c 9907     		lsl	r1, r3, #30
 102 007e 01D4     		bmi	.L15
 103              	.LVL3:
 104 0080 0023     		mov	r3, #0
 105 0082 00E0     		b	.L16
 106              	.L15:
 107 0084 0223     		mov	r3, #2
 108              	.L16:
 109 0086 C019     		add	r0, r0, r7
 110 0088 8019     		add	r0, r0, r6
 111 008a 4019     		add	r0, r0, r5
 112 008c 0019     		add	r0, r0, r4
 113 008e 8018     		add	r0, r0, r2
 114 0090 C018     		add	r0, r0, r3
 518:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LENCILONG(go->neg_asyncmap && go->asyncmap != 0xFFFFFFFFl) +
 519:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LENCICHAP(go->neg_chap) +
 520:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LENCISHORT(!go->neg_chap && go->neg_upap) +
 521:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LENCILQR(go->neg_lqr) +
 522:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LENCICBCP(go->neg_cbcp) +
 523:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LENCILONG(go->neg_magicnumber) +
 524:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LENCIVOID(go->neg_pcompression) +
 525:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LENCIVOID(go->neg_accompression));
 526:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
 115              		.loc 1 526 0
 116              		@ sp needed for prologue
 117 0092 F0BC     		pop	{r4, r5, r6, r7}
 118 0094 02BC     		pop	{r1}
 119 0096 0847     		bx	r1
 120              	.LVL4:
 121              	.L6:
 122              		.loc 1 517 0
 123 0098 0B78     		ldrb	r3, [r1]
 124 009a 9A06     		lsl	r2, r3, #26
 125 009c D0D5     		bpl	.L17
 126 009e 0427     		mov	r7, #4
 127 00a0 CFE7     		b	.L18
 128              	.L21:
 129 00a2 C046     		.align	2
 130              	.L20:
 131 00a4 00000000 		.word	lcp_gotoptions
 132              	.LFE301:
 134              		.section	.rodata.str1.4,"aMS",%progbits,1
 135              		.align	2
 136              	.LC2:
 137 0000 6C63705F 		.ascii	"lcp_rejci: short opt %d rejected\012\000"
 137      72656A63 
 137      693A2073 
 137      686F7274 
 137      206F7074 
 138 0022 0000     		.align	2
 139              	.LC4:
 140 0024 6C63705F 		.ascii	"lcp_rejci: long opt %d rejected\012\000"
 140      72656A63 
 140      693A206C 
 140      6F6E6720 
 140      6F707420 
 141 0045 000000   		.align	2
 142              	.LC6:
 143 0048 6C63705F 		.ascii	"lcp_rejci: chap opt %d rejected\012\000"
 143      72656A63 
 143      693A2063 
 143      68617020 
 143      6F707420 
 144 0069 000000   		.align	2
 145              	.LC8:
 146 006c 6C63705F 		.ascii	"lcp_rejci: LQR opt %d rejected\012\000"
 146      72656A63 
 146      693A204C 
 146      5152206F 
 146      70742025 
 147              		.align	2
 148              	.LC10:
 149 008c 6C63705F 		.ascii	"lcp_rejci: Callback opt %d rejected\012\000"
 149      72656A63 
 149      693A2043 
 149      616C6C62 
 149      61636B20 
 150 00b1 000000   		.align	2
 151              	.LC12:
 152 00b4 6C63705F 		.ascii	"lcp_rejci: void opt %d rejected\012\000"
 152      72656A63 
 152      693A2076 
 152      6F696420 
 152      6F707420 
 153 00d5 000000   		.align	2
 154              	.LC14:
 155 00d8 6C63705F 		.ascii	"lcp_rejci: received bad Reject!\012\000"
 155      72656A63 
 155      693A2072 
 155      65636569 
 155      76656420 
 156              		.text
 157              		.align	2
 158              		.code	16
 159              		.thumb_func
 161              	lcp_rejci:
 162              	.LFB305:
 527:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 528:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 529:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
 530:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_addci - Add our desired CIs to a packet.
 531:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
 532:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void
 533:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_addci(fsm *f, u_char *ucp, int *lenp)
 534:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
 535:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *go = &lcp_gotoptions[f->unit];
 536:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u_char *start_ucp = ucp;
 537:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 538:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define ADDCIVOID(opt, neg) \
 539:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (neg) { \
 540:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_INFO, "lcp_addci: opt=%d\n", opt)); \
 541:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTCHAR(opt, ucp); \
 542:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTCHAR(CILEN_VOID, ucp); \
 543:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 544:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define ADDCISHORT(opt, neg, val) \
 545:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (neg) { \
 546:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_INFO, "lcp_addci: INT opt=%d %X\n", opt, val)); \
 547:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTCHAR(opt, ucp); \
 548:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTCHAR(CILEN_SHORT, ucp); \
 549:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTSHORT(val, ucp); \
 550:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 551:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define ADDCICHAP(opt, neg, val, digest) \
 552:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (neg) { \
 553:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_INFO, "lcp_addci: CHAP opt=%d %X\n", opt, val)); \
 554:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTCHAR(opt, ucp); \
 555:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTCHAR(CILEN_CHAP, ucp); \
 556:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTSHORT(val, ucp); \
 557:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTCHAR(digest, ucp); \
 558:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 559:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define ADDCILONG(opt, neg, val) \
 560:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (neg) { \
 561:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_INFO, "lcp_addci: L opt=%d %lX\n", opt, val)); \
 562:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTCHAR(opt, ucp); \
 563:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTCHAR(CILEN_LONG, ucp); \
 564:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTLONG(val, ucp); \
 565:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 566:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define ADDCILQR(opt, neg, val) \
 567:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (neg) { \
 568:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_INFO, "lcp_addci: LQR opt=%d %lX\n", opt, val)); \
 569:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTCHAR(opt, ucp); \
 570:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTCHAR(CILEN_LQR, ucp); \
 571:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTSHORT(PPP_LQR, ucp); \
 572:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTLONG(val, ucp); \
 573:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 574:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define ADDCICHAR(opt, neg, val) \
 575:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (neg) { \
 576:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_INFO, "lcp_addci: CHAR opt=%d %X '%z'\n", opt, val, val)); \
 577:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTCHAR(opt, ucp); \
 578:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTCHAR(CILEN_CHAR, ucp); \
 579:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTCHAR(val, ucp); \
 580:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 581:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 582:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ADDCISHORT(CI_MRU, go->neg_mru && go->mru != PPP_DEFMRU, go->mru);
 583:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ADDCILONG(CI_ASYNCMAP, go->neg_asyncmap && go->asyncmap != 0xFFFFFFFFl, go->asyncmap);
 584:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ADDCICHAP(CI_AUTHTYPE, go->neg_chap, PPP_CHAP, go->chap_mdtype);
 585:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ADDCISHORT(CI_AUTHTYPE, !go->neg_chap && go->neg_upap, PPP_PAP);
 586:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ADDCILQR(CI_QUALITY, go->neg_lqr, go->lqr_period);
 587:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ADDCICHAR(CI_CALLBACK, go->neg_cbcp, CBCP_OPT);
 588:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ADDCILONG(CI_MAGICNUMBER, go->neg_magicnumber, go->magicnumber);
 589:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ADDCIVOID(CI_PCOMPRESSION, go->neg_pcompression);
 590:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ADDCIVOID(CI_ACCOMPRESSION, go->neg_accompression);
 591:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 592:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (ucp - start_ucp != *lenp) {
 593:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     /* this should never happen, because peer_mtu should be 1500 */
 594:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_ERR, "Bug in lcp_addci: wrong length\n"));
 595:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 596:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
 597:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 598:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 599:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
 600:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_ackci - Ack our CIs.
 601:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * This should not modify any state if the Ack is bad.
 602:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  *
 603:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * Returns:
 604:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  *  0 - Ack was bad.
 605:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  *  1 - Ack was good.
 606:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
 607:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static int
 608:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_ackci(fsm *f, u_char *p, int len)
 609:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
 610:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *go = &lcp_gotoptions[f->unit];
 611:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u_char cilen, citype, cichar;
 612:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u_short cishort;
 613:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u32_t cilong;
 614:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 615:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
 616:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * CIs must be in exactly the same order that we sent.
 617:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Check packet length and CI length at each step.
 618:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * If we find any deviations, then this packet is bad.
 619:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 620:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define ACKCIVOID(opt, neg) \
 621:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (neg) { \
 622:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if ((len -= CILEN_VOID) < 0) \
 623:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 624:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(citype, p); \
 625:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(cilen, p); \
 626:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cilen != CILEN_VOID || citype != opt) \
 627:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 628:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 629:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define ACKCISHORT(opt, neg, val) \
 630:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (neg) { \
 631:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if ((len -= CILEN_SHORT) < 0) \
 632:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 633:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(citype, p); \
 634:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(cilen, p); \
 635:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cilen != CILEN_SHORT || citype != opt) \
 636:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 637:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETSHORT(cishort, p); \
 638:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cishort != val) \
 639:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 640:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 641:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define ACKCICHAR(opt, neg, val) \
 642:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (neg) { \
 643:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if ((len -= CILEN_CHAR) < 0) \
 644:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 645:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(citype, p); \
 646:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(cilen, p); \
 647:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cilen != CILEN_CHAR || citype != opt) \
 648:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 649:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(cichar, p); \
 650:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cichar != val) \
 651:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 652:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 653:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define ACKCICHAP(opt, neg, val, digest) \
 654:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (neg) { \
 655:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if ((len -= CILEN_CHAP) < 0) \
 656:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 657:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(citype, p); \
 658:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(cilen, p); \
 659:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cilen != CILEN_CHAP || citype != opt) \
 660:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 661:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETSHORT(cishort, p); \
 662:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cishort != val) \
 663:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 664:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(cichar, p); \
 665:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cichar != digest) \
 666:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 667:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 668:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define ACKCILONG(opt, neg, val) \
 669:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (neg) { \
 670:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if ((len -= CILEN_LONG) < 0) \
 671:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 672:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(citype, p); \
 673:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(cilen, p); \
 674:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cilen != CILEN_LONG ||  citype != opt) \
 675:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 676:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETLONG(cilong, p); \
 677:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cilong != val) \
 678:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 679:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 680:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define ACKCILQR(opt, neg, val) \
 681:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (neg) { \
 682:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if ((len -= CILEN_LQR) < 0) \
 683:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 684:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(citype, p); \
 685:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(cilen, p); \
 686:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cilen != CILEN_LQR || citype != opt) \
 687:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 688:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETSHORT(cishort, p); \
 689:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cishort != PPP_LQR) \
 690:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 691:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETLONG(cilong, p); \
 692:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cilong != val) \
 693:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
 694:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 695:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 696:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ACKCISHORT(CI_MRU, go->neg_mru && go->mru != PPP_DEFMRU, go->mru);
 697:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ACKCILONG(CI_ASYNCMAP, go->neg_asyncmap && go->asyncmap != 0xFFFFFFFFl, go->asyncmap);
 698:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ACKCICHAP(CI_AUTHTYPE, go->neg_chap, PPP_CHAP, go->chap_mdtype);
 699:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ACKCISHORT(CI_AUTHTYPE, !go->neg_chap && go->neg_upap, PPP_PAP);
 700:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ACKCILQR(CI_QUALITY, go->neg_lqr, go->lqr_period);
 701:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ACKCICHAR(CI_CALLBACK, go->neg_cbcp, CBCP_OPT);
 702:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ACKCILONG(CI_MAGICNUMBER, go->neg_magicnumber, go->magicnumber);
 703:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ACKCIVOID(CI_PCOMPRESSION, go->neg_pcompression);
 704:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ACKCIVOID(CI_ACCOMPRESSION, go->neg_accompression);
 705:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 706:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
 707:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * If there are any remaining CIs, then this packet is bad.
 708:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 709:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (len != 0) {
 710:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     goto bad;
 711:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 712:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   LCPDEBUG((LOG_INFO, "lcp_acki: Ack\n"));
 713:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   return (1);
 714:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** bad:
 715:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   LCPDEBUG((LOG_WARNING, "lcp_acki: received bad Ack!\n"));
 716:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   return (0);
 717:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
 718:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 719:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 720:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
 721:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_nakci - Peer has sent a NAK for some of our CIs.
 722:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * This should not modify any state if the Nak is bad
 723:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * or if LCP is in the LS_OPENED state.
 724:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  *
 725:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * Returns:
 726:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  *  0 - Nak was bad.
 727:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  *  1 - Nak was good.
 728:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
 729:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static int
 730:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_nakci(fsm *f, u_char *p, int len)
 731:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
 732:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *go = &lcp_gotoptions[f->unit];
 733:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *wo = &lcp_wantoptions[f->unit];
 734:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u_char citype, cichar, *next;
 735:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u_short cishort;
 736:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u32_t cilong;
 737:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options no;     /* options we've seen Naks for */
 738:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options try;    /* options to request next time */
 739:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   int looped_back = 0;
 740:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   int cilen;
 741:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 742:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   BZERO(&no, sizeof(no));
 743:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   try = *go;
 744:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 745:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
 746:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Any Nak'd CIs must be in exactly the same order that we sent.
 747:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Check packet length and CI length at each step.
 748:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * If we find any deviations, then this packet is bad.
 749:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 750:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define NAKCIVOID(opt, neg, code) \
 751:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (go->neg && \
 752:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       len >= CILEN_VOID && \
 753:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[1] == CILEN_VOID && \
 754:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[0] == opt) { \
 755:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     len -= CILEN_VOID; \
 756:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     INCPTR(CILEN_VOID, p); \
 757:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     no.neg = 1; \
 758:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     code \
 759:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 760:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define NAKCICHAP(opt, neg, code) \
 761:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (go->neg && \
 762:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       len >= CILEN_CHAP && \
 763:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[1] == CILEN_CHAP && \
 764:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[0] == opt) { \
 765:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     len -= CILEN_CHAP; \
 766:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     INCPTR(2, p); \
 767:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETSHORT(cishort, p); \
 768:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(cichar, p); \
 769:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     no.neg = 1; \
 770:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     code \
 771:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 772:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define NAKCICHAR(opt, neg, code) \
 773:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (go->neg && \
 774:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       len >= CILEN_CHAR && \
 775:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[1] == CILEN_CHAR && \
 776:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[0] == opt) { \
 777:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     len -= CILEN_CHAR; \
 778:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     INCPTR(2, p); \
 779:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(cichar, p); \
 780:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     no.neg = 1; \
 781:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     code \
 782:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 783:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define NAKCISHORT(opt, neg, code) \
 784:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (go->neg && \
 785:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       len >= CILEN_SHORT && \
 786:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[1] == CILEN_SHORT && \
 787:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[0] == opt) { \
 788:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     len -= CILEN_SHORT; \
 789:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     INCPTR(2, p); \
 790:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETSHORT(cishort, p); \
 791:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     no.neg = 1; \
 792:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     code \
 793:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 794:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define NAKCILONG(opt, neg, code) \
 795:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (go->neg && \
 796:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       len >= CILEN_LONG && \
 797:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[1] == CILEN_LONG && \
 798:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[0] == opt) { \
 799:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     len -= CILEN_LONG; \
 800:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     INCPTR(2, p); \
 801:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETLONG(cilong, p); \
 802:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     no.neg = 1; \
 803:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     code \
 804:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 805:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define NAKCILQR(opt, neg, code) \
 806:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (go->neg && \
 807:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       len >= CILEN_LQR && \
 808:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[1] == CILEN_LQR && \
 809:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[0] == opt) { \
 810:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     len -= CILEN_LQR; \
 811:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     INCPTR(2, p); \
 812:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETSHORT(cishort, p); \
 813:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETLONG(cilong, p); \
 814:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     no.neg = 1; \
 815:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     code \
 816:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 817:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 818:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
 819:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * We don't care if they want to send us smaller packets than
 820:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * we want.  Therefore, accept any MRU less than what we asked for,
 821:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * but then ignore the new value when setting the MRU in the kernel.
 822:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * If they send us a bigger MRU than what we asked, accept it, up to
 823:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * the limit of the default MRU we'd get if we didn't negotiate.
 824:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 825:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (go->neg_mru && go->mru != PPP_DEFMRU) {
 826:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     NAKCISHORT(CI_MRU, neg_mru,
 827:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       if (cishort <= wo->mru || cishort < PPP_DEFMRU) {
 828:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         try.mru = cishort;
 829:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       }
 830:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     );
 831:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 832:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 833:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
 834:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Add any characters they want to our (receive-side) asyncmap.
 835:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 836:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (go->neg_asyncmap && go->asyncmap != 0xFFFFFFFFl) {
 837:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     NAKCILONG(CI_ASYNCMAP, neg_asyncmap,
 838:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       try.asyncmap = go->asyncmap | cilong;
 839:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     );
 840:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 841:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 842:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
 843:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * If they've nak'd our authentication-protocol, check whether
 844:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * they are proposing a different protocol, or a different
 845:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * hash algorithm for CHAP.
 846:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 847:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if ((go->neg_chap || go->neg_upap)
 848:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       && len >= CILEN_SHORT
 849:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       && p[0] == CI_AUTHTYPE && p[1] >= CILEN_SHORT && p[1] <= len) {
 850:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     cilen = p[1];
 851:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     len -= cilen;
 852:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     no.neg_chap = go->neg_chap;
 853:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     no.neg_upap = go->neg_upap;
 854:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     INCPTR(2, p);
 855:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETSHORT(cishort, p);
 856:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cishort == PPP_PAP && cilen == CILEN_SHORT) {
 857:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       /*
 858:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****        * If we were asking for CHAP, they obviously don't want to do it.
 859:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****        * If we weren't asking for CHAP, then we were asking for PAP,
 860:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****        * in which case this Nak is bad.
 861:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****        */
 862:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       if (!go->neg_chap) {
 863:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         goto bad;
 864:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       }
 865:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       try.neg_chap = 0;
 866:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     
 867:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     } else if (cishort == PPP_CHAP && cilen == CILEN_CHAP) {
 868:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       GETCHAR(cichar, p);
 869:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       if (go->neg_chap) {
 870:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         /*
 871:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * We were asking for CHAP/MD5; they must want a different
 872:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * algorithm.  If they can't do MD5, we'll have to stop
 873:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * asking for CHAP.
 874:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          */
 875:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (cichar != go->chap_mdtype) {
 876:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           try.neg_chap = 0;
 877:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
 878:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       } else {
 879:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         /*
 880:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * Stop asking for PAP if we were asking for it.
 881:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          */
 882:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         try.neg_upap = 0;
 883:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       }
 884:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     
 885:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     } else {
 886:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       /*
 887:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****        * We don't recognize what they're suggesting.
 888:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****        * Stop asking for what we were asking for.
 889:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****        */
 890:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       if (go->neg_chap) {
 891:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         try.neg_chap = 0;
 892:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       } else {
 893:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         try.neg_upap = 0;
 894:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       }
 895:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p += cilen - CILEN_SHORT;
 896:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     }
 897:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
 898:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 899:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
 900:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * If they can't cope with our link quality protocol, we'll have
 901:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * to stop asking for LQR.  We haven't got any other protocol.
 902:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * If they Nak the reporting period, take their value XXX ?
 903:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 904:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   NAKCILQR(CI_QUALITY, neg_lqr,
 905:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cishort != PPP_LQR) {
 906:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       try.neg_lqr = 0;
 907:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     } else {
 908:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       try.lqr_period = cilong;
 909:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     }
 910:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   );
 911:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 912:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
 913:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Only implementing CBCP...not the rest of the callback options
 914:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 915:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   NAKCICHAR(CI_CALLBACK, neg_cbcp,
 916:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     try.neg_cbcp = 0;
 917:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   );
 918:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 919:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
 920:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Check for a looped-back line.
 921:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 922:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   NAKCILONG(CI_MAGICNUMBER, neg_magicnumber,
 923:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     try.magicnumber = magic();
 924:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     looped_back = 1;
 925:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   );
 926:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 927:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
 928:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Peer shouldn't send Nak for protocol compression or
 929:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * address/control compression requests; they should send
 930:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * a Reject instead.  If they send a Nak, treat it as a Reject.
 931:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 932:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   NAKCIVOID(CI_PCOMPRESSION, neg_pcompression,
 933:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     try.neg_pcompression = 0;
 934:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   );
 935:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   NAKCIVOID(CI_ACCOMPRESSION, neg_accompression,
 936:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     try.neg_accompression = 0;
 937:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   );
 938:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 939:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
 940:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * There may be remaining CIs, if the peer is requesting negotiation
 941:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * on an option that we didn't include in our request packet.
 942:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * If we see an option that we requested, or one we've already seen
 943:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * in this packet, then this packet is bad.
 944:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * If we wanted to respond by starting to negotiate on the requested
 945:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * option(s), we could, but we don't, because except for the
 946:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * authentication type and quality protocol, if we are not negotiating
 947:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * an option, it is because we were told not to.
 948:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * For the authentication type, the Nak from the peer means
 949:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * `let me authenticate myself with you' which is a bit pointless.
 950:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * For the quality protocol, the Nak means `ask me to send you quality
 951:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * reports', but if we didn't ask for them, we don't want them.
 952:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * An option we don't recognize represents the peer asking to
 953:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * negotiate some option we don't support, so ignore it.
 954:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
 955:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   while (len > CILEN_VOID) {
 956:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(citype, p);
 957:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(cilen, p);
 958:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cilen < CILEN_VOID || (len -= cilen) < 0) {
 959:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad;
 960:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     }
 961:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     next = p + cilen - 2;
 962:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
 963:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     switch (citype) {
 964:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       case CI_MRU:
 965:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if ((go->neg_mru && go->mru != PPP_DEFMRU)
 966:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             || no.neg_mru || cilen != CILEN_SHORT) {
 967:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           goto bad;
 968:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
 969:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         GETSHORT(cishort, p);
 970:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (cishort < PPP_DEFMRU) {
 971:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           try.mru = cishort;
 972:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
 973:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
 974:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       case CI_ASYNCMAP:
 975:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if ((go->neg_asyncmap && go->asyncmap != 0xFFFFFFFFl)
 976:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             || no.neg_asyncmap || cilen != CILEN_LONG) {
 977:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           goto bad;
 978:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
 979:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
 980:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       case CI_AUTHTYPE:
 981:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (go->neg_chap || no.neg_chap || go->neg_upap || no.neg_upap) {
 982:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           goto bad;
 983:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
 984:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
 985:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       case CI_MAGICNUMBER:
 986:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (go->neg_magicnumber || no.neg_magicnumber ||
 987:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             cilen != CILEN_LONG) {
 988:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           goto bad;
 989:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
 990:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
 991:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       case CI_PCOMPRESSION:
 992:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (go->neg_pcompression || no.neg_pcompression
 993:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             || cilen != CILEN_VOID) {
 994:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           goto bad;
 995:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
 996:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
 997:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       case CI_ACCOMPRESSION:
 998:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (go->neg_accompression || no.neg_accompression
 999:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             || cilen != CILEN_VOID) {
1000:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           goto bad;
1001:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1002:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
1003:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       case CI_QUALITY:
1004:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (go->neg_lqr || no.neg_lqr || cilen != CILEN_LQR) {
1005:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           goto bad;
1006:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1007:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
1008:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     }
1009:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     p = next;
1010:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1011:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1012:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /* If there is still anything left, this packet is bad. */
1013:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (len != 0) {
1014:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     goto bad;
1015:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1016:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1017:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
1018:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   * OK, the Nak is good.  Now we can update state.
1019:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   */
1020:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (f->state != LS_OPENED) {
1021:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (looped_back) {
1022:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       if (++try.numloops >= lcp_loopbackfail) {
1023:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         LCPDEBUG((LOG_NOTICE, "Serial line is looped back.\n"));
1024:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         lcp_close(f->unit, "Loopback detected");
1025:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       }
1026:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     } else {
1027:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       try.numloops = 0;
1028:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     }
1029:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     *go = try;
1030:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1031:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1032:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   return 1;
1033:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1034:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** bad:
1035:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   LCPDEBUG((LOG_WARNING, "lcp_nakci: received bad Nak!\n"));
1036:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   return 0;
1037:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
1038:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1039:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1040:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
1041:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_rejci - Peer has Rejected some of our CIs.
1042:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * This should not modify any state if the Reject is bad
1043:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * or if LCP is in the LS_OPENED state.
1044:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  *
1045:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * Returns:
1046:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  *  0 - Reject was bad.
1047:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  *  1 - Reject was good.
1048:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
1049:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static int
1050:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_rejci(fsm *f, u_char *p, int len)
1051:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
 163              		.loc 1 1051 0
 164 00a8 F0B5     		push	{r4, r5, r6, r7, lr}
 165              	.LCFI1:
 166 00aa 5F46     		mov	r7, fp
 167 00ac 5646     		mov	r6, sl
 168 00ae 4D46     		mov	r5, r9
 169 00b0 4446     		mov	r4, r8
 170 00b2 F0B4     		push	{r4, r5, r6, r7}
 171              	.LCFI2:
 172              	.LVL5:
 173 00b4 90B0     		sub	sp, sp, #64
 174              	.LCFI3:
 175 00b6 0190     		str	r0, [sp, #4]
 176 00b8 0C1C     		mov	r4, r1
 177 00ba 0092     		str	r2, [sp]
1052:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *go = &lcp_gotoptions[f->unit];
 178              		.loc 1 1052 0
 179 00bc 0268     		ldr	r2, [r0]
 180              	.LVL6:
 181 00be 5300     		lsl	r3, r2, #1
 182 00c0 9B18     		add	r3, r3, r2
 183 00c2 DB00     		lsl	r3, r3, #3
 184 00c4 B94A     		ldr	r2, .L44
 185 00c6 D518     		add	r5, r2, r3
 186              	.LVL7:
1053:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u_char cichar;
1054:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u_short cishort;
1055:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u32_t cilong;
1056:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options try; /* options to request next time */
1057:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1058:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   try = *go;
 187              		.loc 1 1058 0
 188 00c8 0AA9     		add	r1, sp, #40
 189              	.LVL8:
 190 00ca 0B1C     		mov	r3, r1
 191 00cc 2A1C     		mov	r2, r5
 192 00ce C1CA     		ldmia	r2!, {r0, r6, r7}
 193 00d0 C1C3     		stmia	r3!, {r0, r6, r7}
 194              	.LVL9:
 195 00d2 C1CA     		ldmia	r2!, {r0, r6, r7}
 196 00d4 C1C3     		stmia	r3!, {r0, r6, r7}
 197 00d6 0A78     		ldrb	r2, [r1]
 198              	.LVL10:
 199 00d8 1307     		lsl	r3, r2, #28
 200 00da D80F     		lsr	r0, r3, #31
 201 00dc D306     		lsl	r3, r2, #27
 202 00de DF0F     		lsr	r7, r3, #31
 203 00e0 5306     		lsl	r3, r2, #25
 204 00e2 DB0F     		lsr	r3, r3, #31
 205 00e4 9A46     		mov	sl, r3
 206 00e6 9306     		lsl	r3, r2, #26
 207 00e8 DB0F     		lsr	r3, r3, #31
 208 00ea 9846     		mov	r8, r3
 209 00ec 4978     		ldrb	r1, [r1, #1]
 210 00ee 4B07     		lsl	r3, r1, #29
 211 00f0 DB0F     		lsr	r3, r3, #31
 212 00f2 9946     		mov	r9, r3
 213 00f4 0B07     		lsl	r3, r1, #28
 214 00f6 DB0F     		lsr	r3, r3, #31
 215 00f8 0693     		str	r3, [sp, #24]
 216 00fa 1206     		lsl	r2, r2, #24
 217 00fc D20F     		lsr	r2, r2, #31
 218 00fe 0792     		str	r2, [sp, #28]
 219 0100 CB07     		lsl	r3, r1, #31
 220 0102 DB0F     		lsr	r3, r3, #31
 221 0104 1B06     		lsl	r3, r3, #24
 222 0106 1B0E     		lsr	r3, r3, #24
 223 0108 0893     		str	r3, [sp, #32]
 224 010a 8907     		lsl	r1, r1, #30
 225 010c C90F     		lsr	r1, r1, #31
 226 010e 0991     		str	r1, [sp, #36]
1059:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1060:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
1061:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Any Rejected CIs must be in exactly the same order that we sent.
1062:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Check packet length and CI length at each step.
1063:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * If we find any deviations, then this packet is bad.
1064:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
1065:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define REJCIVOID(opt, neg) \
1066:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (go->neg && \
1067:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       len >= CILEN_VOID && \
1068:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[1] == CILEN_VOID && \
1069:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[0] == opt) { \
1070:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     len -= CILEN_VOID; \
1071:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     INCPTR(CILEN_VOID, p); \
1072:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     try.neg = 0; \
1073:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_INFO, "lcp_rejci: void opt %d rejected\n", opt)); \
1074:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1075:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define REJCISHORT(opt, neg, val) \
1076:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (go->neg && \
1077:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       len >= CILEN_SHORT && \
1078:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[1] == CILEN_SHORT && \
1079:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[0] == opt) { \
1080:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     len -= CILEN_SHORT; \
1081:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     INCPTR(2, p); \
1082:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETSHORT(cishort, p); \
1083:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     /* Check rejected value. */ \
1084:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cishort != val) { \
1085:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
1086:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     } \
1087:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     try.neg = 0; \
1088:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_INFO,"lcp_rejci: short opt %d rejected\n", opt)); \
1089:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1090:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define REJCICHAP(opt, neg, val, digest) \
1091:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (go->neg && \
1092:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       len >= CILEN_CHAP && \
1093:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[1] == CILEN_CHAP && \
1094:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[0] == opt) { \
1095:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     len -= CILEN_CHAP; \
1096:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     INCPTR(2, p); \
1097:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETSHORT(cishort, p); \
1098:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(cichar, p); \
1099:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     /* Check rejected value. */ \
1100:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cishort != val || cichar != digest) { \
1101:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
1102:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     } \
1103:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     try.neg = 0; \
1104:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     try.neg_upap = 0; \
1105:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_INFO,"lcp_rejci: chap opt %d rejected\n", opt)); \
1106:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1107:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define REJCILONG(opt, neg, val) \
1108:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (go->neg && \
1109:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       len >= CILEN_LONG && \
1110:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[1] == CILEN_LONG && \
1111:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[0] == opt) { \
1112:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     len -= CILEN_LONG; \
1113:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     INCPTR(2, p); \
1114:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETLONG(cilong, p); \
1115:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     /* Check rejected value. */ \
1116:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cilong != val) { \
1117:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
1118:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     } \
1119:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     try.neg = 0; \
1120:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_INFO,"lcp_rejci: long opt %d rejected\n", opt)); \
1121:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1122:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define REJCILQR(opt, neg, val) \
1123:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (go->neg && \
1124:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       len >= CILEN_LQR && \
1125:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[1] == CILEN_LQR && \
1126:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[0] == opt) { \
1127:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     len -= CILEN_LQR; \
1128:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     INCPTR(2, p); \
1129:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETSHORT(cishort, p); \
1130:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETLONG(cilong, p); \
1131:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     /* Check rejected value. */ \
1132:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cishort != PPP_LQR || cilong != val) { \
1133:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
1134:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     } \
1135:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     try.neg = 0; \
1136:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_INFO,"lcp_rejci: LQR opt %d rejected\n", opt)); \
1137:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1138:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #define REJCICBCP(opt, neg, val) \
1139:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (go->neg && \
1140:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       len >= CILEN_CBCP && \
1141:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[1] == CILEN_CBCP && \
1142:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       p[0] == opt) { \
1143:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     len -= CILEN_CBCP; \
1144:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     INCPTR(2, p); \
1145:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(cichar, p); \
1146:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     /* Check rejected value. */ \
1147:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (cichar != val) { \
1148:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto bad; \
1149:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     } \
1150:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     try.neg = 0; \
1151:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_INFO,"lcp_rejci: Callback opt %d rejected\n", opt)); \
1152:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1153:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   
1154:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   REJCISHORT(CI_MRU, neg_mru, go->mru);
 227              		.loc 1 1154 0
 228 0110 2B78     		ldrb	r3, [r5]
 229              	.LVL11:
 230 0112 1A07     		lsl	r2, r3, #28
 231 0114 1DD5     		bpl	.L23
 232 0116 009B     		ldr	r3, [sp]
 233 0118 032B     		cmp	r3, #3
 234 011a 1ADD     		ble	.L23
 235              	.LVL12:
 236 011c 6378     		ldrb	r3, [r4, #1]
 237 011e 042B     		cmp	r3, #4
 238 0120 17D1     		bne	.L23
 239 0122 2378     		ldrb	r3, [r4]
 240 0124 012B     		cmp	r3, #1
 241 0126 14D1     		bne	.L23
 242 0128 A378     		ldrb	r3, [r4, #2]
 243              	.LVL13:
 244 012a E01C     		add	r0, r4, #3
 245              	.LVL14:
 246 012c 1B02     		lsl	r3, r3, #8
 247              	.LVL15:
 248 012e 0278     		ldrb	r2, [r0]
 249 0130 6988     		ldrh	r1, [r5, #2]
 250 0132 1343     		orr	r3, r3, r2
 251              	.LVL16:
 252 0134 9942     		cmp	r1, r3
 253 0136 00D0     		beq	.LCB296
 254 0138 92E1     		b	.L24	@long jump
 255              	.LCB296:
 256 013a 009C     		ldr	r4, [sp]
 257 013c 043C     		sub	r4, r4, #4
 258 013e 0094     		str	r4, [sp]
 259              	.LVL17:
 260 0140 441C     		add	r4, r0, #1
 261              	.LVL18:
 262 0142 9B49     		ldr	r1, .L44+4
 263 0144 0520     		mov	r0, #5
 264 0146 0122     		mov	r2, #1
 265 0148 FFF7FEFF 		bl	ppp_trace
 266 014c 0026     		mov	r6, #0
 267 014e 0596     		str	r6, [sp, #20]
 268 0150 00E0     		b	.L25
 269              	.LVL19:
 270              	.L23:
 271 0152 0590     		str	r0, [sp, #20]
 272              	.L25:
1155:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   REJCILONG(CI_ASYNCMAP, neg_asyncmap, go->asyncmap);
 273              		.loc 1 1155 0
 274 0154 2B78     		ldrb	r3, [r5]
 275 0156 D806     		lsl	r0, r3, #27
 276 0158 23D5     		bpl	.L26
 277 015a 009A     		ldr	r2, [sp]
 278 015c 052A     		cmp	r2, #5
 279 015e 20DD     		ble	.L26
 280              	.LVL20:
 281 0160 6378     		ldrb	r3, [r4, #1]
 282 0162 062B     		cmp	r3, #6
 283 0164 1DD1     		bne	.L26
 284 0166 2378     		ldrb	r3, [r4]
 285 0168 022B     		cmp	r3, #2
 286 016a 1AD1     		bne	.L26
 287 016c A278     		ldrb	r2, [r4, #2]
 288              	.LVL21:
 289 016e 1202     		lsl	r2, r2, #8
 290              	.LVL22:
 291 0170 E378     		ldrb	r3, [r4, #3]
 292 0172 1343     		orr	r3, r3, r2
 293              	.LVL23:
 294 0174 1B02     		lsl	r3, r3, #8
 295              	.LVL24:
 296 0176 2279     		ldrb	r2, [r4, #4]
 297 0178 1343     		orr	r3, r3, r2
 298              	.LVL25:
 299 017a 611D     		add	r1, r4, #5
 300              	.LVL26:
 301 017c 1B02     		lsl	r3, r3, #8
 302              	.LVL27:
 303 017e 0A78     		ldrb	r2, [r1]
 304 0180 1343     		orr	r3, r3, r2
 305              	.LVL28:
 306 0182 AA68     		ldr	r2, [r5, #8]
 307 0184 9A42     		cmp	r2, r3
 308 0186 00D0     		beq	.LCB359
 309 0188 6AE1     		b	.L24	@long jump
 310              	.LCB359:
 311 018a 009B     		ldr	r3, [sp]
 312 018c 063B     		sub	r3, r3, #6
 313 018e 0093     		str	r3, [sp]
 314              	.LVL29:
 315 0190 4C1C     		add	r4, r1, #1
 316              	.LVL30:
 317 0192 8849     		ldr	r1, .L44+8
 318 0194 0520     		mov	r0, #5
 319 0196 0222     		mov	r2, #2
 320 0198 FFF7FEFF 		bl	ppp_trace
 321 019c 0026     		mov	r6, #0
 322 019e 0496     		str	r6, [sp, #16]
 323 01a0 00E0     		b	.L27
 324              	.LVL31:
 325              	.L26:
 326 01a2 0497     		str	r7, [sp, #16]
 327              	.LVL32:
 328              	.L27:
1156:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   REJCICHAP(CI_AUTHTYPE, neg_chap, PPP_CHAP, go->chap_mdtype);
 329              		.loc 1 1156 0
 330 01a4 2B78     		ldrb	r3, [r5]
 331 01a6 5F06     		lsl	r7, r3, #25
 332 01a8 23D5     		bpl	.L28
 333 01aa 0098     		ldr	r0, [sp]
 334 01ac 0428     		cmp	r0, #4
 335 01ae 20DD     		ble	.L28
 336              	.LVL33:
 337 01b0 6378     		ldrb	r3, [r4, #1]
 338 01b2 052B     		cmp	r3, #5
 339 01b4 1DD1     		bne	.L28
 340 01b6 2378     		ldrb	r3, [r4]
 341 01b8 032B     		cmp	r3, #3
 342 01ba 1AD1     		bne	.L28
 343 01bc A378     		ldrb	r3, [r4, #2]
 344              	.LVL34:
 345 01be 1B02     		lsl	r3, r3, #8
 346              	.LVL35:
 347 01c0 211D     		add	r1, r4, #4
 348              	.LVL36:
 349 01c2 0878     		ldrb	r0, [r1]
 350              	.LVL37:
 351 01c4 E278     		ldrb	r2, [r4, #3]
 352 01c6 1343     		orr	r3, r3, r2
 353              	.LVL38:
 354 01c8 7B4A     		ldr	r2, .L44+12
 355 01ca 9342     		cmp	r3, r2
 356 01cc 00D0     		beq	.LCB421
 357 01ce 47E1     		b	.L24	@long jump
 358              	.LCB421:
 359              	.LVL39:
 360 01d0 2B79     		ldrb	r3, [r5, #4]
 361 01d2 8342     		cmp	r3, r0
 362 01d4 00D0     		beq	.LCB425
 363 01d6 43E1     		b	.L24	@long jump
 364              	.LCB425:
 365 01d8 009A     		ldr	r2, [sp]
 366 01da 053A     		sub	r2, r2, #5
 367 01dc 0092     		str	r2, [sp]
 368              	.LVL40:
 369 01de 4C1C     		add	r4, r1, #1
 370 01e0 7649     		ldr	r1, .L44+16
 371 01e2 0520     		mov	r0, #5
 372              	.LVL41:
 373 01e4 0322     		mov	r2, #3
 374 01e6 FFF7FEFF 		bl	ppp_trace
 375 01ea 0023     		mov	r3, #0
 376 01ec 9B46     		mov	fp, r3
 377 01ee 0393     		str	r3, [sp, #12]
 378 01f0 02E0     		b	.L29
 379              	.LVL42:
 380              	.L28:
 381 01f2 C346     		mov	fp, r8
 382 01f4 5646     		mov	r6, sl
 383 01f6 0396     		str	r6, [sp, #12]
 384              	.LVL43:
 385              	.L29:
1157:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (!go->neg_chap) {
 386              		.loc 1 1157 0
 387 01f8 2B78     		ldrb	r3, [r5]
 388 01fa 5806     		lsl	r0, r3, #25
 389 01fc 1FD4     		bmi	.L30
1158:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     REJCISHORT(CI_AUTHTYPE, neg_upap, PPP_PAP);
 390              		.loc 1 1158 0
 391 01fe 2B78     		ldrb	r3, [r5]
 392 0200 9A06     		lsl	r2, r3, #26
 393 0202 1CD5     		bpl	.L30
 394 0204 009B     		ldr	r3, [sp]
 395 0206 032B     		cmp	r3, #3
 396 0208 19DD     		ble	.L30
 397              	.LVL44:
 398 020a 6378     		ldrb	r3, [r4, #1]
 399 020c 042B     		cmp	r3, #4
 400 020e 16D1     		bne	.L30
 401 0210 2378     		ldrb	r3, [r4]
 402 0212 032B     		cmp	r3, #3
 403 0214 13D1     		bne	.L30
 404 0216 A378     		ldrb	r3, [r4, #2]
 405              	.LVL45:
 406 0218 E11C     		add	r1, r4, #3
 407              	.LVL46:
 408 021a 1B02     		lsl	r3, r3, #8
 409              	.LVL47:
 410 021c 0A78     		ldrb	r2, [r1]
 411 021e 1343     		orr	r3, r3, r2
 412              	.LVL48:
 413 0220 674A     		ldr	r2, .L44+20
 414 0222 9342     		cmp	r3, r2
 415 0224 00D0     		beq	.LCB495
 416 0226 1BE1     		b	.L24	@long jump
 417              	.LCB495:
 418 0228 009C     		ldr	r4, [sp]
 419 022a 043C     		sub	r4, r4, #4
 420 022c 0094     		str	r4, [sp]
 421              	.LVL49:
 422 022e 4C1C     		add	r4, r1, #1
 423              	.LVL50:
 424 0230 5F49     		ldr	r1, .L44+4
 425 0232 0520     		mov	r0, #5
 426 0234 0322     		mov	r2, #3
 427 0236 FFF7FEFF 		bl	ppp_trace
 428 023a 0026     		mov	r6, #0
 429 023c B346     		mov	fp, r6
 430              	.LVL51:
 431              	.L30:
1159:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1160:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   REJCILQR(CI_QUALITY, neg_lqr, go->lqr_period);
 432              		.loc 1 1160 0
 433 023e 6B78     		ldrb	r3, [r5, #1]
 434 0240 5F07     		lsl	r7, r3, #29
 435 0242 2DD5     		bpl	.L31
 436 0244 0098     		ldr	r0, [sp]
 437 0246 0728     		cmp	r0, #7
 438 0248 2ADD     		ble	.L31
 439              	.LVL52:
 440 024a 6378     		ldrb	r3, [r4, #1]
 441 024c 082B     		cmp	r3, #8
 442 024e 27D1     		bne	.L31
 443 0250 2378     		ldrb	r3, [r4]
 444 0252 042B     		cmp	r3, #4
 445 0254 24D1     		bne	.L31
 446 0256 A378     		ldrb	r3, [r4, #2]
 447              	.LVL53:
 448 0258 1B02     		lsl	r3, r3, #8
 449              	.LVL54:
 450 025a 2079     		ldrb	r0, [r4, #4]
 451 025c 6179     		ldrb	r1, [r4, #5]
 452 025e A279     		ldrb	r2, [r4, #6]
 453 0260 9046     		mov	r8, r2
 454 0262 E71D     		add	r7, r4, #7
 455              	.LVL55:
 456 0264 3E78     		ldrb	r6, [r7]
 457 0266 E278     		ldrb	r2, [r4, #3]
 458 0268 1343     		orr	r3, r3, r2
 459              	.LVL56:
 460 026a 564A     		ldr	r2, .L44+24
 461 026c 9342     		cmp	r3, r2
 462 026e 00D0     		beq	.LCB557
 463 0270 F6E0     		b	.L24	@long jump
 464              	.LCB557:
 465              	.LVL57:
 466 0272 0302     		lsl	r3, r0, #8
 467              	.LVL58:
 468 0274 0B43     		orr	r3, r3, r1
 469              	.LVL59:
 470 0276 1B02     		lsl	r3, r3, #8
 471              	.LVL60:
 472 0278 4046     		mov	r0, r8
 473 027a 0343     		orr	r3, r3, r0
 474              	.LVL61:
 475 027c 1B02     		lsl	r3, r3, #8
 476              	.LVL62:
 477 027e 3343     		orr	r3, r3, r6
 478              	.LVL63:
 479 0280 6A69     		ldr	r2, [r5, #20]
 480 0282 9A42     		cmp	r2, r3
 481 0284 00D0     		beq	.LCB574
 482 0286 EBE0     		b	.L24	@long jump
 483              	.LCB574:
 484 0288 009A     		ldr	r2, [sp]
 485 028a 083A     		sub	r2, r2, #8
 486 028c 0092     		str	r2, [sp]
 487              	.LVL64:
 488 028e 7C1C     		add	r4, r7, #1
 489 0290 4D49     		ldr	r1, .L44+28
 490 0292 0520     		mov	r0, #5
 491 0294 0422     		mov	r2, #4
 492 0296 FFF7FEFF 		bl	ppp_trace
 493 029a 0023     		mov	r3, #0
 494 029c 0293     		str	r3, [sp, #8]
 495 029e 01E0     		b	.L32
 496              	.LVL65:
 497              	.L31:
 498 02a0 4E46     		mov	r6, r9
 499 02a2 0296     		str	r6, [sp, #8]
 500              	.LVL66:
 501              	.L32:
1161:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   REJCICBCP(CI_CALLBACK, neg_cbcp, CBCP_OPT);
 502              		.loc 1 1161 0
 503 02a4 6B78     		ldrb	r3, [r5, #1]
 504 02a6 1807     		lsl	r0, r3, #28
 505 02a8 18D5     		bpl	.L33
 506 02aa 009A     		ldr	r2, [sp]
 507 02ac 022A     		cmp	r2, #2
 508 02ae 15DD     		ble	.L33
 509              	.LVL67:
 510 02b0 6378     		ldrb	r3, [r4, #1]
 511 02b2 032B     		cmp	r3, #3
 512 02b4 12D1     		bne	.L33
 513 02b6 2378     		ldrb	r3, [r4]
 514 02b8 0D2B     		cmp	r3, #13
 515 02ba 0FD1     		bne	.L33
 516 02bc A11C     		add	r1, r4, #2
 517              	.LVL68:
 518 02be 0B78     		ldrb	r3, [r1]
 519 02c0 062B     		cmp	r3, #6
 520 02c2 00D0     		beq	.LCB618
 521 02c4 CCE0     		b	.L24	@long jump
 522              	.LCB618:
 523 02c6 033A     		sub	r2, r2, #3
 524 02c8 0092     		str	r2, [sp]
 525              	.LVL69:
 526 02ca 4C1C     		add	r4, r1, #1
 527              	.LVL70:
 528 02cc 3F49     		ldr	r1, .L44+32
 529 02ce 0520     		mov	r0, #5
 530 02d0 0D22     		mov	r2, #13
 531 02d2 FFF7FEFF 		bl	ppp_trace
 532 02d6 0023     		mov	r3, #0
 533 02d8 9946     		mov	r9, r3
 534 02da 01E0     		b	.L34
 535              	.LVL71:
 536              	.L33:
 537 02dc 069E     		ldr	r6, [sp, #24]
 538 02de B146     		mov	r9, r6
 539              	.LVL72:
 540              	.L34:
1162:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   REJCILONG(CI_MAGICNUMBER, neg_magicnumber, go->magicnumber);
 541              		.loc 1 1162 0
 542 02e0 2B78     		ldrb	r3, [r5]
 543 02e2 DB09     		lsr	r3, r3, #7
 544 02e4 002B     		cmp	r3, #0
 545 02e6 22D0     		beq	.L35
 546 02e8 009F     		ldr	r7, [sp]
 547 02ea 052F     		cmp	r7, #5
 548 02ec 1FDD     		ble	.L35
 549              	.LVL73:
 550 02ee 6378     		ldrb	r3, [r4, #1]
 551 02f0 062B     		cmp	r3, #6
 552 02f2 1CD1     		bne	.L35
 553 02f4 2378     		ldrb	r3, [r4]
 554 02f6 052B     		cmp	r3, #5
 555 02f8 19D1     		bne	.L35
 556 02fa A278     		ldrb	r2, [r4, #2]
 557              	.LVL74:
 558 02fc 1202     		lsl	r2, r2, #8
 559              	.LVL75:
 560 02fe E378     		ldrb	r3, [r4, #3]
 561 0300 1343     		orr	r3, r3, r2
 562              	.LVL76:
 563 0302 1B02     		lsl	r3, r3, #8
 564              	.LVL77:
 565 0304 2279     		ldrb	r2, [r4, #4]
 566 0306 1343     		orr	r3, r3, r2
 567              	.LVL78:
 568 0308 611D     		add	r1, r4, #5
 569              	.LVL79:
 570 030a 1B02     		lsl	r3, r3, #8
 571              	.LVL80:
 572 030c 0A78     		ldrb	r2, [r1]
 573 030e 1343     		orr	r3, r3, r2
 574              	.LVL81:
 575 0310 EA68     		ldr	r2, [r5, #12]
 576 0312 9A42     		cmp	r2, r3
 577 0314 00D0     		beq	.LCB682
 578 0316 A3E0     		b	.L24	@long jump
 579              	.LCB682:
 580 0318 063F     		sub	r7, r7, #6
 581 031a 0097     		str	r7, [sp]
 582              	.LVL82:
 583 031c 4C1C     		add	r4, r1, #1
 584              	.LVL83:
 585 031e 2549     		ldr	r1, .L44+8
 586 0320 0520     		mov	r0, #5
 587 0322 0522     		mov	r2, #5
 588 0324 FFF7FEFF 		bl	ppp_trace
 589 0328 0020     		mov	r0, #0
 590 032a 8246     		mov	sl, r0
 591 032c 01E0     		b	.L36
 592              	.LVL84:
 593              	.L35:
 594 032e 079A     		ldr	r2, [sp, #28]
 595 0330 9246     		mov	sl, r2
 596              	.LVL85:
 597              	.L36:
1163:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   REJCIVOID(CI_PCOMPRESSION, neg_pcompression);
 598              		.loc 1 1163 0
 599 0332 6B78     		ldrb	r3, [r5, #1]
 600 0334 DB07     		lsl	r3, r3, #31
 601 0336 DB0F     		lsr	r3, r3, #31
 602 0338 1B06     		lsl	r3, r3, #24
 603 033a 002B     		cmp	r3, #0
 604 033c 14D0     		beq	.L37
 605 033e 009B     		ldr	r3, [sp]
 606 0340 012B     		cmp	r3, #1
 607 0342 11DD     		ble	.L37
 608              	.LVL86:
 609 0344 6378     		ldrb	r3, [r4, #1]
 610 0346 022B     		cmp	r3, #2
 611 0348 0ED1     		bne	.L37
 612 034a 2378     		ldrb	r3, [r4]
 613 034c 072B     		cmp	r3, #7
 614 034e 0BD1     		bne	.L37
 615 0350 009E     		ldr	r6, [sp]
 616 0352 023E     		sub	r6, r6, #2
 617 0354 0096     		str	r6, [sp]
 618              	.LVL87:
 619 0356 0234     		add	r4, r4, #2
 620 0358 1D49     		ldr	r1, .L44+36
 621 035a 0520     		mov	r0, #5
 622 035c 0722     		mov	r2, #7
 623 035e FFF7FEFF 		bl	ppp_trace
 624 0362 0027     		mov	r7, #0
 625 0364 B846     		mov	r8, r7
 626 0366 01E0     		b	.L38
 627              	.LVL88:
 628              	.L37:
 629 0368 0898     		ldr	r0, [sp, #32]
 630 036a 8046     		mov	r8, r0
 631              	.LVL89:
 632              	.L38:
1164:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   REJCIVOID(CI_ACCOMPRESSION, neg_accompression);
 633              		.loc 1 1164 0
 634 036c 6B78     		ldrb	r3, [r5, #1]
 635 036e 9A07     		lsl	r2, r3, #30
 636 0370 12D5     		bpl	.L39
 637 0372 009B     		ldr	r3, [sp]
 638 0374 012B     		cmp	r3, #1
 639 0376 0FDD     		ble	.L39
 640              	.LVL90:
 641 0378 6378     		ldrb	r3, [r4, #1]
 642 037a 022B     		cmp	r3, #2
 643 037c 0CD1     		bne	.L39
 644 037e 2378     		ldrb	r3, [r4]
 645 0380 082B     		cmp	r3, #8
 646 0382 09D1     		bne	.L39
 647 0384 009C     		ldr	r4, [sp]
 648              	.LVL91:
 649 0386 023C     		sub	r4, r4, #2
 650 0388 0094     		str	r4, [sp]
 651              	.LVL92:
 652 038a 1149     		ldr	r1, .L44+36
 653 038c 0520     		mov	r0, #5
 654 038e 0822     		mov	r2, #8
 655 0390 FFF7FEFF 		bl	ppp_trace
 656 0394 0027     		mov	r7, #0
 657 0396 00E0     		b	.L40
 658              	.LVL93:
 659              	.L39:
 660 0398 099F     		ldr	r7, [sp, #36]
 661              	.LVL94:
 662              	.L40:
1165:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   
1166:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
1167:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * If there are any remaining CIs, then this packet is bad.
1168:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
1169:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (len != 0) {
 663              		.loc 1 1169 0
 664 039a 009E     		ldr	r6, [sp]
 665 039c 002E     		cmp	r6, #0
 666 039e 5FD1     		bne	.L24
 667              	.LVL95:
1170:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     goto bad;
1171:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1172:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
1173:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Now we can update state.
1174:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
1175:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (f->state != LS_OPENED) {
 668              		.loc 1 1175 0
 669 03a0 0198     		ldr	r0, [sp, #4]
 670 03a2 8368     		ldr	r3, [r0, #8]
 671 03a4 092B     		cmp	r3, #9
 672 03a6 15D1     		bne	.L41
 673              	.LVL96:
 674 03a8 0120     		mov	r0, #1
 675 03aa 5EE0     		b	.L42
 676              	.L45:
 677              		.align	2
 678              	.L44:
 679 03ac 00000000 		.word	lcp_gotoptions
 680 03b0 00000000 		.word	.LC2
 681 03b4 24000000 		.word	.LC4
 682 03b8 23C20000 		.word	49699
 683 03bc 48000000 		.word	.LC6
 684 03c0 23C00000 		.word	49187
 685 03c4 25C00000 		.word	49189
 686 03c8 6C000000 		.word	.LC8
 687 03cc 8C000000 		.word	.LC10
 688 03d0 B4000000 		.word	.LC12
 689              	.L41:
1176:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     *go = try;
 690              		.loc 1 1176 0
 691 03d4 0AA9     		add	r1, sp, #40
 692 03d6 0B78     		ldrb	r3, [r1]
 693 03d8 0824     		mov	r4, #8
 694              	.LVL97:
 695 03da A343     		bic	r3, r3, r4
 696 03dc 059E     		ldr	r6, [sp, #20]
 697 03de F200     		lsl	r2, r6, #3
 698 03e0 1343     		orr	r3, r3, r2
 699 03e2 0B70     		strb	r3, [r1]
 700 03e4 0B78     		ldrb	r3, [r1]
 701 03e6 1022     		mov	r2, #16
 702 03e8 9343     		bic	r3, r3, r2
 703 03ea 0498     		ldr	r0, [sp, #16]
 704 03ec 0201     		lsl	r2, r0, #4
 705 03ee 1343     		orr	r3, r3, r2
 706 03f0 0B70     		strb	r3, [r1]
 707 03f2 0B78     		ldrb	r3, [r1]
 708 03f4 4022     		mov	r2, #64
 709 03f6 9343     		bic	r3, r3, r2
 710 03f8 039E     		ldr	r6, [sp, #12]
 711 03fa B201     		lsl	r2, r6, #6
 712 03fc 1343     		orr	r3, r3, r2
 713 03fe 0B70     		strb	r3, [r1]
 714 0400 0B78     		ldrb	r3, [r1]
 715 0402 2022     		mov	r2, #32
 716 0404 9343     		bic	r3, r3, r2
 717 0406 5846     		mov	r0, fp
 718 0408 4201     		lsl	r2, r0, #5
 719 040a 1343     		orr	r3, r3, r2
 720 040c 0B70     		strb	r3, [r1]
 721 040e 4B78     		ldrb	r3, [r1, #1]
 722 0410 0422     		mov	r2, #4
 723 0412 9343     		bic	r3, r3, r2
 724 0414 029E     		ldr	r6, [sp, #8]
 725 0416 B200     		lsl	r2, r6, #2
 726 0418 1343     		orr	r3, r3, r2
 727 041a 4B70     		strb	r3, [r1, #1]
 728 041c 0120     		mov	r0, #1
 729 041e 4B78     		ldrb	r3, [r1, #1]
 730 0420 A343     		bic	r3, r3, r4
 731 0422 4C46     		mov	r4, r9
 732 0424 E200     		lsl	r2, r4, #3
 733 0426 1343     		orr	r3, r3, r2
 734 0428 4B70     		strb	r3, [r1, #1]
 735 042a 0A78     		ldrb	r2, [r1]
 736 042c 7F23     		mov	r3, #127
 737 042e 1340     		and	r3, r3, r2
 738 0430 5646     		mov	r6, sl
 739 0432 F201     		lsl	r2, r6, #7
 740 0434 1343     		orr	r3, r3, r2
 741 0436 0B70     		strb	r3, [r1]
 742 0438 4B78     		ldrb	r3, [r1, #1]
 743 043a 8343     		bic	r3, r3, r0
 744 043c 4246     		mov	r2, r8
 745 043e 0240     		and	r2, r2, r0
 746 0440 1343     		orr	r3, r3, r2
 747 0442 4B70     		strb	r3, [r1, #1]
 748 0444 3840     		and	r0, r0, r7
 749 0446 4B78     		ldrb	r3, [r1, #1]
 750 0448 0222     		mov	r2, #2
 751 044a 9343     		bic	r3, r3, r2
 752 044c 4000     		lsl	r0, r0, #1
 753 044e 0343     		orr	r3, r3, r0
 754 0450 4B70     		strb	r3, [r1, #1]
 755 0452 2B1C     		mov	r3, r5
 756 0454 85C9     		ldmia	r1!, {r0, r2, r7}
 757 0456 85C3     		stmia	r3!, {r0, r2, r7}
 758              	.LVL98:
 759 0458 D0C9     		ldmia	r1!, {r4, r6, r7}
 760 045a D0C3     		stmia	r3!, {r4, r6, r7}
 761 045c 0120     		mov	r0, #1
 762 045e 04E0     		b	.L42
 763              	.LVL99:
 764              	.L24:
1177:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1178:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   return 1;
1179:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   
1180:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** bad:
1181:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   LCPDEBUG((LOG_WARNING, "lcp_rejci: received bad Reject!\n"));
 765              		.loc 1 1181 0
 766 0460 0649     		ldr	r1, .L46
 767 0462 0320     		mov	r0, #3
 768              	.LVL100:
 769 0464 FFF7FEFF 		bl	ppp_trace
 770 0468 0020     		mov	r0, #0
 771              	.LVL101:
 772              	.L42:
1182:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   return 0;
1183:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
 773              		.loc 1 1183 0
 774 046a 10B0     		add	sp, sp, #64
 775              		@ sp needed for prologue
 776              	.LVL102:
 777              	.LVL103:
 778              	.LVL104:
 779 046c 3CBC     		pop	{r2, r3, r4, r5}
 780 046e 9046     		mov	r8, r2
 781 0470 9946     		mov	r9, r3
 782 0472 A246     		mov	sl, r4
 783 0474 AB46     		mov	fp, r5
 784 0476 F0BC     		pop	{r4, r5, r6, r7}
 785 0478 02BC     		pop	{r1}
 786 047a 0847     		bx	r1
 787              	.L47:
 788              		.align	2
 789              	.L46:
 790 047c D8000000 		.word	.LC14
 791              	.LFE305:
 793              		.section	.rodata.str1.4
 794 00f9 000000   		.align	2
 795              	.LC17:
 796 00fc 6C63705F 		.ascii	"lcp_acki: Ack\012\000"
 796      61636B69 
 796      3A204163 
 796      6B0A00
 797 010b 00       		.align	2
 798              	.LC19:
 799 010c 6C63705F 		.ascii	"lcp_acki: received bad Ack!\012\000"
 799      61636B69 
 799      3A207265 
 799      63656976 
 799      65642062 
 800              		.text
 801              		.align	2
 802              		.code	16
 803              		.thumb_func
 805              	lcp_ackci:
 806              	.LFB303:
 807              		.loc 1 609 0
 808 0480 30B5     		push	{r4, r5, lr}
 809              	.LCFI4:
 810              	.LVL105:
 811 0482 141C     		mov	r4, r2
 812              		.loc 1 610 0
 813 0484 0268     		ldr	r2, [r0]
 814              	.LVL106:
 815 0486 5300     		lsl	r3, r2, #1
 816 0488 9B18     		add	r3, r3, r2
 817 048a DB00     		lsl	r3, r3, #3
 818 048c 7F4A     		ldr	r2, .L61
 819 048e D018     		add	r0, r2, r3
 820              	.LVL107:
 821              		.loc 1 696 0
 822 0490 0378     		ldrb	r3, [r0]
 823 0492 1A07     		lsl	r2, r3, #28
 824 0494 1AD5     		bpl	.L49
 825 0496 4588     		ldrh	r5, [r0, #2]
 826 0498 9423     		mov	r3, #148
 827 049a 5B00     		lsl	r3, r3, #1
 828 049c 9D42     		cmp	r5, r3
 829 049e 15D0     		beq	.L49
 830 04a0 043C     		sub	r4, r4, #4
 831 04a2 00D5     		bpl	.LCB992
 832 04a4 EAE0     		b	.L50	@long jump
 833              	.LCB992:
 834 04a6 4A1C     		add	r2, r1, #1
 835              	.LVL108:
 836 04a8 1378     		ldrb	r3, [r2]
 837 04aa 042B     		cmp	r3, #4
 838 04ac 00D0     		beq	.LCB997
 839 04ae E5E0     		b	.L50	@long jump
 840              	.LCB997:
 841 04b0 0B78     		ldrb	r3, [r1]
 842 04b2 012B     		cmp	r3, #1
 843 04b4 00D0     		beq	.LCB1000
 844 04b6 E1E0     		b	.L50	@long jump
 845              	.LCB1000:
 846              	.LVL109:
 847 04b8 531C     		add	r3, r2, #1
 848              	.LVL110:
 849 04ba 1A78     		ldrb	r2, [r3]
 850              	.LVL111:
 851 04bc 591C     		add	r1, r3, #1
 852              	.LVL112:
 853 04be 1202     		lsl	r2, r2, #8
 854              	.LVL113:
 855 04c0 0B78     		ldrb	r3, [r1]
 856 04c2 1A43     		orr	r2, r2, r3
 857              	.LVL114:
 858 04c4 9542     		cmp	r5, r2
 859 04c6 00D0     		beq	.LCB1018
 860 04c8 D8E0     		b	.L50	@long jump
 861              	.LCB1018:
 862 04ca 0131     		add	r1, r1, #1
 863              	.LVL115:
 864              	.L49:
 865              		.loc 1 697 0
 866 04cc 0378     		ldrb	r3, [r0]
 867 04ce DA06     		lsl	r2, r3, #27
 868 04d0 20D5     		bpl	.L51
 869 04d2 8568     		ldr	r5, [r0, #8]
 870 04d4 6B1C     		add	r3, r5, #1
 871 04d6 1DD0     		beq	.L51
 872 04d8 063C     		sub	r4, r4, #6
 873 04da 00D5     		bpl	.LCB1036
 874 04dc CEE0     		b	.L50	@long jump
 875              	.LCB1036:
 876 04de 4A1C     		add	r2, r1, #1
 877              	.LVL116:
 878 04e0 1378     		ldrb	r3, [r2]
 879 04e2 062B     		cmp	r3, #6
 880 04e4 00D0     		beq	.LCB1041
 881 04e6 C9E0     		b	.L50	@long jump
 882              	.LCB1041:
 883 04e8 0B78     		ldrb	r3, [r1]
 884 04ea 022B     		cmp	r3, #2
 885 04ec 00D0     		beq	.LCB1044
 886 04ee C5E0     		b	.L50	@long jump
 887              	.LCB1044:
 888              	.LVL117:
 889 04f0 0132     		add	r2, r2, #1
 890              	.LVL118:
 891 04f2 1178     		ldrb	r1, [r2]
 892              	.LVL119:
 893 04f4 0132     		add	r2, r2, #1
 894              	.LVL120:
 895 04f6 0902     		lsl	r1, r1, #8
 896              	.LVL121:
 897 04f8 1378     		ldrb	r3, [r2]
 898 04fa 0B43     		orr	r3, r3, r1
 899              	.LVL122:
 900 04fc 0132     		add	r2, r2, #1
 901              	.LVL123:
 902 04fe 1B02     		lsl	r3, r3, #8
 903              	.LVL124:
 904 0500 1178     		ldrb	r1, [r2]
 905 0502 0B43     		orr	r3, r3, r1
 906              	.LVL125:
 907 0504 511C     		add	r1, r2, #1
 908              	.LVL126:
 909 0506 1B02     		lsl	r3, r3, #8
 910              	.LVL127:
 911 0508 0A78     		ldrb	r2, [r1]
 912 050a 1343     		orr	r3, r3, r2
 913              	.LVL128:
 914 050c 9D42     		cmp	r5, r3
 915 050e 00D0     		beq	.LCB1072
 916 0510 B4E0     		b	.L50	@long jump
 917              	.LCB1072:
 918 0512 0131     		add	r1, r1, #1
 919              	.LVL129:
 920              	.L51:
 921              		.loc 1 698 0
 922 0514 0378     		ldrb	r3, [r0]
 923 0516 5A06     		lsl	r2, r3, #25
 924 0518 1DD5     		bpl	.L52
 925 051a 053C     		sub	r4, r4, #5
 926 051c 00D5     		bpl	.LCB1087
 927 051e ADE0     		b	.L50	@long jump
 928              	.LCB1087:
 929 0520 4A1C     		add	r2, r1, #1
 930              	.LVL130:
 931 0522 1378     		ldrb	r3, [r2]
 932 0524 052B     		cmp	r3, #5
 933 0526 00D0     		beq	.LCB1092
 934 0528 A8E0     		b	.L50	@long jump
 935              	.LCB1092:
 936 052a 0B78     		ldrb	r3, [r1]
 937 052c 032B     		cmp	r3, #3
 938 052e 00D0     		beq	.LCB1095
 939 0530 A4E0     		b	.L50	@long jump
 940              	.LCB1095:
 941              	.LVL131:
 942 0532 0132     		add	r2, r2, #1
 943              	.LVL132:
 944 0534 1378     		ldrb	r3, [r2]
 945              	.LVL133:
 946 0536 511C     		add	r1, r2, #1
 947              	.LVL134:
 948 0538 1B02     		lsl	r3, r3, #8
 949              	.LVL135:
 950 053a 0A78     		ldrb	r2, [r1]
 951 053c 1343     		orr	r3, r3, r2
 952              	.LVL136:
 953 053e 544A     		ldr	r2, .L61+4
 954 0540 9342     		cmp	r3, r2
 955 0542 00D0     		beq	.LCB1117
 956 0544 9AE0     		b	.L50	@long jump
 957              	.LCB1117:
 958 0546 0131     		add	r1, r1, #1
 959              	.LVL137:
 960 0548 0279     		ldrb	r2, [r0, #4]
 961 054a 0B78     		ldrb	r3, [r1]
 962 054c 9A42     		cmp	r2, r3
 963 054e 00D0     		beq	.LCB1123
 964 0550 94E0     		b	.L50	@long jump
 965              	.LCB1123:
 966 0552 0131     		add	r1, r1, #1
 967              	.LVL138:
 968 0554 18E0     		b	.L53
 969              	.L52:
 970              		.loc 1 699 0
 971 0556 0378     		ldrb	r3, [r0]
 972 0558 9A06     		lsl	r2, r3, #26
 973 055a 15D5     		bpl	.L53
 974 055c 043C     		sub	r4, r4, #4
 975 055e 00D5     		bpl	.LCB1140
 976 0560 8CE0     		b	.L50	@long jump
 977              	.LCB1140:
 978 0562 4A1C     		add	r2, r1, #1
 979              	.LVL139:
 980 0564 1378     		ldrb	r3, [r2]
 981 0566 042B     		cmp	r3, #4
 982 0568 00D0     		beq	.LCB1145
 983 056a 87E0     		b	.L50	@long jump
 984              	.LCB1145:
 985 056c 0B78     		ldrb	r3, [r1]
 986 056e 032B     		cmp	r3, #3
 987 0570 00D0     		beq	.LCB1148
 988 0572 83E0     		b	.L50	@long jump
 989              	.LCB1148:
 990              	.LVL140:
 991 0574 0132     		add	r2, r2, #1
 992              	.LVL141:
 993 0576 1378     		ldrb	r3, [r2]
 994              	.LVL142:
 995 0578 511C     		add	r1, r2, #1
 996              	.LVL143:
 997 057a 1B02     		lsl	r3, r3, #8
 998              	.LVL144:
 999 057c 0A78     		ldrb	r2, [r1]
 1000 057e 1343     		orr	r3, r3, r2
 1001              	.LVL145:
 1002 0580 444A     		ldr	r2, .L61+8
 1003 0582 9342     		cmp	r3, r2
 1004 0584 7AD1     		bne	.L50
 1005 0586 0131     		add	r1, r1, #1
 1006              	.LVL146:
 1007              	.L53:
 1008              		.loc 1 700 0
 1009 0588 4378     		ldrb	r3, [r0, #1]
 1010 058a 5A07     		lsl	r2, r3, #29
 1011 058c 23D5     		bpl	.L54
 1012 058e 083C     		sub	r4, r4, #8
 1013 0590 74D4     		bmi	.L50
 1014 0592 4A1C     		add	r2, r1, #1
 1015              	.LVL147:
 1016 0594 1378     		ldrb	r3, [r2]
 1017 0596 082B     		cmp	r3, #8
 1018 0598 70D1     		bne	.L50
 1019 059a 0B78     		ldrb	r3, [r1]
 1020 059c 042B     		cmp	r3, #4
 1021 059e 6DD1     		bne	.L50
 1022              	.LVL148:
 1023 05a0 0132     		add	r2, r2, #1
 1024              	.LVL149:
 1025 05a2 1378     		ldrb	r3, [r2]
 1026              	.LVL150:
 1027 05a4 511C     		add	r1, r2, #1
 1028              	.LVL151:
 1029 05a6 1B02     		lsl	r3, r3, #8
 1030              	.LVL152:
 1031 05a8 0A78     		ldrb	r2, [r1]
 1032 05aa 1343     		orr	r3, r3, r2
 1033              	.LVL153:
 1034 05ac 3A4A     		ldr	r2, .L61+12
 1035 05ae 9342     		cmp	r3, r2
 1036 05b0 64D1     		bne	.L50
 1037 05b2 4A1C     		add	r2, r1, #1
 1038              	.LVL154:
 1039 05b4 1178     		ldrb	r1, [r2]
 1040              	.LVL155:
 1041 05b6 0132     		add	r2, r2, #1
 1042              	.LVL156:
 1043 05b8 0902     		lsl	r1, r1, #8
 1044              	.LVL157:
 1045 05ba 1378     		ldrb	r3, [r2]
 1046 05bc 0B43     		orr	r3, r3, r1
 1047              	.LVL158:
 1048 05be 0132     		add	r2, r2, #1
 1049              	.LVL159:
 1050 05c0 1B02     		lsl	r3, r3, #8
 1051              	.LVL160:
 1052 05c2 1178     		ldrb	r1, [r2]
 1053 05c4 0B43     		orr	r3, r3, r1
 1054              	.LVL161:
 1055 05c6 511C     		add	r1, r2, #1
 1056              	.LVL162:
 1057 05c8 1B02     		lsl	r3, r3, #8
 1058              	.LVL163:
 1059 05ca 0A78     		ldrb	r2, [r1]
 1060 05cc 1343     		orr	r3, r3, r2
 1061              	.LVL164:
 1062 05ce 4269     		ldr	r2, [r0, #20]
 1063 05d0 9A42     		cmp	r2, r3
 1064 05d2 53D1     		bne	.L50
 1065 05d4 0131     		add	r1, r1, #1
 1066              	.LVL165:
 1067              	.L54:
 1068              		.loc 1 701 0
 1069 05d6 4378     		ldrb	r3, [r0, #1]
 1070 05d8 1A07     		lsl	r2, r3, #28
 1071 05da 0DD5     		bpl	.L55
 1072 05dc 033C     		sub	r4, r4, #3
 1073 05de 4DD4     		bmi	.L50
 1074 05e0 4D1C     		add	r5, r1, #1
 1075              	.LVL166:
 1076 05e2 2B78     		ldrb	r3, [r5]
 1077 05e4 032B     		cmp	r3, #3
 1078 05e6 49D1     		bne	.L50
 1079 05e8 0B78     		ldrb	r3, [r1]
 1080 05ea 0D2B     		cmp	r3, #13
 1081 05ec 46D1     		bne	.L50
 1082              	.LVL167:
 1083 05ee 691C     		add	r1, r5, #1
 1084              	.LVL168:
 1085 05f0 0B78     		ldrb	r3, [r1]
 1086 05f2 062B     		cmp	r3, #6
 1087 05f4 42D1     		bne	.L50
 1088 05f6 0131     		add	r1, r1, #1
 1089              	.LVL169:
 1090              	.L55:
 1091              		.loc 1 702 0
 1092 05f8 0378     		ldrb	r3, [r0]
 1093 05fa DB09     		lsr	r3, r3, #7
 1094 05fc 002B     		cmp	r3, #0
 1095 05fe 1AD0     		beq	.L56
 1096 0600 063C     		sub	r4, r4, #6
 1097 0602 3BD4     		bmi	.L50
 1098 0604 4A1C     		add	r2, r1, #1
 1099              	.LVL170:
 1100 0606 1378     		ldrb	r3, [r2]
 1101 0608 062B     		cmp	r3, #6
 1102 060a 37D1     		bne	.L50
 1103 060c 0B78     		ldrb	r3, [r1]
 1104 060e 052B     		cmp	r3, #5
 1105 0610 34D1     		bne	.L50
 1106              	.LVL171:
 1107 0612 0132     		add	r2, r2, #1
 1108              	.LVL172:
 1109 0614 1178     		ldrb	r1, [r2]
 1110              	.LVL173:
 1111 0616 0132     		add	r2, r2, #1
 1112              	.LVL174:
 1113 0618 0902     		lsl	r1, r1, #8
 1114              	.LVL175:
 1115 061a 1378     		ldrb	r3, [r2]
 1116 061c 0B43     		orr	r3, r3, r1
 1117              	.LVL176:
 1118 061e 0132     		add	r2, r2, #1
 1119              	.LVL177:
 1120 0620 1B02     		lsl	r3, r3, #8
 1121              	.LVL178:
 1122 0622 1178     		ldrb	r1, [r2]
 1123 0624 0B43     		orr	r3, r3, r1
 1124              	.LVL179:
 1125 0626 511C     		add	r1, r2, #1
 1126              	.LVL180:
 1127 0628 1B02     		lsl	r3, r3, #8
 1128              	.LVL181:
 1129 062a 0A78     		ldrb	r2, [r1]
 1130 062c 1343     		orr	r3, r3, r2
 1131              	.LVL182:
 1132 062e C268     		ldr	r2, [r0, #12]
 1133 0630 9A42     		cmp	r2, r3
 1134 0632 23D1     		bne	.L50
 1135 0634 0131     		add	r1, r1, #1
 1136              	.LVL183:
 1137              	.L56:
 1138              		.loc 1 703 0
 1139 0636 4378     		ldrb	r3, [r0, #1]
 1140 0638 DB07     		lsl	r3, r3, #31
 1141 063a DB0F     		lsr	r3, r3, #31
 1142 063c 1B06     		lsl	r3, r3, #24
 1143 063e 002B     		cmp	r3, #0
 1144 0640 09D0     		beq	.L57
 1145 0642 023C     		sub	r4, r4, #2
 1146 0644 1AD4     		bmi	.L50
 1147 0646 4D1C     		add	r5, r1, #1
 1148              	.LVL184:
 1149 0648 2B78     		ldrb	r3, [r5]
 1150 064a 022B     		cmp	r3, #2
 1151 064c 16D1     		bne	.L50
 1152 064e 0B78     		ldrb	r3, [r1]
 1153 0650 072B     		cmp	r3, #7
 1154 0652 13D1     		bne	.L50
 1155              	.LVL185:
 1156 0654 691C     		add	r1, r5, #1
 1157              	.L57:
 1158              		.loc 1 704 0
 1159 0656 4378     		ldrb	r3, [r0, #1]
 1160 0658 9A07     		lsl	r2, r3, #30
 1161 065a 07D5     		bpl	.L58
 1162 065c 023C     		sub	r4, r4, #2
 1163 065e 0DD4     		bmi	.L50
 1164 0660 4B78     		ldrb	r3, [r1, #1]
 1165 0662 022B     		cmp	r3, #2
 1166 0664 0AD1     		bne	.L50
 1167 0666 0B78     		ldrb	r3, [r1]
 1168 0668 082B     		cmp	r3, #8
 1169 066a 07D1     		bne	.L50
 1170              	.L58:
 1171              		.loc 1 709 0
 1172 066c 002C     		cmp	r4, #0
 1173 066e 05D1     		bne	.L50
 1174              		.loc 1 712 0
 1175 0670 0A49     		ldr	r1, .L61+16
 1176              	.LVL186:
 1177 0672 0520     		mov	r0, #5
 1178              	.LVL187:
 1179 0674 FFF7FEFF 		bl	ppp_trace
 1180 0678 0120     		mov	r0, #1
 1181 067a 04E0     		b	.L59
 1182              	.LVL188:
 1183              	.L50:
 1184              		.loc 1 715 0
 1185 067c 0849     		ldr	r1, .L61+20
 1186              	.LVL189:
 1187 067e 0320     		mov	r0, #3
 1188              	.LVL190:
 1189 0680 FFF7FEFF 		bl	ppp_trace
 1190 0684 0020     		mov	r0, #0
 1191              	.L59:
 1192              		.loc 1 717 0
 1193              		@ sp needed for prologue
 1194              	.LVL191:
 1195              	.LVL192:
 1196 0686 30BC     		pop	{r4, r5}
 1197 0688 02BC     		pop	{r1}
 1198 068a 0847     		bx	r1
 1199              	.L62:
 1200              		.align	2
 1201              	.L61:
 1202 068c 00000000 		.word	lcp_gotoptions
 1203 0690 23C20000 		.word	49699
 1204 0694 23C00000 		.word	49187
 1205 0698 25C00000 		.word	49189
 1206 069c FC000000 		.word	.LC17
 1207 06a0 0C010000 		.word	.LC19
 1208              	.LFE303:
 1210              		.section	.rodata.str1.4
 1211 0129 000000   		.align	2
 1212              	.LC22:
 1213 012c 6C63705F 		.ascii	"lcp_addci: INT opt=%d %X\012\000"
 1213      61646463 
 1213      693A2049 
 1213      4E54206F 
 1213      70743D25 
 1214 0146 0000     		.align	2
 1215              	.LC24:
 1216 0148 6C63705F 		.ascii	"lcp_addci: L opt=%d %lX\012\000"
 1216      61646463 
 1216      693A204C 
 1216      206F7074 
 1216      3D256420 
 1217 0161 000000   		.align	2
 1218              	.LC26:
 1219 0164 6C63705F 		.ascii	"lcp_addci: CHAP opt=%d %X\012\000"
 1219      61646463 
 1219      693A2043 
 1219      48415020 
 1219      6F70743D 
 1220 017f 00       		.align	2
 1221              	.LC28:
 1222 0180 6C63705F 		.ascii	"lcp_addci: LQR opt=%d %lX\012\000"
 1222      61646463 
 1222      693A204C 
 1222      5152206F 
 1222      70743D25 
 1223 019b 00       		.align	2
 1224              	.LC30:
 1225 019c 6C63705F 		.ascii	"lcp_addci: CHAR opt=%d %X '%z'\012\000"
 1225      61646463 
 1225      693A2043 
 1225      48415220 
 1225      6F70743D 
 1226              		.align	2
 1227              	.LC32:
 1228 01bc 6C63705F 		.ascii	"lcp_addci: opt=%d\012\000"
 1228      61646463 
 1228      693A206F 
 1228      70743D25 
 1228      640A00
 1229 01cf 00       		.align	2
 1230              	.LC34:
 1231 01d0 42756720 		.ascii	"Bug in lcp_addci: wrong length\012\000"
 1231      696E206C 
 1231      63705F61 
 1231      64646369 
 1231      3A207772 
 1232              		.text
 1233              		.align	2
 1234              		.code	16
 1235              		.thumb_func
 1237              	lcp_addci:
 1238              	.LFB302:
 1239              		.loc 1 534 0
 1240 06a4 F0B5     		push	{r4, r5, r6, r7, lr}
 1241              	.LCFI5:
 1242 06a6 4746     		mov	r7, r8
 1243 06a8 80B4     		push	{r7}
 1244              	.LCFI6:
 1245              	.LVL193:
 1246 06aa 81B0     		sub	sp, sp, #4
 1247              	.LCFI7:
 1248 06ac 0F1C     		mov	r7, r1
 1249 06ae 9046     		mov	r8, r2
 1250              		.loc 1 535 0
 1251 06b0 0268     		ldr	r2, [r0]
 1252              	.LVL194:
 1253 06b2 5300     		lsl	r3, r2, #1
 1254 06b4 9B18     		add	r3, r3, r2
 1255 06b6 DB00     		lsl	r3, r3, #3
 1256 06b8 774A     		ldr	r2, .L76
 1257 06ba D618     		add	r6, r2, r3
 1258              	.LVL195:
 1259              		.loc 1 582 0
 1260 06bc 3378     		ldrb	r3, [r6]
 1261 06be 1907     		lsl	r1, r3, #28
 1262 06c0 18D5     		bpl	.L64
 1263              	.LVL196:
 1264 06c2 7488     		ldrh	r4, [r6, #2]
 1265 06c4 9423     		mov	r3, #148
 1266 06c6 5B00     		lsl	r3, r3, #1
 1267 06c8 9C42     		cmp	r4, r3
 1268 06ca 13D0     		beq	.L64
 1269 06cc 7349     		ldr	r1, .L76+4
 1270 06ce 0520     		mov	r0, #5
 1271              	.LVL197:
 1272 06d0 0122     		mov	r2, #1
 1273 06d2 231C     		mov	r3, r4
 1274 06d4 FFF7FEFF 		bl	ppp_trace
 1275 06d8 0123     		mov	r3, #1
 1276 06da 3B70     		strb	r3, [r7]
 1277 06dc 7A1C     		add	r2, r7, #1
 1278              	.LVL198:
 1279 06de 0423     		mov	r3, #4
 1280 06e0 1370     		strb	r3, [r2]
 1281 06e2 0132     		add	r2, r2, #1
 1282              	.LVL199:
 1283 06e4 7388     		ldrh	r3, [r6, #2]
 1284 06e6 1B0A     		lsr	r3, r3, #8
 1285 06e8 1370     		strb	r3, [r2]
 1286 06ea 0132     		add	r2, r2, #1
 1287              	.LVL200:
 1288 06ec 7388     		ldrh	r3, [r6, #2]
 1289 06ee 1370     		strb	r3, [r2]
 1290 06f0 551C     		add	r5, r2, #1
 1291              	.LVL201:
 1292 06f2 00E0     		b	.L65
 1293              	.LVL202:
 1294              	.L64:
 1295 06f4 3D1C     		mov	r5, r7
 1296              	.LVL203:
 1297              	.L65:
 1298              		.loc 1 583 0
 1299 06f6 3378     		ldrb	r3, [r6]
 1300 06f8 DA06     		lsl	r2, r3, #27
 1301 06fa 1AD5     		bpl	.L66
 1302 06fc B368     		ldr	r3, [r6, #8]
 1303 06fe 591C     		add	r1, r3, #1
 1304 0700 17D0     		beq	.L66
 1305 0702 6749     		ldr	r1, .L76+8
 1306 0704 0520     		mov	r0, #5
 1307              	.LVL204:
 1308 0706 0222     		mov	r2, #2
 1309 0708 FFF7FEFF 		bl	ppp_trace
 1310 070c 0223     		mov	r3, #2
 1311 070e 2B70     		strb	r3, [r5]
 1312 0710 6A1C     		add	r2, r5, #1
 1313              	.LVL205:
 1314 0712 0623     		mov	r3, #6
 1315 0714 1370     		strb	r3, [r2]
 1316 0716 0132     		add	r2, r2, #1
 1317              	.LVL206:
 1318 0718 F37A     		ldrb	r3, [r6, #11]
 1319 071a 1370     		strb	r3, [r2]
 1320 071c 0132     		add	r2, r2, #1
 1321              	.LVL207:
 1322 071e 7389     		ldrh	r3, [r6, #10]
 1323 0720 1370     		strb	r3, [r2]
 1324 0722 0132     		add	r2, r2, #1
 1325              	.LVL208:
 1326 0724 B368     		ldr	r3, [r6, #8]
 1327 0726 1B0A     		lsr	r3, r3, #8
 1328 0728 1370     		strb	r3, [r2]
 1329 072a 0132     		add	r2, r2, #1
 1330              	.LVL209:
 1331 072c B368     		ldr	r3, [r6, #8]
 1332 072e 1370     		strb	r3, [r2]
 1333 0730 551C     		add	r5, r2, #1
 1334              	.LVL210:
 1335              	.L66:
 1336              		.loc 1 584 0
 1337 0732 3378     		ldrb	r3, [r6]
 1338 0734 5A06     		lsl	r2, r3, #25
 1339 0736 18D5     		bpl	.L67
 1340 0738 5A49     		ldr	r1, .L76+12
 1341 073a 0520     		mov	r0, #5
 1342              	.LVL211:
 1343 073c 0322     		mov	r2, #3
 1344 073e 5A4B     		ldr	r3, .L76+16
 1345 0740 FFF7FEFF 		bl	ppp_trace
 1346 0744 0323     		mov	r3, #3
 1347 0746 2B70     		strb	r3, [r5]
 1348 0748 6A1C     		add	r2, r5, #1
 1349              	.LVL212:
 1350 074a 0523     		mov	r3, #5
 1351 074c 1370     		strb	r3, [r2]
 1352 074e 0132     		add	r2, r2, #1
 1353              	.LVL213:
 1354 0750 3E23     		mov	r3, #62
 1355 0752 5B42     		neg	r3, r3
 1356 0754 1370     		strb	r3, [r2]
 1357 0756 0132     		add	r2, r2, #1
 1358              	.LVL214:
 1359 0758 2323     		mov	r3, #35
 1360 075a 1370     		strb	r3, [r2]
 1361 075c 0132     		add	r2, r2, #1
 1362              	.LVL215:
 1363 075e 3379     		ldrb	r3, [r6, #4]
 1364 0760 1370     		strb	r3, [r2]
 1365 0762 551C     		add	r5, r2, #1
 1366              	.LVL216:
 1367              		.loc 1 585 0
 1368 0764 3378     		ldrb	r3, [r6]
 1369 0766 5906     		lsl	r1, r3, #25
 1370 0768 15D4     		bmi	.L68
 1371              	.LVL217:
 1372              	.L67:
 1373 076a 3378     		ldrb	r3, [r6]
 1374 076c 9A06     		lsl	r2, r3, #26
 1375 076e 12D5     		bpl	.L68
 1376 0770 4A49     		ldr	r1, .L76+4
 1377 0772 0520     		mov	r0, #5
 1378              	.LVL218:
 1379 0774 0322     		mov	r2, #3
 1380 0776 4D4B     		ldr	r3, .L76+20
 1381 0778 FFF7FEFF 		bl	ppp_trace
 1382 077c 0323     		mov	r3, #3
 1383 077e 2B70     		strb	r3, [r5]
 1384 0780 6A1C     		add	r2, r5, #1
 1385              	.LVL219:
 1386 0782 0423     		mov	r3, #4
 1387 0784 1370     		strb	r3, [r2]
 1388 0786 0132     		add	r2, r2, #1
 1389              	.LVL220:
 1390 0788 4023     		mov	r3, #64
 1391 078a 5B42     		neg	r3, r3
 1392 078c 1370     		strb	r3, [r2]
 1393 078e 0132     		add	r2, r2, #1
 1394              	.LVL221:
 1395 0790 2323     		mov	r3, #35
 1396 0792 1370     		strb	r3, [r2]
 1397 0794 551C     		add	r5, r2, #1
 1398              	.LVL222:
 1399              	.L68:
 1400              		.loc 1 586 0
 1401 0796 7378     		ldrb	r3, [r6, #1]
 1402 0798 5907     		lsl	r1, r3, #29
 1403 079a 1FD5     		bpl	.L69
 1404 079c 4449     		ldr	r1, .L76+24
 1405 079e 7369     		ldr	r3, [r6, #20]
 1406 07a0 0520     		mov	r0, #5
 1407              	.LVL223:
 1408 07a2 0422     		mov	r2, #4
 1409 07a4 FFF7FEFF 		bl	ppp_trace
 1410 07a8 0423     		mov	r3, #4
 1411 07aa 2B70     		strb	r3, [r5]
 1412 07ac 6A1C     		add	r2, r5, #1
 1413              	.LVL224:
 1414 07ae 0823     		mov	r3, #8
 1415 07b0 1370     		strb	r3, [r2]
 1416 07b2 0132     		add	r2, r2, #1
 1417              	.LVL225:
 1418 07b4 4023     		mov	r3, #64
 1419 07b6 5B42     		neg	r3, r3
 1420 07b8 1370     		strb	r3, [r2]
 1421 07ba 0132     		add	r2, r2, #1
 1422              	.LVL226:
 1423 07bc 2523     		mov	r3, #37
 1424 07be 1370     		strb	r3, [r2]
 1425 07c0 0132     		add	r2, r2, #1
 1426              	.LVL227:
 1427 07c2 F37D     		ldrb	r3, [r6, #23]
 1428 07c4 1370     		strb	r3, [r2]
 1429 07c6 0132     		add	r2, r2, #1
 1430              	.LVL228:
 1431 07c8 F38A     		ldrh	r3, [r6, #22]
 1432 07ca 1370     		strb	r3, [r2]
 1433 07cc 0132     		add	r2, r2, #1
 1434              	.LVL229:
 1435 07ce 7369     		ldr	r3, [r6, #20]
 1436 07d0 1B0A     		lsr	r3, r3, #8
 1437 07d2 1370     		strb	r3, [r2]
 1438 07d4 0132     		add	r2, r2, #1
 1439              	.LVL230:
 1440 07d6 7369     		ldr	r3, [r6, #20]
 1441 07d8 1370     		strb	r3, [r2]
 1442 07da 551C     		add	r5, r2, #1
 1443              	.LVL231:
 1444              	.L69:
 1445              		.loc 1 587 0
 1446 07dc 7378     		ldrb	r3, [r6, #1]
 1447 07de 1A07     		lsl	r2, r3, #28
 1448 07e0 0FD5     		bpl	.L70
 1449 07e2 3449     		ldr	r1, .L76+28
 1450 07e4 0624     		mov	r4, #6
 1451 07e6 0094     		str	r4, [sp]
 1452 07e8 0520     		mov	r0, #5
 1453              	.LVL232:
 1454 07ea 0D22     		mov	r2, #13
 1455 07ec 0623     		mov	r3, #6
 1456 07ee FFF7FEFF 		bl	ppp_trace
 1457 07f2 0D23     		mov	r3, #13
 1458 07f4 2B70     		strb	r3, [r5]
 1459 07f6 6B1C     		add	r3, r5, #1
 1460              	.LVL233:
 1461 07f8 0322     		mov	r2, #3
 1462 07fa 1A70     		strb	r2, [r3]
 1463 07fc 0133     		add	r3, r3, #1
 1464              	.LVL234:
 1465 07fe 1C70     		strb	r4, [r3]
 1466 0800 5D1C     		add	r5, r3, #1
 1467              	.LVL235:
 1468              	.L70:
 1469              		.loc 1 588 0
 1470 0802 3378     		ldrb	r3, [r6]
 1471 0804 DB09     		lsr	r3, r3, #7
 1472 0806 002B     		cmp	r3, #0
 1473 0808 18D0     		beq	.L71
 1474 080a 2549     		ldr	r1, .L76+8
 1475 080c F368     		ldr	r3, [r6, #12]
 1476 080e 0520     		mov	r0, #5
 1477              	.LVL236:
 1478 0810 0522     		mov	r2, #5
 1479 0812 FFF7FEFF 		bl	ppp_trace
 1480 0816 0523     		mov	r3, #5
 1481 0818 2B70     		strb	r3, [r5]
 1482 081a 6A1C     		add	r2, r5, #1
 1483              	.LVL237:
 1484 081c 0623     		mov	r3, #6
 1485 081e 1370     		strb	r3, [r2]
 1486 0820 0132     		add	r2, r2, #1
 1487              	.LVL238:
 1488 0822 F37B     		ldrb	r3, [r6, #15]
 1489 0824 1370     		strb	r3, [r2]
 1490 0826 0132     		add	r2, r2, #1
 1491              	.LVL239:
 1492 0828 F389     		ldrh	r3, [r6, #14]
 1493 082a 1370     		strb	r3, [r2]
 1494 082c 0132     		add	r2, r2, #1
 1495              	.LVL240:
 1496 082e F368     		ldr	r3, [r6, #12]
 1497 0830 1B0A     		lsr	r3, r3, #8
 1498 0832 1370     		strb	r3, [r2]
 1499 0834 0132     		add	r2, r2, #1
 1500              	.LVL241:
 1501 0836 F368     		ldr	r3, [r6, #12]
 1502 0838 1370     		strb	r3, [r2]
 1503 083a 551C     		add	r5, r2, #1
 1504              	.LVL242:
 1505              	.L71:
 1506              		.loc 1 589 0
 1507 083c 7378     		ldrb	r3, [r6, #1]
 1508 083e DB07     		lsl	r3, r3, #31
 1509 0840 DB0F     		lsr	r3, r3, #31
 1510 0842 1B06     		lsl	r3, r3, #24
 1511 0844 002B     		cmp	r3, #0
 1512 0846 0AD0     		beq	.L72
 1513 0848 1B49     		ldr	r1, .L76+32
 1514 084a 0520     		mov	r0, #5
 1515              	.LVL243:
 1516 084c 0722     		mov	r2, #7
 1517 084e FFF7FEFF 		bl	ppp_trace
 1518 0852 0723     		mov	r3, #7
 1519 0854 2B70     		strb	r3, [r5]
 1520 0856 6A1C     		add	r2, r5, #1
 1521              	.LVL244:
 1522 0858 0223     		mov	r3, #2
 1523 085a 1370     		strb	r3, [r2]
 1524 085c 551C     		add	r5, r2, #1
 1525              	.LVL245:
 1526              	.L72:
 1527              		.loc 1 590 0
 1528 085e 7378     		ldrb	r3, [r6, #1]
 1529 0860 9907     		lsl	r1, r3, #30
 1530 0862 0AD5     		bpl	.L73
 1531 0864 1449     		ldr	r1, .L76+32
 1532 0866 0520     		mov	r0, #5
 1533              	.LVL246:
 1534 0868 0822     		mov	r2, #8
 1535 086a FFF7FEFF 		bl	ppp_trace
 1536 086e 0823     		mov	r3, #8
 1537 0870 2B70     		strb	r3, [r5]
 1538 0872 6A1C     		add	r2, r5, #1
 1539              	.LVL247:
 1540 0874 0223     		mov	r3, #2
 1541 0876 1370     		strb	r3, [r2]
 1542 0878 551C     		add	r5, r2, #1
 1543              	.LVL248:
 1544              	.L73:
 1545              		.loc 1 592 0
 1546 087a EA1B     		sub	r2, r5, r7
 1547 087c 4146     		mov	r1, r8
 1548 087e 0B68     		ldr	r3, [r1]
 1549 0880 9A42     		cmp	r2, r3
 1550 0882 03D0     		beq	.L75
 1551              	.LVL249:
 1552              		.loc 1 594 0
 1553 0884 0D49     		ldr	r1, .L76+36
 1554 0886 0120     		mov	r0, #1
 1555              	.LVL250:
 1556 0888 FFF7FEFF 		bl	ppp_trace
 1557              	.LVL251:
 1558              	.L75:
 1559              		.loc 1 596 0
 1560 088c 01B0     		add	sp, sp, #4
 1561              		@ sp needed for prologue
 1562              	.LVL252:
 1563              	.LVL253:
 1564              	.LVL254:
 1565 088e 04BC     		pop	{r2}
 1566 0890 9046     		mov	r8, r2
 1567 0892 F0BC     		pop	{r4, r5, r6, r7}
 1568 0894 01BC     		pop	{r0}
 1569 0896 0047     		bx	r0
 1570              	.L77:
 1571              		.align	2
 1572              	.L76:
 1573 0898 00000000 		.word	lcp_gotoptions
 1574 089c 2C010000 		.word	.LC22
 1575 08a0 48010000 		.word	.LC24
 1576 08a4 64010000 		.word	.LC26
 1577 08a8 23C20000 		.word	49699
 1578 08ac 23C00000 		.word	49187
 1579 08b0 80010000 		.word	.LC28
 1580 08b4 9C010000 		.word	.LC30
 1581 08b8 BC010000 		.word	.LC32
 1582 08bc D0010000 		.word	.LC34
 1583              	.LFE302:
 1585              		.section	.rodata.str1.4
 1586              		.align	2
 1587              	.LC36:
 1588 01f0 6C63705F 		.ascii	"lcp_protrej: Received Protocol-Reject for LCP!\012\000"
 1588      70726F74 
 1588      72656A3A 
 1588      20526563 
 1588      65697665 
 1589              		.text
 1590              		.align	2
 1591              		.code	16
 1592              		.thumb_func
 1594              	lcp_protrej:
 1595              	.LFB299:
 1596              		.loc 1 476 0
 1597 08c0 10B5     		push	{r4, lr}
 1598              	.LCFI8:
 1599              	.LVL255:
 1600 08c2 041C     		mov	r4, r0
 1601              		.loc 1 481 0
 1602 08c4 0649     		ldr	r1, .L80
 1603 08c6 0320     		mov	r0, #3
 1604              	.LVL256:
 1605 08c8 FFF7FEFF 		bl	ppp_trace
 1606              		.loc 1 482 0
 1607 08cc E300     		lsl	r3, r4, #3
 1608 08ce 1B1B     		sub	r3, r3, r4
 1609 08d0 DB00     		lsl	r3, r3, #3
 1610 08d2 0448     		ldr	r0, .L80+4
 1611 08d4 C018     		add	r0, r0, r3
 1612 08d6 FFF7FEFF 		bl	fsm_protreject
 1613              		.loc 1 483 0
 1614              		@ sp needed for prologue
 1615              	.LVL257:
 1616 08da 10BC     		pop	{r4}
 1617 08dc 01BC     		pop	{r0}
 1618 08de 0047     		bx	r0
 1619              	.L81:
 1620              		.align	2
 1621              	.L80:
 1622 08e0 F0010000 		.word	.LC36
 1623 08e4 0C000000 		.word	lcp_fsm
 1624              	.LFE299:
 1626              		.align	2
 1627              		.code	16
 1628              		.thumb_func
 1630              	lcp_input:
 1631              	.LFB296:
 1632              		.loc 1 383 0
 1633 08e8 00B5     		push	{lr}
 1634              	.LCFI9:
 1635              	.LVL258:
 1636              		.loc 1 386 0
 1637 08ea C300     		lsl	r3, r0, #3
 1638 08ec 1B1A     		sub	r3, r3, r0
 1639 08ee DB00     		lsl	r3, r3, #3
 1640 08f0 0248     		ldr	r0, .L84
 1641              	.LVL259:
 1642 08f2 C018     		add	r0, r0, r3
 1643 08f4 FFF7FEFF 		bl	fsm_input
 1644              	.LVL260:
 1645              		.loc 1 387 0
 1646              		@ sp needed for prologue
 1647 08f8 01BC     		pop	{r0}
 1648 08fa 0047     		bx	r0
 1649              	.L85:
 1650              		.align	2
 1651              	.L84:
 1652 08fc 0C000000 		.word	lcp_fsm
 1653              	.LFE296:
 1655              		.align	2
 1656              		.global	lcp_sprotrej
 1657              		.code	16
 1658              		.thumb_func
 1660              	lcp_sprotrej:
 1661              	.LFB295:
 1662              		.loc 1 364 0
 1663 0900 30B5     		push	{r4, r5, lr}
 1664              	.LCFI10:
 1665              	.LVL261:
 1666 0902 81B0     		sub	sp, sp, #4
 1667              	.LCFI11:
 1668 0904 041C     		mov	r4, r0
 1669 0906 0B1C     		mov	r3, r1
 1670 0908 151C     		mov	r5, r2
 1671              		.loc 1 370 0
 1672 090a 0A48     		ldr	r0, .L88
 1673              	.LVL262:
 1674 090c E200     		lsl	r2, r4, #3
 1675              	.LVL263:
 1676 090e 121B     		sub	r2, r2, r4
 1677 0910 D200     		lsl	r2, r2, #3
 1678 0912 8018     		add	r0, r0, r2
 1679 0914 011C     		mov	r1, r0
 1680              	.LVL264:
 1681 0916 1031     		add	r1, r1, #16
 1682 0918 0A78     		ldrb	r2, [r1]
 1683 091a 0132     		add	r2, r2, #1
 1684 091c 1206     		lsl	r2, r2, #24
 1685 091e 120E     		lsr	r2, r2, #24
 1686 0920 0A70     		strb	r2, [r1]
 1687 0922 0095     		str	r5, [sp]
 1688 0924 0821     		mov	r1, #8
 1689 0926 FFF7FEFF 		bl	fsm_sdata
 1690              	.LVL265:
 1691              		.loc 1 371 0
 1692 092a 01B0     		add	sp, sp, #4
 1693              		@ sp needed for prologue
 1694              	.LVL266:
 1695              	.LVL267:
 1696 092c 30BC     		pop	{r4, r5}
 1697 092e 01BC     		pop	{r0}
 1698 0930 0047     		bx	r0
 1699              	.L89:
 1700 0932 C046     		.align	2
 1701              	.L88:
 1702 0934 0C000000 		.word	lcp_fsm
 1703              	.LFE295:
 1705              		.section	.rodata.str1.4
 1706              		.align	2
 1707              	.LC43:
 1708 0220 6C63705F 		.ascii	"lcp_rprotrej: Rcvd short Protocol-Reject packet!\012"
 1708      7270726F 
 1708      7472656A 
 1708      3A205263 
 1708      76642073 
 1709 0251 00       		.ascii	"\000"
 1710 0252 0000     		.align	2
 1711              	.LC45:
 1712 0254 6C63705F 		.ascii	"lcp_rprotrej: Rcvd Protocol-Reject packet for %x!\012"
 1712      7270726F 
 1712      7472656A 
 1712      3A205263 
 1712      76642050 
 1713 0286 00       		.ascii	"\000"
 1714 0287 00       		.align	2
 1715              	.LC48:
 1716 0288 50726F74 		.ascii	"Protocol-Reject discarded: LCP in state %d\012\000"
 1716      6F636F6C 
 1716      2D52656A 
 1716      65637420 
 1716      64697363 
 1717              		.align	2
 1718              	.LC51:
 1719 02b4 50726F74 		.ascii	"Protocol-Reject for unsupported protocol 0x%x\012\000"
 1719      6F636F6C 
 1719      2D52656A 
 1719      65637420 
 1719      666F7220 
 1720 02e3 00       		.align	2
 1721              	.LC53:
 1722 02e4 6C63703A 		.ascii	"lcp: Echo-Request, Rcvd id %d\012\000"
 1722      20456368 
 1722      6F2D5265 
 1722      71756573 
 1722      742C2052 
 1723 0303 00       		.align	2
 1724              	.LC56:
 1725 0304 6C63703A 		.ascii	"lcp: received short Echo-Reply, length %d\012\000"
 1725      20726563 
 1725      65697665 
 1725      64207368 
 1725      6F727420 
 1726 032f 00       		.align	2
 1727              	.LC58:
 1728 0330 61707065 		.ascii	"appear to have received our own echo-reply!\012\000"
 1728      61722074 
 1728      6F206861 
 1728      76652072 
 1728      65636569 
 1729              		.text
 1730              		.align	2
 1731              		.code	16
 1732              		.thumb_func
 1734              	lcp_extcode:
 1735              	.LFB297:
 1736              		.loc 1 395 0
 1737 0938 F0B5     		push	{r4, r5, r6, r7, lr}
 1738              	.LCFI12:
 1739              	.LVL268:
 1740 093a 81B0     		sub	sp, sp, #4
 1741              	.LCFI13:
 1742 093c 051C     		mov	r5, r0
 1743 093e 1C1C     		mov	r4, r3
 1744 0940 1206     		lsl	r2, r2, #24
 1745              	.LVL269:
 1746 0942 160E     		lsr	r6, r2, #24
 1747              	.LVL270:
 1748              		.loc 1 398 0
 1749 0944 0929     		cmp	r1, #9
 1750 0946 44D0     		beq	.L93
 1751              	.LVL271:
 1752 0948 0929     		cmp	r1, #9
 1753 094a 02DC     		bgt	.L96
 1754 094c 0829     		cmp	r1, #8
 1755 094e 05D1     		bne	.L91
 1756 0950 06E0     		b	.L108
 1757              	.L96:
 1758 0952 0A29     		cmp	r1, #10
 1759 0954 6FD0     		beq	.L94
 1760 0956 0B29     		cmp	r1, #11
 1761 0958 00D1     		bne	.LCB1967
 1762 095a 9FE0     		b	.L95	@long jump
 1763              	.LCB1967:
 1764              	.L91:
 1765 095c 0020     		mov	r0, #0
 1766 095e 9EE0     		b	.L97
 1767              	.LVL272:
 1768              	.L108:
 1769              	.LBB6:
 1770              	.LBB7:
 1771              		.loc 1 439 0
 1772 0960 069B     		ldr	r3, [sp, #24]
 1773 0962 012B     		cmp	r3, #1
 1774 0964 05D8     		bhi	.L98
 1775              	.LVL273:
 1776              		.loc 1 440 0
 1777 0966 5049     		ldr	r1, .L109
 1778              	.LVL274:
 1779 0968 0520     		mov	r0, #5
 1780 096a FFF7FEFF 		bl	ppp_trace
 1781 096e 0120     		mov	r0, #1
 1782 0970 95E0     		b	.L97
 1783              	.LVL275:
 1784              	.L98:
 1785              		.loc 1 444 0
 1786 0972 2378     		ldrb	r3, [r4]
 1787              	.LVL276:
 1788 0974 1B02     		lsl	r3, r3, #8
 1789              	.LVL277:
 1790 0976 6278     		ldrb	r2, [r4, #1]
 1791 0978 1C1C     		mov	r4, r3
 1792              	.LVL278:
 1793 097a 1443     		orr	r4, r4, r2
 1794              	.LVL279:
 1795              		.loc 1 446 0
 1796 097c 261C     		mov	r6, r4
 1797              	.LVL280:
 1798 097e 4B49     		ldr	r1, .L109+4
 1799              	.LVL281:
 1800 0980 0520     		mov	r0, #5
 1801 0982 221C     		mov	r2, r4
 1802 0984 FFF7FEFF 		bl	ppp_trace
 1803              		.loc 1 452 0
 1804 0988 AA68     		ldr	r2, [r5, #8]
 1805 098a 092A     		cmp	r2, #9
 1806 098c 04D1     		bne	.L99
 1807              		.loc 1 460 0
 1808 098e 484B     		ldr	r3, .L109+8
 1809 0990 1968     		ldr	r1, [r3]
 1810              	.LVL282:
 1811 0992 0029     		cmp	r1, #0
 1812 0994 06D1     		bne	.L100
 1813 0996 15E0     		b	.L101
 1814              	.LVL283:
 1815              	.L99:
 1816              		.loc 1 453 0
 1817 0998 4649     		ldr	r1, .L109+12
 1818 099a 0520     		mov	r0, #5
 1819 099c FFF7FEFF 		bl	ppp_trace
 1820 09a0 0120     		mov	r0, #1
 1821 09a2 7CE0     		b	.L97
 1822              	.LVL284:
 1823              	.L100:
 1824 09a4 444A     		ldr	r2, .L109+16
 1825              	.L103:
 1826              		.loc 1 461 0
 1827 09a6 0B88     		ldrh	r3, [r1]
 1828 09a8 A342     		cmp	r3, r4
 1829 09aa 08D1     		bne	.L102
 1830 09ac 0B6A     		ldr	r3, [r1, #32]
 1831 09ae 002B     		cmp	r3, #0
 1832 09b0 05D0     		beq	.L102
 1833              		.loc 1 462 0
 1834 09b2 2868     		ldr	r0, [r5]
 1835 09b4 CB68     		ldr	r3, [r1, #12]
 1836 09b6 01F03DFA 		bl	.L111
 1837              	.LVL285:
 1838 09ba 0120     		mov	r0, #1
 1839 09bc 6FE0     		b	.L97
 1840              	.LVL286:
 1841              	.L102:
 1842              		.loc 1 460 0
 1843 09be 02CA     		ldmia	r2!, {r1}
 1844 09c0 0029     		cmp	r1, #0
 1845 09c2 F0D1     		bne	.L103
 1846              	.L101:
 1847              		.loc 1 467 0
 1848 09c4 3D49     		ldr	r1, .L109+20
 1849              	.LVL287:
 1850 09c6 0320     		mov	r0, #3
 1851 09c8 321C     		mov	r2, r6
 1852 09ca FFF7FEFF 		bl	ppp_trace
 1853 09ce 0120     		mov	r0, #1
 1854 09d0 65E0     		b	.L97
 1855              	.LVL288:
 1856              	.L93:
 1857              	.LBE7:
 1858              	.LBE6:
 1859              		.loc 1 404 0
 1860 09d2 8368     		ldr	r3, [r0, #8]
 1861 09d4 092B     		cmp	r3, #9
 1862 09d6 61D1     		bne	.L95
 1863              	.LVL289:
 1864              		.loc 1 407 0
 1865 09d8 3949     		ldr	r1, .L109+24
 1866              	.LVL290:
 1867 09da 0520     		mov	r0, #5
 1868              	.LVL291:
 1869 09dc 321C     		mov	r2, r6
 1870 09de FFF7FEFF 		bl	ppp_trace
 1871              		.loc 1 409 0
 1872 09e2 3848     		ldr	r0, .L109+28
 1873 09e4 2A68     		ldr	r2, [r5]
 1874 09e6 5300     		lsl	r3, r2, #1
 1875 09e8 9B18     		add	r3, r3, r2
 1876 09ea DB00     		lsl	r3, r3, #3
 1877 09ec C318     		add	r3, r0, r3
 1878 09ee DB7B     		ldrb	r3, [r3, #15]
 1879 09f0 2370     		strb	r3, [r4]
 1880 09f2 611C     		add	r1, r4, #1
 1881              	.LVL292:
 1882 09f4 2A68     		ldr	r2, [r5]
 1883 09f6 5300     		lsl	r3, r2, #1
 1884 09f8 9B18     		add	r3, r3, r2
 1885 09fa DB00     		lsl	r3, r3, #3
 1886 09fc C318     		add	r3, r0, r3
 1887 09fe DB89     		ldrh	r3, [r3, #14]
 1888 0a00 0B70     		strb	r3, [r1]
 1889 0a02 0131     		add	r1, r1, #1
 1890              	.LVL293:
 1891 0a04 2A68     		ldr	r2, [r5]
 1892 0a06 5300     		lsl	r3, r2, #1
 1893 0a08 9B18     		add	r3, r3, r2
 1894 0a0a DB00     		lsl	r3, r3, #3
 1895 0a0c C318     		add	r3, r0, r3
 1896 0a0e DB68     		ldr	r3, [r3, #12]
 1897 0a10 1B0A     		lsr	r3, r3, #8
 1898 0a12 0B70     		strb	r3, [r1]
 1899 0a14 2A68     		ldr	r2, [r5]
 1900 0a16 5300     		lsl	r3, r2, #1
 1901 0a18 9B18     		add	r3, r3, r2
 1902 0a1a DB00     		lsl	r3, r3, #3
 1903 0a1c C018     		add	r0, r0, r3
 1904 0a1e C368     		ldr	r3, [r0, #12]
 1905 0a20 4B70     		strb	r3, [r1, #1]
 1906              		.loc 1 410 0
 1907 0a22 069B     		ldr	r3, [sp, #24]
 1908 0a24 0093     		str	r3, [sp]
 1909 0a26 281C     		mov	r0, r5
 1910 0a28 0A21     		mov	r1, #10
 1911              	.LVL294:
 1912 0a2a 321C     		mov	r2, r6
 1913 0a2c 231C     		mov	r3, r4
 1914 0a2e FFF7FEFF 		bl	fsm_sdata
 1915 0a32 0120     		mov	r0, #1
 1916 0a34 33E0     		b	.L97
 1917              	.LVL295:
 1918              	.L94:
 1919              	.LBB8:
 1920              	.LBB9:
1184:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1185:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1186:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
1187:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_reqci - Check the peer's requested CIs and send appropriate response.
1188:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  *
1189:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * Returns: CONFACK, CONFNAK or CONFREJ and input packet modified
1190:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * appropriately.  If reject_if_disagree is non-zero, doesn't return
1191:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * CONFNAK; returns CONFREJ if it can't return CONFACK.
1192:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
1193:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static int
1194:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_reqci(fsm *f, 
1195:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           u_char *inp,    /* Requested CIs */
1196:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           int *lenp,      /* Length of requested CIs */
1197:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           int reject_if_disagree)
1198:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
1199:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *go = &lcp_gotoptions[f->unit];
1200:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *ho = &lcp_hisoptions[f->unit];
1201:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *ao = &lcp_allowoptions[f->unit];
1202:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u_char *cip, *next;         /* Pointer to current and next CIs */
1203:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   int cilen, citype, cichar;  /* Parsed len, type, char value */
1204:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u_short cishort;            /* Parsed short value */
1205:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u32_t cilong;               /* Parse long value */
1206:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   int rc = CONFACK;           /* Final packet return code */
1207:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   int orc;                    /* Individual option return code */
1208:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u_char *p;                  /* Pointer to next char to parse */
1209:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u_char *rejp;               /* Pointer to next char in reject frame */
1210:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u_char *nakp;               /* Pointer to next char in Nak frame */
1211:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   int l = *lenp;              /* Length left */
1212:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if TRACELCP > 0
1213:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   char traceBuf[80];
1214:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   int traceNdx = 0;
1215:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
1216:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1217:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
1218:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Reset all his options.
1219:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
1220:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   BZERO(ho, sizeof(*ho));
1221:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1222:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
1223:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Process all his options.
1224:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
1225:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   next = inp;
1226:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   nakp = nak_buffer;
1227:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   rejp = inp;
1228:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   while (l) {
1229:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     orc = CONFACK;      /* Assume success */
1230:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     cip = p = next;     /* Remember begining of CI */
1231:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (l < 2 ||        /* Not enough data for CI header or */
1232:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         p[1] < 2 ||     /*  CI length too small or */
1233:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         p[1] > l) {     /*  CI length too big? */
1234:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       LCPDEBUG((LOG_WARNING, "lcp_reqci: bad CI length!\n"));
1235:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       orc = CONFREJ;    /* Reject bad CI */
1236:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       cilen = l;        /* Reject till end of packet */
1237:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       l = 0;            /* Don't loop again */
1238:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       citype = 0;
1239:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       goto endswitch;
1240:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     }
1241:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(citype, p); /* Parse CI type */
1242:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(cilen, p);  /* Parse CI length */
1243:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     l -= cilen;         /* Adjust remaining length */
1244:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     next += cilen;      /* Step to next CI */
1245:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1246:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     switch (citype) {   /* Check CI type */
1247:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       case CI_MRU:
1248:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (!ao->neg_mru) {    /* Allow option? */
1249:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LCPDEBUG((LOG_INFO, "lcp_reqci: Reject MRU - not allowed\n"));
1250:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           orc = CONFREJ;    /* Reject CI */
1251:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1252:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         } else if (cilen != CILEN_SHORT) {  /* Check CI length */
1253:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LCPDEBUG((LOG_INFO, "lcp_reqci: Reject MRU - bad length\n"));
1254:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           orc = CONFREJ;    /* Reject CI */
1255:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1256:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1257:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         GETSHORT(cishort, p);  /* Parse MRU */
1258:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1259:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         /*
1260:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * He must be able to receive at least our minimum.
1261:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * No need to check a maximum.  If he sends a large number,
1262:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * we'll just ignore it.
1263:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          */
1264:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (cishort < PPP_MINMRU) {
1265:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LCPDEBUG((LOG_INFO, "lcp_reqci: Nak - MRU too small\n"));
1266:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           orc = CONFNAK;    /* Nak CI */
1267:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTCHAR(CI_MRU, nakp);
1268:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTCHAR(CILEN_SHORT, nakp);
1269:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTSHORT(PPP_MINMRU, nakp);  /* Give him a hint */
1270:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1271:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1272:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         ho->neg_mru = 1;    /* Remember he sent MRU */
1273:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         ho->mru = cishort;    /* And remember value */
1274:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if TRACELCP > 0
1275:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         snprintf(&traceBuf[traceNdx], sizeof(traceBuf), " MRU %d", cishort);
1276:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         traceNdx = strlen(traceBuf);
1277:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
1278:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
1279:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1280:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       case CI_ASYNCMAP:
1281:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (!ao->neg_asyncmap) {
1282:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LCPDEBUG((LOG_INFO, "lcp_reqci: Reject ASYNCMAP not allowed\n"));
1283:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           orc = CONFREJ;
1284:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1285:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         } else if (cilen != CILEN_LONG) {
1286:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LCPDEBUG((LOG_INFO, "lcp_reqci: Reject ASYNCMAP bad length\n"));
1287:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           orc = CONFREJ;
1288:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1289:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1290:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         GETLONG(cilong, p);
1291:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         
1292:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         /*
1293:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * Asyncmap must have set at least the bits
1294:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * which are set in lcp_allowoptions[unit].asyncmap.
1295:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          */
1296:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if ((ao->asyncmap & ~cilong) != 0) {
1297:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LCPDEBUG((LOG_INFO, "lcp_reqci: Nak ASYNCMAP %lX missing %lX\n", 
1298:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                     cilong, ao->asyncmap));
1299:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           orc = CONFNAK;
1300:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTCHAR(CI_ASYNCMAP, nakp);
1301:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTCHAR(CILEN_LONG, nakp);
1302:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTLONG(ao->asyncmap | cilong, nakp);
1303:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1304:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1305:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         ho->neg_asyncmap = 1;
1306:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         ho->asyncmap = cilong;
1307:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if TRACELCP > 0
1308:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         snprintf(&traceBuf[traceNdx], sizeof(traceBuf), " ASYNCMAP=%lX", cilong);
1309:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         traceNdx = strlen(traceBuf);
1310:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
1311:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
1312:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1313:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       case CI_AUTHTYPE:
1314:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (cilen < CILEN_SHORT) {
1315:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LCPDEBUG((LOG_INFO, "lcp_reqci: Reject AUTHTYPE missing arg\n"));
1316:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           orc = CONFREJ;
1317:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1318:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         } else if (!(ao->neg_upap || ao->neg_chap)) {
1319:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           /*
1320:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****            * Reject the option if we're not willing to authenticate.
1321:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****            */
1322:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LCPDEBUG((LOG_INFO, "lcp_reqci: Reject AUTHTYPE not allowed\n"));
1323:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           orc = CONFREJ;
1324:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1325:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1326:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         GETSHORT(cishort, p);
1327:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         
1328:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         /*
1329:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * Authtype must be UPAP or CHAP.
1330:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          *
1331:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * Note: if both ao->neg_upap and ao->neg_chap are set,
1332:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * and the peer sends a Configure-Request with two
1333:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * authenticate-protocol requests, one for CHAP and one
1334:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * for UPAP, then we will reject the second request.
1335:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * Whether we end up doing CHAP or UPAP depends then on
1336:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * the ordering of the CIs in the peer's Configure-Request.
1337:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          */
1338:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         
1339:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (cishort == PPP_PAP) {
1340:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           if (ho->neg_chap) {  /* we've already accepted CHAP */
1341:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             LCPDEBUG((LOG_WARNING, "lcp_reqci: Reject AUTHTYPE PAP already accepted\n"));
1342:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             orc = CONFREJ;
1343:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             break;
1344:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           } else if (cilen != CILEN_SHORT) {
1345:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             LCPDEBUG((LOG_WARNING, "lcp_reqci: Reject AUTHTYPE PAP bad len\n"));
1346:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             orc = CONFREJ;
1347:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             break;
1348:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           }
1349:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           if (!ao->neg_upap) {  /* we don't want to do PAP */
1350:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             LCPDEBUG((LOG_WARNING, "lcp_reqci: Nak AUTHTYPE PAP not allowed\n"));
1351:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             orc = CONFNAK;  /* NAK it and suggest CHAP */
1352:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             PUTCHAR(CI_AUTHTYPE, nakp);
1353:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             PUTCHAR(CILEN_CHAP, nakp);
1354:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             PUTSHORT(PPP_CHAP, nakp);
1355:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             PUTCHAR(ao->chap_mdtype, nakp);
1356:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             break;
1357:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           }
1358:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           ho->neg_upap = 1;
1359:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if TRACELCP > 0
1360:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           snprintf(&traceBuf[traceNdx], sizeof(traceBuf), " PAP (%X)", cishort);
1361:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           traceNdx = strlen(traceBuf);
1362:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
1363:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1364:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1365:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (cishort == PPP_CHAP) {
1366:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           if (ho->neg_upap) {  /* we've already accepted PAP */
1367:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             LCPDEBUG((LOG_WARNING, "lcp_reqci: Reject AUTHTYPE CHAP accepted PAP\n"));
1368:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             orc = CONFREJ;
1369:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             break;
1370:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           } else if (cilen != CILEN_CHAP) {
1371:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             LCPDEBUG((LOG_WARNING, "lcp_reqci: Reject AUTHTYPE CHAP bad len\n"));
1372:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             orc = CONFREJ;
1373:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             break;
1374:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           }
1375:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           if (!ao->neg_chap) {  /* we don't want to do CHAP */
1376:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             LCPDEBUG((LOG_WARNING, "lcp_reqci: Nak AUTHTYPE CHAP not allowed\n"));
1377:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             orc = CONFNAK;  /* NAK it and suggest PAP */
1378:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             PUTCHAR(CI_AUTHTYPE, nakp);
1379:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             PUTCHAR(CILEN_SHORT, nakp);
1380:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             PUTSHORT(PPP_PAP, nakp);
1381:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             break;
1382:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           }
1383:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           GETCHAR(cichar, p);  /* get digest type*/
1384:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           if (cichar != CHAP_DIGEST_MD5
1385:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #ifdef CHAPMS
1386:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               && cichar != CHAP_MICROSOFT
1387:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
1388:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           ) {
1389:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             LCPDEBUG((LOG_WARNING, "lcp_reqci: Nak AUTHTYPE CHAP digest=%d\n", cichar));
1390:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             orc = CONFNAK;
1391:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             PUTCHAR(CI_AUTHTYPE, nakp);
1392:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             PUTCHAR(CILEN_CHAP, nakp);
1393:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             PUTSHORT(PPP_CHAP, nakp);
1394:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             PUTCHAR(ao->chap_mdtype, nakp);
1395:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             break;
1396:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           }
1397:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if TRACELCP > 0
1398:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           snprintf(&traceBuf[traceNdx], sizeof(traceBuf), " CHAP %X,%d", cishort, cichar);
1399:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           traceNdx = strlen(traceBuf);
1400:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
1401:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           ho->chap_mdtype = cichar; /* save md type */
1402:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           ho->neg_chap = 1;
1403:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1404:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1405:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         
1406:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         /*
1407:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * We don't recognize the protocol they're asking for.
1408:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * Nak it with something we're willing to do.
1409:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * (At this point we know ao->neg_upap || ao->neg_chap.)
1410:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          */
1411:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         orc = CONFNAK;
1412:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         PUTCHAR(CI_AUTHTYPE, nakp);
1413:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (ao->neg_chap) {
1414:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LCPDEBUG((LOG_WARNING, "lcp_reqci: Nak AUTHTYPE %d req CHAP\n", cishort));
1415:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTCHAR(CILEN_CHAP, nakp);
1416:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTSHORT(PPP_CHAP, nakp);
1417:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTCHAR(ao->chap_mdtype, nakp);
1418:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         } else {
1419:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           LCPDEBUG((LOG_WARNING, "lcp_reqci: Nak AUTHTYPE %d req PAP\n", cishort));
1420:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTCHAR(CILEN_SHORT, nakp);
1421:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTSHORT(PPP_PAP, nakp);
1422:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1423:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
1424:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       
1425:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       case CI_QUALITY:
1426:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         GETSHORT(cishort, p);
1427:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         GETLONG(cilong, p);
1428:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if TRACELCP > 0
1429:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         snprintf(&traceBuf[traceNdx], sizeof(traceBuf), " QUALITY (%x %x)", cishort, (unsigned int)
1430:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         traceNdx = strlen(traceBuf);
1431:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
1432:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1433:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (!ao->neg_lqr ||
1434:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             cilen != CILEN_LQR) {
1435:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           orc = CONFREJ;
1436:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1437:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1438:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         
1439:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         /*
1440:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * Check the protocol and the reporting period.
1441:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * XXX When should we Nak this, and what with?
1442:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          */
1443:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (cishort != PPP_LQR) {
1444:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           orc = CONFNAK;
1445:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTCHAR(CI_QUALITY, nakp);
1446:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTCHAR(CILEN_LQR, nakp);
1447:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTSHORT(PPP_LQR, nakp);
1448:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTLONG(ao->lqr_period, nakp);
1449:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1450:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1451:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
1452:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       
1453:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       case CI_MAGICNUMBER:
1454:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (!(ao->neg_magicnumber || go->neg_magicnumber) ||
1455:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             cilen != CILEN_LONG) {
1456:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           orc = CONFREJ;
1457:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1458:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1459:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         GETLONG(cilong, p);
1460:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if TRACELCP > 0
1461:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         snprintf(&traceBuf[traceNdx], sizeof(traceBuf), " MAGICNUMBER (%lX)", cilong);
1462:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         traceNdx = strlen(traceBuf);
1463:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
1464:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1465:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         /*
1466:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          * He must have a different magic number.
1467:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****          */
1468:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (go->neg_magicnumber &&
1469:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             cilong == go->magicnumber) {
1470:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           cilong = magic();  /* Don't put magic() inside macro! */
1471:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           orc = CONFNAK;
1472:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTCHAR(CI_MAGICNUMBER, nakp);
1473:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTCHAR(CILEN_LONG, nakp);
1474:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           PUTLONG(cilong, nakp);
1475:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1476:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1477:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         ho->neg_magicnumber = 1;
1478:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         ho->magicnumber = cilong;
1479:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
1480:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       
1481:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       
1482:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       case CI_PCOMPRESSION:
1483:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if TRACELCP > 0
1484:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         snprintf(&traceBuf[traceNdx], sizeof(traceBuf), " PCOMPRESSION");
1485:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         traceNdx = strlen(traceBuf);
1486:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
1487:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (!ao->neg_pcompression ||
1488:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             cilen != CILEN_VOID) {
1489:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           orc = CONFREJ;
1490:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1491:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1492:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         ho->neg_pcompression = 1;
1493:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
1494:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       
1495:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       case CI_ACCOMPRESSION:
1496:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if TRACELCP > 0
1497:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         snprintf(&traceBuf[traceNdx], sizeof(traceBuf), " ACCOMPRESSION");
1498:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         traceNdx = strlen(traceBuf);
1499:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
1500:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (!ao->neg_accompression ||
1501:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             cilen != CILEN_VOID) {
1502:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           orc = CONFREJ;
1503:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1504:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1505:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         ho->neg_accompression = 1;
1506:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
1507:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       
1508:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       case CI_MRRU:
1509:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if TRACELCP > 0
1510:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         snprintf(&traceBuf[traceNdx], sizeof(traceBuf), " CI_MRRU");
1511:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         traceNdx = strlen(traceBuf);
1512:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
1513:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         orc = CONFREJ;
1514:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
1515:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       
1516:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       case CI_SSNHF:
1517:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if TRACELCP > 0
1518:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         snprintf(&traceBuf[traceNdx], sizeof(traceBuf), " CI_SSNHF");
1519:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         traceNdx = strlen(traceBuf);
1520:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
1521:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         orc = CONFREJ;
1522:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
1523:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       
1524:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       case CI_EPDISC:
1525:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if TRACELCP > 0
1526:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         snprintf(&traceBuf[traceNdx], sizeof(traceBuf), " CI_EPDISC");
1527:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         traceNdx = strlen(traceBuf);
1528:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
1529:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         orc = CONFREJ;
1530:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
1531:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       
1532:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       default:
1533:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if TRACELCP
1534:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         snprintf(&traceBuf[traceNdx], sizeof(traceBuf), " unknown %d", citype);
1535:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         traceNdx = strlen(traceBuf);
1536:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
1537:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         orc = CONFREJ;
1538:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         break;
1539:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     }
1540:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1541:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   endswitch:
1542:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if TRACELCP
1543:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (traceNdx >= 80 - 32) {
1544:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       LCPDEBUG((LOG_INFO, "lcp_reqci: rcvd%s\n", traceBuf));
1545:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       traceNdx = 0;
1546:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     }
1547:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
1548:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (orc == CONFACK && /* Good CI */
1549:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         rc != CONFACK) {  /*  but prior CI wasnt? */
1550:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       continue;           /* Don't send this one */
1551:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     }
1552:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1553:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (orc == CONFNAK) {     /* Nak this CI? */
1554:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       if (reject_if_disagree  /* Getting fed up with sending NAKs? */
1555:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           && citype != CI_MAGICNUMBER) {
1556:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         orc = CONFREJ;        /* Get tough if so */
1557:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       } else {
1558:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (rc == CONFREJ) {  /* Rejecting prior CI? */
1559:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           continue;           /* Don't send this one */
1560:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1561:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         rc = CONFNAK;
1562:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       }
1563:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     }
1564:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (orc == CONFREJ) {        /* Reject this CI */
1565:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       rc = CONFREJ;
1566:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       if (cip != rejp) {         /* Need to move rejected CI? */
1567:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         BCOPY(cip, rejp, cilen); /* Move it */
1568:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       }
1569:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       INCPTR(cilen, rejp);       /* Update output pointer */
1570:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     }
1571:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1572:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1573:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
1574:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * If we wanted to send additional NAKs (for unsent CIs), the
1575:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * code would go here.  The extra NAKs would go at *nakp.
1576:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * At present there are no cases where we want to ask the
1577:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * peer to negotiate an option.
1578:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
1579:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1580:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   switch (rc) {
1581:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     case CONFACK:
1582:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       *lenp = (int)(next - inp);
1583:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       break;
1584:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     case CONFNAK:
1585:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       /*
1586:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****        * Copy the Nak'd options from the nak_buffer to the caller's buffer.
1587:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****        */
1588:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       *lenp = (int)(nakp - nak_buffer);
1589:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       BCOPY(nak_buffer, inp, *lenp);
1590:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       break;
1591:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     case CONFREJ:
1592:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       *lenp = (int)(rejp - inp);
1593:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       break;
1594:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1595:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1596:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if TRACELCP > 0
1597:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (traceNdx > 0) {
1598:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_INFO, "lcp_reqci: %s\n", traceBuf));
1599:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1600:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
1601:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   LCPDEBUG((LOG_INFO, "lcp_reqci: returning CONF%s.\n", CODENAME(rc)));
1602:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   return (rc);      /* Return final code */
1603:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
1604:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1605:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1606:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
1607:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_up - LCP has come UP.
1608:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
1609:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void
1610:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_up(fsm *f)
1611:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
1612:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *wo = &lcp_wantoptions[f->unit];
1613:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *ho = &lcp_hisoptions[f->unit];
1614:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *go = &lcp_gotoptions[f->unit];
1615:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *ao = &lcp_allowoptions[f->unit];
1616:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1617:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (!go->neg_magicnumber) {
1618:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     go->magicnumber = 0;
1619:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1620:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (!ho->neg_magicnumber) {
1621:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     ho->magicnumber = 0;
1622:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1623:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1624:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
1625:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Set our MTU to the smaller of the MTU we wanted and
1626:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * the MRU our peer wanted.  If we negotiated an MRU,
1627:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * set our MRU to the larger of value we wanted and
1628:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * the value we got in the negotiation.
1629:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
1630:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ppp_send_config(f->unit, LWIP_MIN(ao->mru, (ho->neg_mru? ho->mru: PPP_MRU)),
1631:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                  (ho->neg_asyncmap? ho->asyncmap: 0xffffffffl),
1632:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                   ho->neg_pcompression, ho->neg_accompression);
1633:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
1634:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * If the asyncmap hasn't been negotiated, we really should
1635:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * set the receive asyncmap to ffffffff, but we set it to 0
1636:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * for backwards contemptibility.
1637:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
1638:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ppp_recv_config(f->unit, (go->neg_mru? LWIP_MAX(wo->mru, go->mru): PPP_MRU),
1639:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                  (go->neg_asyncmap? go->asyncmap: 0x00000000),
1640:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                   go->neg_pcompression, go->neg_accompression);
1641:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1642:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (ho->neg_mru) {
1643:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     peer_mru[f->unit] = ho->mru;
1644:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1645:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1646:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_echo_lowerup(f->unit); /* Enable echo messages */
1647:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1648:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   link_established(f->unit);
1649:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
1650:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1651:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1652:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
1653:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_down - LCP has gone DOWN.
1654:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  *
1655:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * Alert other protocols.
1656:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
1657:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void
1658:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_down(fsm *f)
1659:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
1660:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_options *go = &lcp_gotoptions[f->unit];
1661:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1662:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_echo_lowerdown(f->unit);
1663:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1664:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   link_down(f->unit);
1665:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1666:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ppp_send_config(f->unit, PPP_MRU, 0xffffffffl, 0, 0);
1667:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   ppp_recv_config(f->unit, PPP_MRU,
1668:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                   (go->neg_asyncmap? go->asyncmap: 0x00000000),
1669:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                    go->neg_pcompression, go->neg_accompression);
1670:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   peer_mru[f->unit] = PPP_MRU;
1671:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
1672:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1673:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1674:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
1675:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_starting - LCP needs the lower layer up.
1676:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
1677:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void
1678:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_starting(fsm *f)
1679:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
1680:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   link_required(f->unit);
1681:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
1682:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1683:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1684:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
1685:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_finished - LCP has finished with the lower layer.
1686:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
1687:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void
1688:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_finished(fsm *f)
1689:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
1690:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   link_terminated(f->unit);
1691:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
1692:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1693:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1694:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #if 0
1695:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
1696:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * print_string - print a readable representation of a string using
1697:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * printer.
1698:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
1699:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void
1700:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** print_string( char *p, int len, void (*printer) (void *, char *, ...), void *arg)
1701:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
1702:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   int c;
1703:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   
1704:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   printer(arg, "\"");
1705:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   for (; len > 0; --len) {
1706:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     c = *p++;
1707:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (' ' <= c && c <= '~') {
1708:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (c == '\\' || c == '"') {
1709:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           printer(arg, "\\");
1710:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1711:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         printer(arg, "%c", c);
1712:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     } else {
1713:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       switch (c) {
1714:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         case '\n':
1715:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           printer(arg, "\\n");
1716:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1717:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         case '\r':
1718:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           printer(arg, "\\r");
1719:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1720:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         case '\t':
1721:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           printer(arg, "\\t");
1722:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1723:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         default:
1724:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           printer(arg, "\\%.3o", c);
1725:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1726:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     }
1727:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1728:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   printer(arg, "\"");
1729:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
1730:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1731:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1732:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
1733:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_printpkt - print the contents of an LCP packet.
1734:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
1735:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static char *lcp_codenames[] = {
1736:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   "ConfReq", "ConfAck", "ConfNak", "ConfRej",
1737:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   "TermReq", "TermAck", "CodeRej", "ProtRej",
1738:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   "EchoReq", "EchoRep", "DiscReq"
1739:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** };
1740:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1741:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static int
1742:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_printpkt( u_char *p, int plen, void (*printer) (void *, char *, ...), void *arg)
1743:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
1744:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   int code, id, len, olen;
1745:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u_char *pstart, *optend;
1746:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u_short cishort;
1747:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u32_t cilong;
1748:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1749:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (plen < HEADERLEN) {
1750:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     return 0;
1751:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1752:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   pstart = p;
1753:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   GETCHAR(code, p);
1754:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   GETCHAR(id, p);
1755:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   GETSHORT(len, p);
1756:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (len < HEADERLEN || len > plen) {
1757:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     return 0;
1758:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1759:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1760:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (code >= 1 && code <= sizeof(lcp_codenames) / sizeof(char *)) {
1761:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     printer(arg, " %s", lcp_codenames[code-1]);
1762:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   } else {
1763:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     printer(arg, " code=0x%x", code);
1764:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1765:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   printer(arg, " id=0x%x", id);
1766:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   len -= HEADERLEN;
1767:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   switch (code) {
1768:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     case CONFREQ:
1769:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     case CONFACK:
1770:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     case CONFNAK:
1771:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     case CONFREJ:
1772:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       /* print option list */
1773:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       while (len >= 2) {
1774:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         GETCHAR(code, p);
1775:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         GETCHAR(olen, p);
1776:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         p -= 2;
1777:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         if (olen < 2 || olen > len) {
1778:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           break;
1779:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1780:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         printer(arg, " <");
1781:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         len -= olen;
1782:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         optend = p + olen;
1783:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         switch (code) {
1784:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           case CI_MRU:
1785:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             if (olen == CILEN_SHORT) {
1786:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               p += 2;
1787:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               GETSHORT(cishort, p);
1788:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               printer(arg, "mru %d", cishort);
1789:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             }
1790:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             break;
1791:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           case CI_ASYNCMAP:
1792:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             if (olen == CILEN_LONG) {
1793:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               p += 2;
1794:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               GETLONG(cilong, p);
1795:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               printer(arg, "asyncmap 0x%lx", cilong);
1796:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             }
1797:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             break;
1798:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           case CI_AUTHTYPE:
1799:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             if (olen >= CILEN_SHORT) {
1800:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               p += 2;
1801:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               printer(arg, "auth ");
1802:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               GETSHORT(cishort, p);
1803:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               switch (cishort) {
1804:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                 case PPP_PAP:
1805:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                   printer(arg, "pap");
1806:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                   break;
1807:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                 case PPP_CHAP:
1808:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                   printer(arg, "chap");
1809:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                   break;
1810:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                 default:
1811:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                   printer(arg, "0x%x", cishort);
1812:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               }
1813:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             }
1814:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             break;
1815:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           case CI_QUALITY:
1816:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             if (olen >= CILEN_SHORT) {
1817:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               p += 2;
1818:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               printer(arg, "quality ");
1819:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               GETSHORT(cishort, p);
1820:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               switch (cishort) {
1821:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                 case PPP_LQR:
1822:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                   printer(arg, "lqr");
1823:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                   break;
1824:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                 default:
1825:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                   printer(arg, "0x%x", cishort);
1826:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               }
1827:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             }
1828:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             break;
1829:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           case CI_CALLBACK:
1830:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             if (olen >= CILEN_CHAR) {
1831:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               p += 2;
1832:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               printer(arg, "callback ");
1833:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               GETSHORT(cishort, p);
1834:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               switch (cishort) {
1835:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                 case CBCP_OPT:
1836:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                   printer(arg, "CBCP");
1837:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                   break;
1838:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                 default:
1839:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****                   printer(arg, "0x%x", cishort);
1840:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               }
1841:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             }
1842:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             break;
1843:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           case CI_MAGICNUMBER:
1844:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             if (olen == CILEN_LONG) {
1845:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               p += 2;
1846:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               GETLONG(cilong, p);
1847:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               printer(arg, "magic 0x%x", cilong);
1848:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             }
1849:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             break;
1850:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           case CI_PCOMPRESSION:
1851:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             if (olen == CILEN_VOID) {
1852:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               p += 2;
1853:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               printer(arg, "pcomp");
1854:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             }
1855:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             break;
1856:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           case CI_ACCOMPRESSION:
1857:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             if (olen == CILEN_VOID) {
1858:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               p += 2;
1859:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****               printer(arg, "accomp");
1860:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             }
1861:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****             break;
1862:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1863:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         while (p < optend) {
1864:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           GETCHAR(code, p);
1865:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****           printer(arg, " %.2x", code);
1866:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         }
1867:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         printer(arg, ">");
1868:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       }
1869:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       break;
1870:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     
1871:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     case TERMACK:
1872:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     case TERMREQ:
1873:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       if (len > 0 && *p >= ' ' && *p < 0x7f) {
1874:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         printer(arg, " ");
1875:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         print_string((char*)p, len, printer, arg);
1876:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         p += len;
1877:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         len = 0;
1878:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       }
1879:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       break;
1880:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     
1881:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     case ECHOREQ:
1882:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     case ECHOREP:
1883:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     case DISCREQ:
1884:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       if (len >= 4) {
1885:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         GETLONG(cilong, p);
1886:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         printer(arg, " magic=0x%x", cilong);
1887:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         p += 4;
1888:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****         len -= 4;
1889:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       }
1890:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       break;
1891:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1892:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1893:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /* print the rest of the bytes in the packet */
1894:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   for (; len > 0; --len) {
1895:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     GETCHAR(code, p);
1896:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     printer(arg, " %.2x", code);
1897:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1898:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1899:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   return (int)(p - pstart);
1900:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
1901:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** #endif
1902:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1903:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
1904:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * Time to shut down the link because there is nothing out there.
1905:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
1906:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void
1907:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** LcpLinkFailure (fsm *f)
1908:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
1909:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (f->state == LS_OPENED) {
1910:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_INFO, "No response to %d echo-requests\n", lcp_echos_pending));
1911:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_NOTICE, "Serial link appears to be disconnected.\n"));
1912:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     lcp_close(f->unit, "Peer not responding");
1913:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1914:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
1915:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1916:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
1917:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * Timer expired for the LCP echo requests from this process.
1918:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
1919:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void
1920:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** LcpEchoCheck (fsm *f)
1921:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
1922:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   LcpSendEchoRequest (f);
1923:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1924:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
1925:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Start the timer for the next interval.
1926:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
1927:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   LWIP_ASSERT("lcp_echo_timer_running == 0", lcp_echo_timer_running == 0);
1928:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1929:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   TIMEOUT (LcpEchoTimeout, f, lcp_echo_interval);
1930:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_echo_timer_running = 1;
1931:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
1932:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1933:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
1934:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * LcpEchoTimeout - Timer expired on the LCP echo
1935:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
1936:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void
1937:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** LcpEchoTimeout (void *arg)
1938:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
1939:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (lcp_echo_timer_running != 0) {
1940:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     lcp_echo_timer_running = 0;
1941:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LcpEchoCheck ((fsm *) arg);
1942:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1943:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
1944:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1945:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
1946:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * LcpEchoReply - LCP has received a reply to the echo
1947:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
1948:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void
1949:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_received_echo_reply (fsm *f, int id, u_char *inp, int len)
1950:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
1951:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u32_t magic;
1952:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1953:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   LWIP_UNUSED_ARG(id);
1954:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1955:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /* Check the magic number - don't count replies from ourselves. */
1956:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (len < 4) {
 1921              		.loc 1 1956 0
 1922 0a36 069B     		ldr	r3, [sp, #24]
 1923 0a38 032B     		cmp	r3, #3
 1924 0a3a 06DC     		bgt	.L104
 1925              	.LVL296:
1957:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_WARNING, "lcp: received short Echo-Reply, length %d\n", len));
 1926              		.loc 1 1957 0
 1927 0a3c 2249     		ldr	r1, .L109+32
 1928              	.LVL297:
 1929 0a3e 0320     		mov	r0, #3
 1930 0a40 1A1C     		mov	r2, r3
 1931 0a42 FFF7FEFF 		bl	ppp_trace
 1932 0a46 0120     		mov	r0, #1
 1933 0a48 29E0     		b	.L97
 1934              	.LVL298:
 1935              	.L104:
1958:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     return;
1959:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1960:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   GETLONG(magic, inp);
 1936              		.loc 1 1960 0
 1937 0a4a 2778     		ldrb	r7, [r4]
 1938 0a4c 631C     		add	r3, r4, #1
 1939              	.LVL299:
 1940 0a4e 1E78     		ldrb	r6, [r3]
 1941              	.LVL300:
 1942 0a50 0133     		add	r3, r3, #1
 1943              	.LVL301:
 1944 0a52 1C78     		ldrb	r4, [r3]
 1945              	.LVL302:
 1946 0a54 5978     		ldrb	r1, [r3, #1]
 1947              	.LVL303:
1961:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (lcp_gotoptions[f->unit].neg_magicnumber && magic == lcp_gotoptions[f->unit].magicnumber) {
 1948              		.loc 1 1961 0
 1949 0a56 0068     		ldr	r0, [r0]
 1950 0a58 1A4A     		ldr	r2, .L109+28
 1951 0a5a 4300     		lsl	r3, r0, #1
 1952              	.LVL304:
 1953 0a5c 1B18     		add	r3, r3, r0
 1954 0a5e DB00     		lsl	r3, r3, #3
 1955 0a60 D35C     		ldrb	r3, [r2, r3]
 1956 0a62 DB09     		lsr	r3, r3, #7
 1957 0a64 002B     		cmp	r3, #0
 1958 0a66 14D0     		beq	.L105
 1959              		.loc 1 1960 0
 1960 0a68 3B02     		lsl	r3, r7, #8
 1961              	.LVL305:
 1962 0a6a 321C     		mov	r2, r6
 1963              	.LVL306:
 1964 0a6c 1A43     		orr	r2, r2, r3
 1965 0a6e 1202     		lsl	r2, r2, #8
 1966              	.LVL307:
 1967 0a70 2243     		orr	r2, r2, r4
 1968              	.LVL308:
 1969 0a72 1202     		lsl	r2, r2, #8
 1970              	.LVL309:
 1971              		.loc 1 1961 0
 1972 0a74 0A43     		orr	r2, r2, r1
 1973              	.LVL310:
 1974 0a76 1349     		ldr	r1, .L109+28
 1975 0a78 4300     		lsl	r3, r0, #1
 1976 0a7a 1B18     		add	r3, r3, r0
 1977 0a7c DB00     		lsl	r3, r3, #3
 1978 0a7e C918     		add	r1, r1, r3
 1979 0a80 CB68     		ldr	r3, [r1, #12]
 1980 0a82 9A42     		cmp	r2, r3
 1981 0a84 05D1     		bne	.L105
1962:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LCPDEBUG((LOG_WARNING, "appear to have received our own echo-reply!\n"));
 1982              		.loc 1 1962 0
 1983 0a86 1149     		ldr	r1, .L109+36
 1984 0a88 0320     		mov	r0, #3
 1985 0a8a FFF7FEFF 		bl	ppp_trace
 1986 0a8e 0120     		mov	r0, #1
 1987 0a90 05E0     		b	.L97
 1988              	.L105:
1963:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     return;
1964:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1965:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   
1966:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /* Reset the number of outstanding echo frames */
1967:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_echos_pending = 0;
 1989              		.loc 1 1967 0
 1990 0a92 0F4A     		ldr	r2, .L109+40
 1991 0a94 0023     		mov	r3, #0
 1992 0a96 1360     		str	r3, [r2]
 1993 0a98 0120     		mov	r0, #1
 1994 0a9a 00E0     		b	.L97
 1995              	.LVL311:
 1996              	.L95:
 1997 0a9c 0120     		mov	r0, #1
 1998              	.LVL312:
 1999              	.L97:
 2000              	.LBE9:
 2001              	.LBE8:
 2002              		.loc 1 424 0
 2003 0a9e 01B0     		add	sp, sp, #4
 2004              		@ sp needed for prologue
 2005              	.LVL313:
 2006              	.LVL314:
 2007              	.LVL315:
 2008 0aa0 F0BC     		pop	{r4, r5, r6, r7}
 2009 0aa2 02BC     		pop	{r1}
 2010 0aa4 0847     		bx	r1
 2011              	.L110:
 2012 0aa6 C046     		.align	2
 2013              	.L109:
 2014 0aa8 20020000 		.word	.LC43
 2015 0aac 54020000 		.word	.LC45
 2016 0ab0 00000000 		.word	ppp_protocols
 2017 0ab4 88020000 		.word	.LC48
 2018 0ab8 04000000 		.word	ppp_protocols+4
 2019 0abc B4020000 		.word	.LC51
 2020 0ac0 E4020000 		.word	.LC53
 2021 0ac4 00000000 		.word	lcp_gotoptions
 2022 0ac8 04030000 		.word	.LC56
 2023 0acc 30030000 		.word	.LC58
 2024 0ad0 00000000 		.word	lcp_echos_pending
 2025              	.LFE297:
 2027              		.align	2
 2028              		.global	lcp_lowerdown
 2029              		.code	16
 2030              		.thumb_func
 2032              	lcp_lowerdown:
 2033              	.LFB294:
 2034              		.loc 1 355 0
 2035 0ad4 00B5     		push	{lr}
 2036              	.LCFI14:
 2037              	.LVL316:
 2038              		.loc 1 356 0
 2039 0ad6 C300     		lsl	r3, r0, #3
 2040 0ad8 1B1A     		sub	r3, r3, r0
 2041 0ada DB00     		lsl	r3, r3, #3
 2042 0adc 0248     		ldr	r0, .L114
 2043              	.LVL317:
 2044 0ade C018     		add	r0, r0, r3
 2045 0ae0 FFF7FEFF 		bl	fsm_lowerdown
 2046              		.loc 1 357 0
 2047              		@ sp needed for prologue
 2048 0ae4 01BC     		pop	{r0}
 2049 0ae6 0047     		bx	r0
 2050              	.L115:
 2051              		.align	2
 2052              	.L114:
 2053 0ae8 0C000000 		.word	lcp_fsm
 2054              	.LFE294:
 2056              		.section	.rodata.str1.4
 2057 035d 000000   		.align	2
 2058              	.LC66:
 2059 0360 6C63705F 		.ascii	"lcp_lowerup: asyncmap=%X %X %X %X\012\000"
 2059      6C6F7765 
 2059      7275703A 
 2059      20617379 
 2059      6E636D61 
 2060              		.text
 2061              		.align	2
 2062              		.global	lcp_lowerup
 2063              		.code	16
 2064              		.thumb_func
 2066              	lcp_lowerup:
 2067              	.LFB293:
 2068              		.loc 1 323 0
 2069 0aec 70B5     		push	{r4, r5, r6, lr}
 2070              	.LCFI15:
 2071 0aee 5E46     		mov	r6, fp
 2072 0af0 5546     		mov	r5, sl
 2073 0af2 4C46     		mov	r4, r9
 2074 0af4 70B4     		push	{r4, r5, r6}
 2075              	.LCFI16:
 2076 0af6 4646     		mov	r6, r8
 2077 0af8 40B4     		push	{r6}
 2078              	.LCFI17:
 2079              	.LVL318:
 2080 0afa 82B0     		sub	sp, sp, #8
 2081              	.LCFI18:
 2082 0afc 041C     		mov	r4, r0
 2083              		.loc 1 324 0
 2084 0afe 4500     		lsl	r5, r0, #1
 2085 0b00 2D18     		add	r5, r5, r0
 2086 0b02 EB00     		lsl	r3, r5, #3
 2087 0b04 2B4E     		ldr	r6, .L118
 2088 0b06 F618     		add	r6, r6, r3
 2089              	.LVL319:
 2090              		.loc 1 331 0
 2091 0b08 4001     		lsl	r0, r0, #5
 2092              	.LVL320:
 2093 0b0a 8346     		mov	fp, r0
 2094 0b0c 2A49     		ldr	r1, .L118+4
 2095 0b0e 8A46     		mov	sl, r1
 2096 0b10 0A1C     		mov	r2, r1
 2097 0b12 5A44     		add	r2, r2, fp
 2098 0b14 9146     		mov	r9, r2
 2099 0b16 201C     		mov	r0, r4
 2100 0b18 111C     		mov	r1, r2
 2101 0b1a FFF7FEFF 		bl	ppp_set_xaccm
 2102              		.loc 1 332 0
 2103 0b1e 274B     		ldr	r3, .L118+8
 2104 0b20 9846     		mov	r8, r3
 2105 0b22 0122     		mov	r2, #1
 2106 0b24 5242     		neg	r2, r2
 2107 0b26 0023     		mov	r3, #0
 2108 0b28 0093     		str	r3, [sp]
 2109 0b2a 201C     		mov	r0, r4
 2110 0b2c 4146     		mov	r1, r8
 2111 0b2e FFF7FEFF 		bl	ppp_send_config
 2112              		.loc 1 333 0
 2113 0b32 7278     		ldrb	r2, [r6, #1]
 2114 0b34 D307     		lsl	r3, r2, #31
 2115 0b36 DB0F     		lsr	r3, r3, #31
 2116 0b38 1B06     		lsl	r3, r3, #24
 2117 0b3a 1B0E     		lsr	r3, r3, #24
 2118 0b3c 9207     		lsl	r2, r2, #30
 2119 0b3e D20F     		lsr	r2, r2, #31
 2120 0b40 0092     		str	r2, [sp]
 2121 0b42 201C     		mov	r0, r4
 2122 0b44 4146     		mov	r1, r8
 2123 0b46 0022     		mov	r2, #0
 2124 0b48 FFF7FEFF 		bl	ppp_recv_config
 2125              		.loc 1 335 0
 2126 0b4c 1C4A     		ldr	r2, .L118+12
 2127 0b4e A300     		lsl	r3, r4, #2
 2128 0b50 4046     		mov	r0, r8
 2129 0b52 9850     		str	r0, [r3, r2]
 2130              		.loc 1 336 0
 2131 0b54 4946     		mov	r1, r9
 2132 0b56 0978     		ldrb	r1, [r1]
 2133 0b58 8846     		mov	r8, r1
 2134 0b5a 4A46     		mov	r2, r9
 2135 0b5c 5278     		ldrb	r2, [r2, #1]
 2136 0b5e 9446     		mov	ip, r2
 2137 0b60 5B46     		mov	r3, fp
 2138 0b62 0233     		add	r3, r3, #2
 2139 0b64 5046     		mov	r0, sl
 2140 0b66 1B5C     		ldrb	r3, [r3, r0]
 2141 0b68 4946     		mov	r1, r9
 2142 0b6a CA78     		ldrb	r2, [r1, #3]
 2143 0b6c 154E     		ldr	r6, .L118+16
 2144              	.LVL321:
 2145 0b6e 0135     		add	r5, r5, #1
 2146 0b70 ED00     		lsl	r5, r5, #3
 2147 0b72 6046     		mov	r0, ip
 2148 0b74 0102     		lsl	r1, r0, #8
 2149 0b76 1804     		lsl	r0, r3, #16
 2150 0b78 0143     		orr	r1, r1, r0
 2151 0b7a 4046     		mov	r0, r8
 2152 0b7c 0143     		orr	r1, r1, r0
 2153 0b7e 1006     		lsl	r0, r2, #24
 2154 0b80 0143     		orr	r1, r1, r0
 2155 0b82 A951     		str	r1, [r5, r6]
 2156              		.loc 1 340 0
 2157 0b84 1049     		ldr	r1, .L118+20
 2158 0b86 6046     		mov	r0, ip
 2159 0b88 0090     		str	r0, [sp]
 2160 0b8a 4046     		mov	r0, r8
 2161 0b8c 0190     		str	r0, [sp, #4]
 2162 0b8e 0520     		mov	r0, #5
 2163 0b90 FFF7FEFF 		bl	ppp_trace
 2164              		.loc 1 346 0
 2165 0b94 E300     		lsl	r3, r4, #3
 2166 0b96 1B1B     		sub	r3, r3, r4
 2167 0b98 DB00     		lsl	r3, r3, #3
 2168 0b9a 0C48     		ldr	r0, .L118+24
 2169 0b9c C018     		add	r0, r0, r3
 2170 0b9e FFF7FEFF 		bl	fsm_lowerup
 2171              		.loc 1 347 0
 2172 0ba2 02B0     		add	sp, sp, #8
 2173              		@ sp needed for prologue
 2174              	.LVL322:
 2175 0ba4 3CBC     		pop	{r2, r3, r4, r5}
 2176 0ba6 9046     		mov	r8, r2
 2177 0ba8 9946     		mov	r9, r3
 2178 0baa A246     		mov	sl, r4
 2179 0bac AB46     		mov	fp, r5
 2180 0bae 70BC     		pop	{r4, r5, r6}
 2181 0bb0 01BC     		pop	{r0}
 2182 0bb2 0047     		bx	r0
 2183              	.L119:
 2184              		.align	2
 2185              	.L118:
 2186 0bb4 00000000 		.word	lcp_wantoptions
 2187 0bb8 00000000 		.word	xmit_accm
 2188 0bbc DC050000 		.word	1500
 2189 0bc0 00000000 		.word	peer_mru
 2190 0bc4 00000000 		.word	lcp_allowoptions
 2191 0bc8 60030000 		.word	.LC66
 2192 0bcc 0C000000 		.word	lcp_fsm
 2193              	.LFE293:
 2195              		.align	2
 2196              		.code	16
 2197              		.thumb_func
 2199              	lcp_finished:
 2200              	.LFB310:
 2201              		.loc 1 1689 0
 2202 0bd0 00B5     		push	{lr}
 2203              	.LCFI19:
 2204              	.LVL323:
 2205              		.loc 1 1690 0
 2206 0bd2 0068     		ldr	r0, [r0]
 2207              	.LVL324:
 2208 0bd4 FFF7FEFF 		bl	link_terminated
 2209              		.loc 1 1691 0
 2210              		@ sp needed for prologue
 2211 0bd8 01BC     		pop	{r0}
 2212 0bda 0047     		bx	r0
 2213              	.LFE310:
 2215              		.align	2
 2216              		.global	lcp_close
 2217              		.code	16
 2218              		.thumb_func
 2220              	lcp_close:
 2221              	.LFB292:
 2222              		.loc 1 297 0
 2223 0bdc 30B5     		push	{r4, r5, lr}
 2224              	.LCFI20:
 2225              	.LVL325:
 2226 0bde 0D1C     		mov	r5, r1
 2227              		.loc 1 298 0
 2228 0be0 C300     		lsl	r3, r0, #3
 2229 0be2 1B1A     		sub	r3, r3, r0
 2230 0be4 DB00     		lsl	r3, r3, #3
 2231 0be6 0F4A     		ldr	r2, .L127
 2232 0be8 D418     		add	r4, r2, r3
 2233              	.LVL326:
 2234              		.loc 1 300 0
 2235 0bea 0F4A     		ldr	r2, .L127+4
 2236 0bec 8300     		lsl	r3, r0, #2
 2237 0bee 9B58     		ldr	r3, [r3, r2]
 2238 0bf0 002B     		cmp	r3, #0
 2239 0bf2 03D0     		beq	.L123
 2240              	.LVL327:
 2241              		.loc 1 301 0
 2242 0bf4 111C     		mov	r1, r2
 2243 0bf6 8200     		lsl	r2, r0, #2
 2244 0bf8 0623     		mov	r3, #6
 2245 0bfa 5350     		str	r3, [r2, r1]
 2246              	.LVL328:
 2247              	.L123:
 2248              		.loc 1 303 0
 2249 0bfc A368     		ldr	r3, [r4, #8]
 2250 0bfe 032B     		cmp	r3, #3
 2251 0c00 09D1     		bne	.L124
 2252 0c02 E268     		ldr	r2, [r4, #12]
 2253 0c04 0523     		mov	r3, #5
 2254 0c06 1A42     		tst	r2, r3
 2255 0c08 05D0     		beq	.L124
 2256              		.loc 1 310 0
 2257 0c0a 0223     		mov	r3, #2
 2258 0c0c A360     		str	r3, [r4, #8]
 2259              		.loc 1 311 0
 2260 0c0e 201C     		mov	r0, r4
 2261              	.LVL329:
 2262 0c10 FFF7DEFF 		bl	lcp_finished
 2263 0c14 03E0     		b	.L126
 2264              	.LVL330:
 2265              	.L124:
 2266              		.loc 1 313 0
 2267 0c16 201C     		mov	r0, r4
 2268              	.LVL331:
 2269 0c18 291C     		mov	r1, r5
 2270 0c1a FFF7FEFF 		bl	fsm_close
 2271              	.L126:
 2272              		.loc 1 315 0
 2273              		@ sp needed for prologue
 2274              	.LVL332:
 2275              	.LVL333:
 2276 0c1e 30BC     		pop	{r4, r5}
 2277 0c20 01BC     		pop	{r0}
 2278 0c22 0047     		bx	r0
 2279              	.L128:
 2280              		.align	2
 2281              	.L127:
 2282 0c24 0C000000 		.word	lcp_fsm
 2283 0c28 00000000 		.word	lcp_phase
 2284              	.LFE292:
 2286              		.align	2
 2287              		.global	lcp_open
 2288              		.code	16
 2289              		.thumb_func
 2291              	lcp_open:
 2292              	.LFB291:
 2293              		.loc 1 275 0
 2294 0c2c 10B5     		push	{r4, lr}
 2295              	.LCFI21:
 2296              	.LVL334:
 2297 0c2e 041C     		mov	r4, r0
 2298              		.loc 1 276 0
 2299 0c30 C300     		lsl	r3, r0, #3
 2300 0c32 1B1A     		sub	r3, r3, r0
 2301 0c34 DB00     		lsl	r3, r3, #3
 2302 0c36 104A     		ldr	r2, .L133
 2303 0c38 D018     		add	r0, r2, r3
 2304              	.LVL335:
 2305              		.loc 1 277 0
 2306 0c3a 6300     		lsl	r3, r4, #1
 2307 0c3c 1B19     		add	r3, r3, r4
 2308 0c3e DB00     		lsl	r3, r3, #3
 2309 0c40 0E4A     		ldr	r2, .L133+4
 2310 0c42 D218     		add	r2, r2, r3
 2311              	.LVL336:
 2312              		.loc 1 279 0
 2313 0c44 0023     		mov	r3, #0
 2314 0c46 C360     		str	r3, [r0, #12]
 2315              		.loc 1 280 0
 2316 0c48 1378     		ldrb	r3, [r2]
 2317 0c4a DB07     		lsl	r3, r3, #31
 2318 0c4c DB0F     		lsr	r3, r3, #31
 2319 0c4e 1B06     		lsl	r3, r3, #24
 2320 0c50 002B     		cmp	r3, #0
 2321 0c52 01D0     		beq	.L130
 2322              		.loc 1 281 0
 2323 0c54 0123     		mov	r3, #1
 2324 0c56 C360     		str	r3, [r0, #12]
 2325              	.L130:
 2326              		.loc 1 283 0
 2327 0c58 1378     		ldrb	r3, [r2]
 2328 0c5a 9A07     		lsl	r2, r3, #30
 2329 0c5c 03D5     		bpl	.L131
 2330              	.LVL337:
 2331              		.loc 1 284 0
 2332 0c5e C368     		ldr	r3, [r0, #12]
 2333 0c60 0422     		mov	r2, #4
 2334 0c62 1343     		orr	r3, r3, r2
 2335 0c64 C360     		str	r3, [r0, #12]
 2336              	.L131:
 2337              		.loc 1 286 0
 2338 0c66 FFF7FEFF 		bl	fsm_open
 2339              	.LVL338:
 2340              		.loc 1 288 0
 2341 0c6a 0549     		ldr	r1, .L133+8
 2342 0c6c A200     		lsl	r2, r4, #2
 2343 0c6e 0223     		mov	r3, #2
 2344 0c70 5350     		str	r3, [r2, r1]
 2345              		.loc 1 289 0
 2346              		@ sp needed for prologue
 2347              	.LVL339:
 2348 0c72 10BC     		pop	{r4}
 2349 0c74 01BC     		pop	{r0}
 2350 0c76 0047     		bx	r0
 2351              	.L134:
 2352              		.align	2
 2353              	.L133:
 2354 0c78 0C000000 		.word	lcp_fsm
 2355 0c7c 00000000 		.word	lcp_wantoptions
 2356 0c80 00000000 		.word	lcp_phase
 2357              	.LFE291:
 2359              		.section	.rodata.str1.4
 2360 0383 00       		.align	2
 2361              	.LC79:
 2362 0384 6C63705F 		.ascii	"lcp_init: xmit_accm=%X %X %X %X\012\000"
 2362      696E6974 
 2362      3A20786D 
 2362      69745F61 
 2362      63636D3D 
 2363              		.text
 2364              		.align	2
 2365              		.global	lcp_init
 2366              		.code	16
 2367              		.thumb_func
 2369              	lcp_init:
 2370              	.LFB290:
 2371              		.loc 1 210 0
 2372 0c84 F0B5     		push	{r4, r5, r6, r7, lr}
 2373              	.LCFI22:
 2374 0c86 5F46     		mov	r7, fp
 2375 0c88 5646     		mov	r6, sl
 2376 0c8a 4D46     		mov	r5, r9
 2377 0c8c 4446     		mov	r4, r8
 2378 0c8e F0B4     		push	{r4, r5, r6, r7}
 2379              	.LCFI23:
 2380              	.LVL340:
 2381 0c90 82B0     		sub	sp, sp, #8
 2382              	.LCFI24:
 2383 0c92 8146     		mov	r9, r0
 2384              		.loc 1 211 0
 2385 0c94 C300     		lsl	r3, r0, #3
 2386 0c96 1B1A     		sub	r3, r3, r0
 2387 0c98 DB00     		lsl	r3, r3, #3
 2388 0c9a 5248     		ldr	r0, .L137
 2389              	.LVL341:
 2390 0c9c C018     		add	r0, r0, r3
 2391              	.LVL342:
 2392              		.loc 1 212 0
 2393 0c9e 4946     		mov	r1, r9
 2394 0ca0 4B00     		lsl	r3, r1, #1
 2395 0ca2 4B44     		add	r3, r3, r9
 2396 0ca4 DB00     		lsl	r3, r3, #3
 2397 0ca6 504C     		ldr	r4, .L137+4
 2398 0ca8 E418     		add	r4, r4, r3
 2399              	.LVL343:
 2400              		.loc 1 213 0
 2401 0caa 504D     		ldr	r5, .L137+8
 2402 0cac ED18     		add	r5, r5, r3
 2403              	.LVL344:
 2404              		.loc 1 215 0
 2405 0cae 0160     		str	r1, [r0]
 2406              		.loc 1 216 0
 2407 0cb0 4F4B     		ldr	r3, .L137+12
 2408 0cb2 8380     		strh	r3, [r0, #4]
 2409              		.loc 1 217 0
 2410 0cb4 4F4B     		ldr	r3, .L137+16
 2411 0cb6 C362     		str	r3, [r0, #44]
 2412              		.loc 1 219 0
 2413 0cb8 FFF7FEFF 		bl	fsm_init
 2414              	.LVL345:
 2415              		.loc 1 221 0
 2416 0cbc 2378     		ldrb	r3, [r4]
 2417 0cbe 0122     		mov	r2, #1
 2418 0cc0 9343     		bic	r3, r3, r2
 2419 0cc2 2370     		strb	r3, [r4]
 2420              		.loc 1 222 0
 2421 0cc4 2378     		ldrb	r3, [r4]
 2422 0cc6 0222     		mov	r2, #2
 2423 0cc8 9343     		bic	r3, r3, r2
 2424 0cca 2370     		strb	r3, [r4]
 2425              		.loc 1 223 0
 2426 0ccc 2378     		ldrb	r3, [r4]
 2427 0cce 0421     		mov	r1, #4
 2428 0cd0 8B43     		bic	r3, r3, r1
 2429 0cd2 2370     		strb	r3, [r4]
 2430              		.loc 1 224 0
 2431 0cd4 2378     		ldrb	r3, [r4]
 2432 0cd6 0827     		mov	r7, #8
 2433 0cd8 3B43     		orr	r3, r3, r7
 2434 0cda 2370     		strb	r3, [r4]
 2435              		.loc 1 225 0
 2436 0cdc 9423     		mov	r3, #148
 2437 0cde 5B00     		lsl	r3, r3, #1
 2438 0ce0 6380     		strh	r3, [r4, #2]
 2439              		.loc 1 226 0
 2440 0ce2 2378     		ldrb	r3, [r4]
 2441 0ce4 1022     		mov	r2, #16
 2442 0ce6 9346     		mov	fp, r2
 2443 0ce8 5A46     		mov	r2, fp
 2444 0cea 1343     		orr	r3, r3, r2
 2445 0cec 2370     		strb	r3, [r4]
 2446              		.loc 1 227 0
 2447 0cee 0023     		mov	r3, #0
 2448 0cf0 9A46     		mov	sl, r3
 2449 0cf2 A360     		str	r3, [r4, #8]
 2450              		.loc 1 228 0
 2451 0cf4 2378     		ldrb	r3, [r4]
 2452 0cf6 4022     		mov	r2, #64
 2453 0cf8 9343     		bic	r3, r3, r2
 2454 0cfa 2370     		strb	r3, [r4]
 2455              		.loc 1 229 0
 2456 0cfc 2378     		ldrb	r3, [r4]
 2457 0cfe 2022     		mov	r2, #32
 2458 0d00 9343     		bic	r3, r3, r2
 2459 0d02 2370     		strb	r3, [r4]
 2460              		.loc 1 230 0
 2461 0d04 0520     		mov	r0, #5
 2462 0d06 2071     		strb	r0, [r4, #4]
 2463              		.loc 1 231 0
 2464 0d08 2378     		ldrb	r3, [r4]
 2465 0d0a A03A     		sub	r2, r2, #160
 2466 0d0c 9046     		mov	r8, r2
 2467 0d0e 1343     		orr	r3, r3, r2
 2468 0d10 2370     		strb	r3, [r4]
 2469              		.loc 1 232 0
 2470 0d12 6378     		ldrb	r3, [r4, #1]
 2471 0d14 0122     		mov	r2, #1
 2472 0d16 9446     		mov	ip, r2
 2473 0d18 6246     		mov	r2, ip
 2474 0d1a 1343     		orr	r3, r3, r2
 2475 0d1c 6370     		strb	r3, [r4, #1]
 2476              		.loc 1 233 0
 2477 0d1e 6378     		ldrb	r3, [r4, #1]
 2478 0d20 0226     		mov	r6, #2
 2479 0d22 3343     		orr	r3, r3, r6
 2480 0d24 6370     		strb	r3, [r4, #1]
 2481              		.loc 1 234 0
 2482 0d26 6378     		ldrb	r3, [r4, #1]
 2483 0d28 8B43     		bic	r3, r3, r1
 2484 0d2a 6370     		strb	r3, [r4, #1]
 2485              		.loc 1 235 0
 2486 0d2c 6378     		ldrb	r3, [r4, #1]
 2487 0d2e 0822     		mov	r2, #8
 2488 0d30 9343     		bic	r3, r3, r2
 2489 0d32 6370     		strb	r3, [r4, #1]
 2490              		.loc 1 237 0
 2491 0d34 2B78     		ldrb	r3, [r5]
 2492 0d36 3B43     		orr	r3, r3, r7
 2493 0d38 2B70     		strb	r3, [r5]
 2494              		.loc 1 238 0
 2495 0d3a 2F4B     		ldr	r3, .L137+20
 2496 0d3c 6B80     		strh	r3, [r5, #2]
 2497              		.loc 1 239 0
 2498 0d3e 2B78     		ldrb	r3, [r5]
 2499 0d40 5A46     		mov	r2, fp
 2500 0d42 1343     		orr	r3, r3, r2
 2501 0d44 2B70     		strb	r3, [r5]
 2502              		.loc 1 240 0
 2503 0d46 5346     		mov	r3, sl
 2504 0d48 AB60     		str	r3, [r5, #8]
 2505              		.loc 1 241 0
 2506 0d4a 2B78     		ldrb	r3, [r5]
 2507 0d4c 4022     		mov	r2, #64
 2508 0d4e 1343     		orr	r3, r3, r2
 2509 0d50 2B70     		strb	r3, [r5]
 2510              		.loc 1 242 0
 2511 0d52 2871     		strb	r0, [r5, #4]
 2512              		.loc 1 243 0
 2513 0d54 2B78     		ldrb	r3, [r5]
 2514 0d56 2022     		mov	r2, #32
 2515 0d58 1343     		orr	r3, r3, r2
 2516 0d5a 2B70     		strb	r3, [r5]
 2517              		.loc 1 244 0
 2518 0d5c 2B78     		ldrb	r3, [r5]
 2519 0d5e 4246     		mov	r2, r8
 2520 0d60 1343     		orr	r3, r3, r2
 2521 0d62 2B70     		strb	r3, [r5]
 2522              		.loc 1 245 0
 2523 0d64 6B78     		ldrb	r3, [r5, #1]
 2524 0d66 6246     		mov	r2, ip
 2525 0d68 1343     		orr	r3, r3, r2
 2526 0d6a 6B70     		strb	r3, [r5, #1]
 2527              		.loc 1 246 0
 2528 0d6c 6B78     		ldrb	r3, [r5, #1]
 2529 0d6e 3343     		orr	r3, r3, r6
 2530 0d70 6B70     		strb	r3, [r5, #1]
 2531              		.loc 1 247 0
 2532 0d72 6B78     		ldrb	r3, [r5, #1]
 2533 0d74 8B43     		bic	r3, r3, r1
 2534 0d76 6B70     		strb	r3, [r5, #1]
 2535              		.loc 1 248 0
 2536 0d78 6B78     		ldrb	r3, [r5, #1]
 2537 0d7a 0821     		mov	r1, #8
 2538 0d7c 8B43     		bic	r3, r3, r1
 2539 0d7e 6B70     		strb	r3, [r5, #1]
 2540              		.loc 1 254 0
 2541 0d80 4A46     		mov	r2, r9
 2542 0d82 5201     		lsl	r2, r2, #5
 2543 0d84 9246     		mov	sl, r2
 2544 0d86 1D4B     		ldr	r3, .L137+24
 2545 0d88 9846     		mov	r8, r3
 2546 0d8a 1E1C     		mov	r6, r3
 2547 0d8c 5644     		add	r6, r6, sl
 2548 0d8e 301C     		mov	r0, r6
 2549 0d90 0021     		mov	r1, #0
 2550 0d92 2022     		mov	r2, #32
 2551 0d94 FFF7FEFF 		bl	memset
 2552              		.loc 1 255 0
 2553 0d98 6023     		mov	r3, #96
 2554 0d9a F373     		strb	r3, [r6, #15]
 2555              		.loc 1 256 0
 2556 0d9c AC68     		ldr	r4, [r5, #8]
 2557              	.LVL346:
 2558 0d9e 3470     		strb	r4, [r6]
 2559              		.loc 1 257 0
 2560 0da0 751C     		add	r5, r6, #1
 2561              	.LVL347:
 2562 0da2 230A     		lsr	r3, r4, #8
 2563 0da4 2B70     		strb	r3, [r5]
 2564              		.loc 1 258 0
 2565 0da6 5046     		mov	r0, sl
 2566 0da8 0230     		add	r0, r0, #2
 2567 0daa 230C     		lsr	r3, r4, #16
 2568 0dac 4246     		mov	r2, r8
 2569 0dae 8354     		strb	r3, [r0, r2]
 2570              		.loc 1 259 0
 2571 0db0 240E     		lsr	r4, r4, #24
 2572 0db2 F470     		strb	r4, [r6, #3]
 2573              		.loc 1 260 0
 2574 0db4 1249     		ldr	r1, .L137+28
 2575 0db6 3278     		ldrb	r2, [r6]
 2576 0db8 2B78     		ldrb	r3, [r5]
 2577 0dba 4546     		mov	r5, r8
 2578 0dbc 405D     		ldrb	r0, [r0, r5]
 2579 0dbe 0090     		str	r0, [sp]
 2580 0dc0 0194     		str	r4, [sp, #4]
 2581 0dc2 0520     		mov	r0, #5
 2582 0dc4 FFF7FEFF 		bl	ppp_trace
 2583              		.loc 1 266 0
 2584 0dc8 0E4B     		ldr	r3, .L137+32
 2585 0dca 4946     		mov	r1, r9
 2586 0dcc 8900     		lsl	r1, r1, #2
 2587 0dce 0122     		mov	r2, #1
 2588 0dd0 CA50     		str	r2, [r1, r3]
 2589              		.loc 1 267 0
 2590 0dd2 02B0     		add	sp, sp, #8
 2591              		@ sp needed for prologue
 2592              	.LVL348:
 2593 0dd4 3CBC     		pop	{r2, r3, r4, r5}
 2594 0dd6 9046     		mov	r8, r2
 2595 0dd8 9946     		mov	r9, r3
 2596 0dda A246     		mov	sl, r4
 2597 0ddc AB46     		mov	fp, r5
 2598 0dde F0BC     		pop	{r4, r5, r6, r7}
 2599 0de0 01BC     		pop	{r0}
 2600 0de2 0047     		bx	r0
 2601              	.L138:
 2602              		.align	2
 2603              	.L137:
 2604 0de4 0C000000 		.word	lcp_fsm
 2605 0de8 00000000 		.word	lcp_wantoptions
 2606 0dec 00000000 		.word	lcp_allowoptions
 2607 0df0 21C0FFFF 		.word	-16351
 2608 0df4 2C000000 		.word	lcp_callbacks
 2609 0df8 DC050000 		.word	1500
 2610 0dfc 00000000 		.word	xmit_accm
 2611 0e00 84030000 		.word	.LC79
 2612 0e04 00000000 		.word	lcp_phase
 2613              	.LFE290:
 2615              		.align	2
 2616              		.code	16
 2617              		.thumb_func
 2619              	lcp_starting:
 2620              	.LFB309:
 2621              		.loc 1 1679 0
 2622 0e08 00B5     		push	{lr}
 2623              	.LCFI25:
 2624              	.LVL349:
 2625              		.loc 1 1680 0
 2626 0e0a 0068     		ldr	r0, [r0]
 2627              	.LVL350:
 2628 0e0c FFF7FEFF 		bl	link_required
 2629              		.loc 1 1681 0
 2630              		@ sp needed for prologue
 2631 0e10 01BC     		pop	{r0}
 2632 0e12 0047     		bx	r0
 2633              	.LFE309:
 2635              		.align	2
 2636              		.code	16
 2637              		.thumb_func
 2639              	lcp_down:
 2640              	.LFB308:
 2641              		.loc 1 1659 0
 2642 0e14 F0B5     		push	{r4, r5, r6, r7, lr}
 2643              	.LCFI26:
 2644              	.LVL351:
 2645 0e16 81B0     		sub	sp, sp, #4
 2646              	.LCFI27:
 2647 0e18 051C     		mov	r5, r0
 2648              		.loc 1 1660 0
 2649 0e1a 0168     		ldr	r1, [r0]
 2650 0e1c 4B00     		lsl	r3, r1, #1
 2651 0e1e 5B18     		add	r3, r3, r1
 2652 0e20 DB00     		lsl	r3, r3, #3
 2653 0e22 1C4A     		ldr	r2, .L146
 2654 0e24 D618     		add	r6, r2, r3
 2655              	.LVL352:
 2656              	.LBB12:
 2657              	.LBB13:
1968:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
1969:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1970:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
1971:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * LcpSendEchoRequest - Send an echo request frame to the peer
1972:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
1973:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void
1974:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** LcpSendEchoRequest (fsm *f)
1975:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
1976:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u32_t lcp_magic;
1977:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   u_char pkt[4], *pktp;
1978:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1979:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
1980:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Detect the failure of the peer at this point.
1981:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
1982:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (lcp_echo_fails != 0) {
1983:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     if (lcp_echos_pending++ >= lcp_echo_fails) {
1984:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       LcpLinkFailure(f);
1985:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****       lcp_echos_pending = 0;
1986:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     }
1987:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1988:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
1989:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /*
1990:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    * Make and send the echo request frame.
1991:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****    */
1992:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (f->state == LS_OPENED) {
1993:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     lcp_magic = lcp_gotoptions[f->unit].magicnumber;
1994:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     pktp = pkt;
1995:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     PUTLONG(lcp_magic, pktp);
1996:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     fsm_sdata(f, ECHOREQ, (u_char)(lcp_echo_number++ & 0xFF), pkt, (int)(pktp - pkt));
1997:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
1998:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
1999:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
2000:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
2001:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_echo_lowerup - Start the timer for the LCP frame
2002:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
2003:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
2004:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void
2005:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_echo_lowerup (int unit)
2006:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
2007:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   fsm *f = &lcp_fsm[unit];
2008:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
2009:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /* Clear the parameters for generating echo frames */
2010:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_echos_pending      = 0;
2011:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_echo_number        = 0;
2012:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   lcp_echo_timer_running = 0;
2013:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
2014:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   /* If a timeout interval is specified then start the timer */
2015:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (lcp_echo_interval != 0) {
2016:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     LcpEchoCheck (f);
2017:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   }
2018:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** }
2019:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
2020:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** /*
2021:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  * lcp_echo_lowerdown - Stop the timer for the LCP frame
2022:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****  */
2023:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
2024:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** static void
2025:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** lcp_echo_lowerdown (int unit)
2026:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** {
2027:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   fsm *f = &lcp_fsm[unit];
2028:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c **** 
2029:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****   if (lcp_echo_timer_running != 0) {
 2658              		.loc 1 2029 0
 2659 0e26 1C4B     		ldr	r3, .L146+4
 2660 0e28 1B68     		ldr	r3, [r3]
 2661 0e2a 002B     		cmp	r3, #0
 2662 0e2c 0AD0     		beq	.L142
2030:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     UNTIMEOUT (LcpEchoTimeout, f);
 2663              		.loc 1 2030 0
 2664 0e2e 1B48     		ldr	r0, .L146+8
 2665              	.LVL353:
 2666 0e30 CB00     		lsl	r3, r1, #3
 2667 0e32 5B1A     		sub	r3, r3, r1
 2668 0e34 DB00     		lsl	r3, r3, #3
 2669 0e36 1A49     		ldr	r1, .L146+12
 2670 0e38 C918     		add	r1, r1, r3
 2671 0e3a FFF7FEFF 		bl	sys_untimeout
2031:rtos/common/ethernet/lwIP_132/src/netif/ppp/lcp.c ****     lcp_echo_timer_running = 0;
 2672              		.loc 1 2031 0
 2673 0e3e 164A     		ldr	r2, .L146+4
 2674 0e40 0023     		mov	r3, #0
 2675 0e42 1360     		str	r3, [r2]
 2676              	.LVL354:
 2677              	.L142:
 2678              	.LBE13:
 2679              	.LBE12:
 2680              		.loc 1 1664 0
 2681 0e44 2868     		ldr	r0, [r5]
 2682 0e46 FFF7FEFF 		bl	link_down
 2683              		.loc 1 1666 0
 2684 0e4a 2868     		ldr	r0, [r5]
 2685 0e4c 0122     		mov	r2, #1
 2686 0e4e 5242     		neg	r2, r2
 2687 0e50 0023     		mov	r3, #0
 2688 0e52 0093     		str	r3, [sp]
 2689 0e54 1349     		ldr	r1, .L146+16
 2690 0e56 FFF7FEFF 		bl	ppp_send_config
 2691              		.loc 1 1667 0
 2692 0e5a 2868     		ldr	r0, [r5]
 2693 0e5c 3378     		ldrb	r3, [r6]
 2694 0e5e DA06     		lsl	r2, r3, #27
 2695 0e60 01D4     		bmi	.L143
 2696 0e62 0027     		mov	r7, #0
 2697 0e64 00E0     		b	.L144
 2698              	.L143:
 2699 0e66 B768     		ldr	r7, [r6, #8]
 2700              	.L144:
 2701 0e68 0E4C     		ldr	r4, .L146+16
 2702 0e6a 7278     		ldrb	r2, [r6, #1]
 2703 0e6c D307     		lsl	r3, r2, #31
 2704 0e6e DB0F     		lsr	r3, r3, #31
 2705 0e70 1B06     		lsl	r3, r3, #24
 2706 0e72 1B0E     		lsr	r3, r3, #24
 2707 0e74 9207     		lsl	r2, r2, #30
 2708 0e76 D20F     		lsr	r2, r2, #31
 2709 0e78 0092     		str	r2, [sp]
 2710 0e7a 211C     		mov	r1, r4
 2711 0e7c 3A1C     		mov	r2, r7
 2712 0e7e FFF7FEFF 		bl	ppp_recv_config
 2713              		.loc 1 1670 0
 2714 0e82 094A     		ldr	r2, .L146+20
 2715 0e84 2B68     		ldr	r3, [r5]
 2716 0e86 9B00     		lsl	r3, r3, #2
 2717 0e88 9C50     		str	r4, [r3, r2]
 2718              		.loc 1 1671 0
 2719 0e8a 01B0     		add	sp, sp, #4
 2720              		@ sp needed for prologue
 2721              	.LVL355:
 2722              	.LVL356:
 2723 0e8c F0BC     		pop	{r4, r5, r6, r7}
 2724 0e8e 01BC     		pop	{r0}
 2725 0e90 0047     		bx	r0
 2726              	.L147:
 2727 0e92 C046     		.align	2
 2728              	.L146:
 2729 0e94 00000000 		.word	lcp_gotoptions
 2730 0e98 04000000 		.word	lcp_echo_timer_running
 2731 0e9c 00000000 		.word	LcpEchoTimeout
 2732 0ea0 0C000000 		.word	lcp_fsm
 2733 0ea4 DC050000 		.word	1500
 2734 0ea8 00000000 		.word	peer_mru
 2735              	.LFE308:
 2737              		.section	.rodata.str1.4
 2738 03a5 000000   		.align	2
 2739              	.LC88:
 2740 03a8 4E6F2072 		.ascii	"No response to %d echo-requests\012\000"
 2740      6573706F 
 2740      6E736520 
 2740      746F2025 
 2740      64206563 
 2741 03c9 000000   		.align	2
 2742              	.LC90:
 2743 03cc 53657269 		.ascii	"Serial link appears to be disconnected.\012\000"
 2743      616C206C 
 2743      696E6B20 
 2743      61707065 
 2743      61727320 
 2744 03f5 000000   		.align	2
 2745              	.LC92:
 2746 03f8 50656572 		.ascii	"Peer not responding\000"
 2746      206E6F74 
 2746      20726573 
 2746      706F6E64 
 2746      696E6700 
 2747              		.text
 2748              		.align	2
 2749              		.code	16
 2750              		.thumb_func
 2752              	LcpEchoCheck:
 2753              	.LFB312:
 2754              		.loc 1 1921 0
 2755 0eac 30B5     		push	{r4, r5, lr}
 2756              	.LCFI28:
 2757              	.LVL357:
 2758 0eae 82B0     		sub	sp, sp, #8
 2759              	.LCFI29:
 2760 0eb0 051C     		mov	r5, r0
 2761              	.LBB18:
 2762              	.LBB19:
 2763              		.loc 1 1983 0
 2764 0eb2 244B     		ldr	r3, .L153
 2765 0eb4 1A68     		ldr	r2, [r3]
 2766 0eb6 541C     		add	r4, r2, #1
 2767 0eb8 1C60     		str	r4, [r3]
 2768 0eba 022A     		cmp	r2, #2
 2769 0ebc 12D9     		bls	.L149
 2770              	.LVL358:
 2771              	.LBB20:
 2772              	.LBB21:
 2773              		.loc 1 1909 0
 2774 0ebe 8368     		ldr	r3, [r0, #8]
 2775 0ec0 092B     		cmp	r3, #9
 2776 0ec2 0CD1     		bne	.L150
 2777              	.LVL359:
 2778              		.loc 1 1910 0
 2779 0ec4 2049     		ldr	r1, .L153+4
 2780 0ec6 0520     		mov	r0, #5
 2781              	.LVL360:
 2782 0ec8 221C     		mov	r2, r4
 2783 0eca FFF7FEFF 		bl	ppp_trace
 2784              		.loc 1 1911 0
 2785 0ece 1F49     		ldr	r1, .L153+8
 2786 0ed0 0220     		mov	r0, #2
 2787 0ed2 FFF7FEFF 		bl	ppp_trace
 2788              		.loc 1 1912 0
 2789 0ed6 2868     		ldr	r0, [r5]
 2790 0ed8 1D49     		ldr	r1, .L153+12
 2791 0eda FFF7FEFF 		bl	lcp_close
 2792              	.LVL361:
 2793              	.L150:
 2794              	.LBE21:
 2795              	.LBE20:
 2796              		.loc 1 1985 0
 2797 0ede 194A     		ldr	r2, .L153
 2798 0ee0 0023     		mov	r3, #0
 2799 0ee2 1360     		str	r3, [r2]
 2800              	.L149:
 2801              		.loc 1 1992 0
 2802 0ee4 AB68     		ldr	r3, [r5, #8]
 2803 0ee6 092B     		cmp	r3, #9
 2804 0ee8 1AD1     		bne	.L151
 2805              		.loc 1 1993 0
 2806 0eea 1A49     		ldr	r1, .L153+16
 2807 0eec 2A68     		ldr	r2, [r5]
 2808 0eee 5300     		lsl	r3, r2, #1
 2809 0ef0 9B18     		add	r3, r3, r2
 2810 0ef2 DB00     		lsl	r3, r3, #3
 2811 0ef4 C918     		add	r1, r1, r3
 2812 0ef6 C968     		ldr	r1, [r1, #12]
 2813              	.LVL362:
 2814              		.loc 1 1995 0
 2815 0ef8 01AB     		add	r3, sp, #4
 2816 0efa 0A0E     		lsr	r2, r1, #24
 2817 0efc 1A70     		strb	r2, [r3]
 2818 0efe 0A0C     		lsr	r2, r1, #16
 2819 0f00 5A70     		strb	r2, [r3, #1]
 2820 0f02 0A0A     		lsr	r2, r1, #8
 2821 0f04 9A70     		strb	r2, [r3, #2]
 2822 0f06 D970     		strb	r1, [r3, #3]
 2823              		.loc 1 1996 0
 2824 0f08 1348     		ldr	r0, .L153+20
 2825 0f0a 0268     		ldr	r2, [r0]
 2826 0f0c 511C     		add	r1, r2, #1
 2827              	.LVL363:
 2828 0f0e 0160     		str	r1, [r0]
 2829 0f10 1206     		lsl	r2, r2, #24
 2830 0f12 120E     		lsr	r2, r2, #24
 2831 0f14 0421     		mov	r1, #4
 2832 0f16 0091     		str	r1, [sp]
 2833 0f18 281C     		mov	r0, r5
 2834 0f1a 0921     		mov	r1, #9
 2835 0f1c FFF7FEFF 		bl	fsm_sdata
 2836              	.LVL364:
 2837              	.L151:
 2838              	.LBE19:
 2839              	.LBE18:
 2840              		.loc 1 1929 0
 2841 0f20 0E4C     		ldr	r4, .L153+24
 2842 0f22 201C     		mov	r0, r4
 2843 0f24 291C     		mov	r1, r5
 2844 0f26 FFF7FEFF 		bl	sys_untimeout
 2845 0f2a 0020     		mov	r0, #0
 2846 0f2c 211C     		mov	r1, r4
 2847 0f2e 2A1C     		mov	r2, r5
 2848 0f30 FFF7FEFF 		bl	sys_timeout
 2849              		.loc 1 1930 0
 2850 0f34 0A4A     		ldr	r2, .L153+28
 2851 0f36 0123     		mov	r3, #1
 2852 0f38 1360     		str	r3, [r2]
 2853              		.loc 1 1931 0
 2854 0f3a 02B0     		add	sp, sp, #8
 2855              		@ sp needed for prologue
 2856              	.LVL365:
 2857 0f3c 30BC     		pop	{r4, r5}
 2858 0f3e 01BC     		pop	{r0}
 2859 0f40 0047     		bx	r0
 2860              	.L154:
 2861 0f42 C046     		.align	2
 2862              	.L153:
 2863 0f44 00000000 		.word	lcp_echos_pending
 2864 0f48 A8030000 		.word	.LC88
 2865 0f4c CC030000 		.word	.LC90
 2866 0f50 F8030000 		.word	.LC92
 2867 0f54 00000000 		.word	lcp_gotoptions
 2868 0f58 08000000 		.word	lcp_echo_number
 2869 0f5c 00000000 		.word	LcpEchoTimeout
 2870 0f60 04000000 		.word	lcp_echo_timer_running
 2871              	.LFE312:
 2873              		.align	2
 2874              		.code	16
 2875              		.thumb_func
 2877              	LcpEchoTimeout:
 2878              	.LFB313:
 2879              		.loc 1 1938 0
 2880 0f64 00B5     		push	{lr}
 2881              	.LCFI30:
 2882              	.LVL366:
 2883              		.loc 1 1939 0
 2884 0f66 054B     		ldr	r3, .L158
 2885 0f68 1B68     		ldr	r3, [r3]
 2886 0f6a 002B     		cmp	r3, #0
 2887 0f6c 04D0     		beq	.L157
 2888              		.loc 1 1940 0
 2889 0f6e 034A     		ldr	r2, .L158
 2890 0f70 0023     		mov	r3, #0
 2891 0f72 1360     		str	r3, [r2]
 2892              		.loc 1 1941 0
 2893 0f74 FFF79AFF 		bl	LcpEchoCheck
 2894              	.LVL367:
 2895              	.L157:
 2896              		.loc 1 1943 0
 2897              		@ sp needed for prologue
 2898 0f78 01BC     		pop	{r0}
 2899 0f7a 0047     		bx	r0
 2900              	.L159:
 2901              		.align	2
 2902              	.L158:
 2903 0f7c 04000000 		.word	lcp_echo_timer_running
 2904              	.LFE313:
 2906              		.align	2
 2907              		.code	16
 2908              		.thumb_func
 2910              	lcp_up:
 2911              	.LFB307:
 2912              		.loc 1 1611 0
 2913 0f80 F0B5     		push	{r4, r5, r6, r7, lr}
 2914              	.LCFI31:
 2915 0f82 4746     		mov	r7, r8
 2916 0f84 80B4     		push	{r7}
 2917              	.LCFI32:
 2918              	.LVL368:
 2919 0f86 81B0     		sub	sp, sp, #4
 2920              	.LCFI33:
 2921 0f88 8046     		mov	r8, r0
 2922              		.loc 1 1612 0
 2923 0f8a 0268     		ldr	r2, [r0]
 2924 0f8c 5300     		lsl	r3, r2, #1
 2925 0f8e 9B18     		add	r3, r3, r2
 2926 0f90 DF00     		lsl	r7, r3, #3
 2927              		.loc 1 1613 0
 2928 0f92 3A4B     		ldr	r3, .L177
 2929 0f94 DE19     		add	r6, r3, r7
 2930              	.LVL369:
 2931              		.loc 1 1614 0
 2932 0f96 3A4B     		ldr	r3, .L177+4
 2933 0f98 DD19     		add	r5, r3, r7
 2934              	.LVL370:
 2935              		.loc 1 1617 0
 2936 0f9a 2B78     		ldrb	r3, [r5]
 2937 0f9c DB09     		lsr	r3, r3, #7
 2938 0f9e 002B     		cmp	r3, #0
 2939 0fa0 00D1     		bne	.L161
 2940              		.loc 1 1618 0
 2941 0fa2 EB60     		str	r3, [r5, #12]
 2942              	.L161:
 2943              		.loc 1 1620 0
 2944 0fa4 3378     		ldrb	r3, [r6]
 2945 0fa6 DB09     		lsr	r3, r3, #7
 2946 0fa8 002B     		cmp	r3, #0
 2947 0faa 00D1     		bne	.L162
 2948              		.loc 1 1621 0
 2949 0fac F360     		str	r3, [r6, #12]
 2950              	.L162:
 2951              		.loc 1 1630 0
 2952 0fae 4246     		mov	r2, r8
 2953 0fb0 1068     		ldr	r0, [r2]
 2954              	.LVL371:
 2955 0fb2 344B     		ldr	r3, .L177+8
 2956 0fb4 DB19     		add	r3, r3, r7
 2957 0fb6 5988     		ldrh	r1, [r3, #2]
 2958 0fb8 3378     		ldrb	r3, [r6]
 2959 0fba 1B07     		lsl	r3, r3, #28
 2960 0fbc DB0F     		lsr	r3, r3, #31
 2961 0fbe 002B     		cmp	r3, #0
 2962 0fc0 01D1     		bne	.L163
 2963 0fc2 314A     		ldr	r2, .L177+12
 2964 0fc4 00E0     		b	.L164
 2965              	.L163:
 2966 0fc6 7288     		ldrh	r2, [r6, #2]
 2967              	.L164:
 2968 0fc8 8A42     		cmp	r2, r1
 2969 0fca 04DC     		bgt	.L165
 2970 0fcc 002B     		cmp	r3, #0
 2971 0fce 01D1     		bne	.L166
 2972 0fd0 2D49     		ldr	r1, .L177+12
 2973 0fd2 00E0     		b	.L165
 2974              	.L166:
 2975 0fd4 7188     		ldrh	r1, [r6, #2]
 2976              	.L165:
 2977 0fd6 3378     		ldrb	r3, [r6]
 2978 0fd8 DA06     		lsl	r2, r3, #27
 2979 0fda 02D4     		bmi	.L167
 2980 0fdc 0124     		mov	r4, #1
 2981 0fde 6442     		neg	r4, r4
 2982 0fe0 00E0     		b	.L168
 2983              	.L167:
 2984 0fe2 B468     		ldr	r4, [r6, #8]
 2985              	.L168:
 2986 0fe4 7278     		ldrb	r2, [r6, #1]
 2987 0fe6 D307     		lsl	r3, r2, #31
 2988 0fe8 DB0F     		lsr	r3, r3, #31
 2989 0fea 1B06     		lsl	r3, r3, #24
 2990 0fec 1B0E     		lsr	r3, r3, #24
 2991 0fee 9207     		lsl	r2, r2, #30
 2992 0ff0 D20F     		lsr	r2, r2, #31
 2993 0ff2 0092     		str	r2, [sp]
 2994 0ff4 221C     		mov	r2, r4
 2995 0ff6 FFF7FEFF 		bl	ppp_send_config
 2996              		.loc 1 1638 0
 2997 0ffa 4346     		mov	r3, r8
 2998 0ffc 1868     		ldr	r0, [r3]
 2999 0ffe 2B78     		ldrb	r3, [r5]
 3000 1000 1A07     		lsl	r2, r3, #28
 3001 1002 01D4     		bmi	.L169
 3002 1004 2049     		ldr	r1, .L177+12
 3003 1006 06E0     		b	.L170
 3004              	.L169:
 3005 1008 204B     		ldr	r3, .L177+16
 3006 100a DB19     		add	r3, r3, r7
 3007 100c 5B88     		ldrh	r3, [r3, #2]
 3008 100e 6988     		ldrh	r1, [r5, #2]
 3009 1010 8B42     		cmp	r3, r1
 3010 1012 00D9     		bls	.L170
 3011 1014 191C     		mov	r1, r3
 3012              	.L170:
 3013 1016 2B78     		ldrb	r3, [r5]
 3014 1018 DA06     		lsl	r2, r3, #27
 3015 101a 01D4     		bmi	.L172
 3016 101c 0024     		mov	r4, #0
 3017 101e 00E0     		b	.L173
 3018              	.L172:
 3019 1020 AC68     		ldr	r4, [r5, #8]
 3020              	.L173:
 3021 1022 6A78     		ldrb	r2, [r5, #1]
 3022 1024 D307     		lsl	r3, r2, #31
 3023 1026 DB0F     		lsr	r3, r3, #31
 3024 1028 1B06     		lsl	r3, r3, #24
 3025 102a 1B0E     		lsr	r3, r3, #24
 3026 102c 9207     		lsl	r2, r2, #30
 3027 102e D20F     		lsr	r2, r2, #31
 3028 1030 0092     		str	r2, [sp]
 3029 1032 221C     		mov	r2, r4
 3030 1034 FFF7FEFF 		bl	ppp_recv_config
 3031              		.loc 1 1642 0
 3032 1038 3378     		ldrb	r3, [r6]
 3033 103a 1A07     		lsl	r2, r3, #28
 3034 103c 0DD5     		bpl	.L174
 3035              		.loc 1 1643 0
 3036 103e 1449     		ldr	r1, .L177+20
 3037 1040 4246     		mov	r2, r8
 3038 1042 1368     		ldr	r3, [r2]
 3039 1044 9B00     		lsl	r3, r3, #2
 3040 1046 7288     		ldrh	r2, [r6, #2]
 3041 1048 5A50     		str	r2, [r3, r1]
 3042              	.LBB24:
 3043              	.LBB25:
 3044              		.loc 1 2010 0
 3045 104a 124B     		ldr	r3, .L177+24
 3046 104c 0022     		mov	r2, #0
 3047 104e 1A60     		str	r2, [r3]
 3048              		.loc 1 2011 0
 3049 1050 114B     		ldr	r3, .L177+28
 3050 1052 1A60     		str	r2, [r3]
 3051              		.loc 1 2012 0
 3052 1054 114B     		ldr	r3, .L177+32
 3053 1056 1A60     		str	r2, [r3]
 3054 1058 06E0     		b	.L175
 3055              	.L174:
 3056              		.loc 1 2010 0
 3057 105a 0E4B     		ldr	r3, .L177+24
 3058 105c 0022     		mov	r2, #0
 3059 105e 1A60     		str	r2, [r3]
 3060              		.loc 1 2011 0
 3061 1060 0D4B     		ldr	r3, .L177+28
 3062 1062 1A60     		str	r2, [r3]
 3063              		.loc 1 2012 0
 3064 1064 0D4B     		ldr	r3, .L177+32
 3065 1066 1A60     		str	r2, [r3]
 3066              	.L175:
 3067              	.LBE25:
 3068              	.LBE24:
 3069              		.loc 1 1648 0
 3070 1068 4346     		mov	r3, r8
 3071 106a 1868     		ldr	r0, [r3]
 3072 106c FFF7FEFF 		bl	link_established
 3073              		.loc 1 1649 0
 3074 1070 01B0     		add	sp, sp, #4
 3075              		@ sp needed for prologue
 3076              	.LVL372:
 3077              	.LVL373:
 3078              	.LVL374:
 3079 1072 04BC     		pop	{r2}
 3080 1074 9046     		mov	r8, r2
 3081 1076 F0BC     		pop	{r4, r5, r6, r7}
 3082 1078 01BC     		pop	{r0}
 3083 107a 0047     		bx	r0
 3084              	.L178:
 3085              		.align	2
 3086              	.L177:
 3087 107c 00000000 		.word	lcp_hisoptions
 3088 1080 00000000 		.word	lcp_gotoptions
 3089 1084 00000000 		.word	lcp_allowoptions
 3090 1088 DC050000 		.word	1500
 3091 108c 00000000 		.word	lcp_wantoptions
 3092 1090 00000000 		.word	peer_mru
 3093 1094 00000000 		.word	lcp_echos_pending
 3094 1098 08000000 		.word	lcp_echo_number
 3095 109c 04000000 		.word	lcp_echo_timer_running
 3096              	.LFE307:
 3098              		.section	.rodata.str1.4
 3099              		.align	2
 3100              	.LC111:
 3101 040c 53657269 		.ascii	"Serial line is looped back.\012\000"
 3101      616C206C 
 3101      696E6520 
 3101      6973206C 
 3101      6F6F7065 
 3102 0429 000000   		.align	2
 3103              	.LC113:
 3104 042c 4C6F6F70 		.ascii	"Loopback detected\000"
 3104      6261636B 
 3104      20646574 
 3104      65637465 
 3104      6400
 3105 043e 0000     		.align	2
 3106              	.LC115:
 3107 0440 6C63705F 		.ascii	"lcp_nakci: received bad Nak!\012\000"
 3107      6E616B63 
 3107      693A2072 
 3107      65636569 
 3107      76656420 
 3108              		.text
 3109              		.align	2
 3110              		.code	16
 3111              		.thumb_func
 3113              	lcp_nakci:
 3114              	.LFB304:
 3115              		.loc 1 731 0
 3116 10a0 F0B5     		push	{r4, r5, r6, r7, lr}
 3117              	.LCFI34:
 3118 10a2 5F46     		mov	r7, fp
 3119 10a4 5646     		mov	r6, sl
 3120 10a6 4D46     		mov	r5, r9
 3121 10a8 4446     		mov	r4, r8
 3122 10aa F0B4     		push	{r4, r5, r6, r7}
 3123              	.LCFI35:
 3124              	.LVL375:
 3125 10ac A4B0     		sub	sp, sp, #144
 3126              	.LCFI36:
 3127 10ae 0190     		str	r0, [sp, #4]
 3128 10b0 0091     		str	r1, [sp]
 3129 10b2 151C     		mov	r5, r2
 3130              		.loc 1 732 0
 3131 10b4 0268     		ldr	r2, [r0]
 3132              	.LVL376:
 3133 10b6 5300     		lsl	r3, r2, #1
 3134 10b8 9B18     		add	r3, r3, r2
 3135 10ba DB00     		lsl	r3, r3, #3
 3136 10bc 9C46     		mov	ip, r3
 3137 10be C64B     		ldr	r3, .L226
 3138 10c0 6046     		mov	r0, ip
 3139              	.LVL377:
 3140 10c2 1F18     		add	r7, r3, r0
 3141              	.LVL378:
 3142              		.loc 1 742 0
 3143 10c4 0023     		mov	r3, #0
 3144 10c6 1E93     		str	r3, [sp, #120]
 3145 10c8 1FAA     		add	r2, sp, #124
 3146 10ca 1360     		str	r3, [r2]
 3147 10cc 20AA     		add	r2, sp, #128
 3148 10ce 1360     		str	r3, [r2]
 3149 10d0 21AA     		add	r2, sp, #132
 3150 10d2 1360     		str	r3, [r2]
 3151 10d4 22AA     		add	r2, sp, #136
 3152 10d6 1360     		str	r3, [r2]
 3153 10d8 23AA     		add	r2, sp, #140
 3154 10da 1360     		str	r3, [r2]
 3155              		.loc 1 743 0
 3156 10dc 18A9     		add	r1, sp, #96
 3157              	.LVL379:
 3158 10de 0B1C     		mov	r3, r1
 3159 10e0 3A1C     		mov	r2, r7
 3160 10e2 51CA     		ldmia	r2!, {r0, r4, r6}
 3161 10e4 51C3     		stmia	r3!, {r0, r4, r6}
 3162              	.LVL380:
 3163 10e6 51CA     		ldmia	r2!, {r0, r4, r6}
 3164 10e8 51C3     		stmia	r3!, {r0, r4, r6}
 3165 10ea 4C88     		ldrh	r4, [r1, #2]
 3166 10ec 8868     		ldr	r0, [r1, #8]
 3167 10ee 0B78     		ldrb	r3, [r1]
 3168 10f0 5A06     		lsl	r2, r3, #25
 3169              	.LVL381:
 3170 10f2 D20F     		lsr	r2, r2, #31
 3171 10f4 9246     		mov	sl, r2
 3172 10f6 9B06     		lsl	r3, r3, #26
 3173 10f8 DB0F     		lsr	r3, r3, #31
 3174 10fa 9846     		mov	r8, r3
 3175 10fc 4A78     		ldrb	r2, [r1, #1]
 3176 10fe 5307     		lsl	r3, r2, #29
 3177 1100 DB0F     		lsr	r3, r3, #31
 3178 1102 9B46     		mov	fp, r3
 3179 1104 4B69     		ldr	r3, [r1, #20]
 3180 1106 9946     		mov	r9, r3
 3181 1108 1307     		lsl	r3, r2, #28
 3182 110a DB0F     		lsr	r3, r3, #31
 3183 110c 1293     		str	r3, [sp, #72]
 3184 110e CE68     		ldr	r6, [r1, #12]
 3185 1110 1396     		str	r6, [sp, #76]
 3186 1112 D307     		lsl	r3, r2, #31
 3187 1114 DB0F     		lsr	r3, r3, #31
 3188 1116 1B06     		lsl	r3, r3, #24
 3189 1118 1B0E     		lsr	r3, r3, #24
 3190 111a 1493     		str	r3, [sp, #80]
 3191 111c 9207     		lsl	r2, r2, #30
 3192 111e D20F     		lsr	r2, r2, #31
 3193 1120 1592     		str	r2, [sp, #84]
 3194 1122 0969     		ldr	r1, [r1, #16]
 3195 1124 1691     		str	r1, [sp, #88]
 3196              		.loc 1 825 0
 3197 1126 3B78     		ldrb	r3, [r7]
 3198              	.LVL382:
 3199 1128 1907     		lsl	r1, r3, #28
 3200 112a 27D5     		bpl	.L180
 3201 112c 9423     		mov	r3, #148
 3202 112e 5B00     		lsl	r3, r3, #1
 3203 1130 7A88     		ldrh	r2, [r7, #2]
 3204 1132 9A42     		cmp	r2, r3
 3205 1134 22D0     		beq	.L180
 3206              		.loc 1 826 0
 3207 1136 032D     		cmp	r5, #3
 3208 1138 20DD     		ble	.L180
 3209 113a 009A     		ldr	r2, [sp]
 3210 113c 5378     		ldrb	r3, [r2, #1]
 3211 113e 042B     		cmp	r3, #4
 3212 1140 1CD1     		bne	.L180
 3213              	.LVL383:
 3214 1142 1378     		ldrb	r3, [r2]
 3215 1144 012B     		cmp	r3, #1
 3216 1146 19D1     		bne	.L180
 3217 1148 043D     		sub	r5, r5, #4
 3218 114a 9378     		ldrb	r3, [r2, #2]
 3219              	.LVL384:
 3220 114c 1B02     		lsl	r3, r3, #8
 3221              	.LVL385:
 3222 114e D278     		ldrb	r2, [r2, #3]
 3223 1150 1343     		orr	r3, r3, r2
 3224              	.LVL386:
 3225 1152 1793     		str	r3, [sp, #92]
 3226 1154 009B     		ldr	r3, [sp]
 3227              	.LVL387:
 3228 1156 0433     		add	r3, r3, #4
 3229 1158 0093     		str	r3, [sp]
 3230              	.LVL388:
 3231 115a 1EA9     		add	r1, sp, #120
 3232 115c 0B78     		ldrb	r3, [r1]
 3233 115e 0822     		mov	r2, #8
 3234 1160 1343     		orr	r3, r3, r2
 3235 1162 0B70     		strb	r3, [r1]
 3236 1164 9D4B     		ldr	r3, .L226+4
 3237 1166 6344     		add	r3, r3, ip
 3238 1168 5B88     		ldrh	r3, [r3, #2]
 3239 116a 179E     		ldr	r6, [sp, #92]
 3240 116c B342     		cmp	r3, r6
 3241 116e 02D2     		bcs	.L225
 3242              	.LVL389:
 3243 1170 9B4B     		ldr	r3, .L226+8
 3244 1172 9E42     		cmp	r6, r3
 3245 1174 02D8     		bhi	.L180
 3246              	.L225:
 3247 1176 1799     		ldr	r1, [sp, #92]
 3248 1178 1191     		str	r1, [sp, #68]
 3249 117a 00E0     		b	.L182
 3250              	.LVL390:
 3251              	.L180:
 3252 117c 1194     		str	r4, [sp, #68]
 3253              	.L182:
 3254              		.loc 1 836 0
 3255 117e 3B78     		ldrb	r3, [r7]
 3256 1180 DA06     		lsl	r2, r3, #27
 3257 1182 21D5     		bpl	.L183
 3258 1184 BB68     		ldr	r3, [r7, #8]
 3259 1186 0133     		add	r3, r3, #1
 3260 1188 1ED0     		beq	.L183
 3261              		.loc 1 837 0
 3262 118a 052D     		cmp	r5, #5
 3263 118c 1CDD     		ble	.L183
 3264 118e 009C     		ldr	r4, [sp]
 3265 1190 6378     		ldrb	r3, [r4, #1]
 3266 1192 062B     		cmp	r3, #6
 3267 1194 18D1     		bne	.L183
 3268              	.LVL391:
 3269 1196 2378     		ldrb	r3, [r4]
 3270 1198 022B     		cmp	r3, #2
 3271 119a 15D1     		bne	.L183
 3272 119c 063D     		sub	r5, r5, #6
 3273 119e A378     		ldrb	r3, [r4, #2]
 3274              	.LVL392:
 3275 11a0 1B02     		lsl	r3, r3, #8
 3276              	.LVL393:
 3277 11a2 E278     		ldrb	r2, [r4, #3]
 3278 11a4 1A43     		orr	r2, r2, r3
 3279              	.LVL394:
 3280 11a6 1202     		lsl	r2, r2, #8
 3281              	.LVL395:
 3282 11a8 2379     		ldrb	r3, [r4, #4]
 3283 11aa 1A43     		orr	r2, r2, r3
 3284              	.LVL396:
 3285 11ac 6079     		ldrb	r0, [r4, #5]
 3286 11ae 0634     		add	r4, r4, #6
 3287 11b0 0094     		str	r4, [sp]
 3288              	.LVL397:
 3289 11b2 1EAC     		add	r4, sp, #120
 3290 11b4 2378     		ldrb	r3, [r4]
 3291 11b6 1021     		mov	r1, #16
 3292 11b8 0B43     		orr	r3, r3, r1
 3293 11ba 2370     		strb	r3, [r4]
 3294 11bc BB68     		ldr	r3, [r7, #8]
 3295 11be 1843     		orr	r0, r0, r3
 3296 11c0 1202     		lsl	r2, r2, #8
 3297              	.LVL398:
 3298 11c2 1043     		orr	r0, r0, r2
 3299 11c4 1090     		str	r0, [sp, #64]
 3300 11c6 00E0     		b	.L184
 3301              	.LVL399:
 3302              	.L183:
 3303 11c8 1090     		str	r0, [sp, #64]
 3304              	.L184:
 3305              		.loc 1 847 0
 3306 11ca 3B78     		ldrb	r3, [r7]
 3307 11cc 5B06     		lsl	r3, r3, #25
 3308 11ce D90F     		lsr	r1, r3, #31
 3309 11d0 0029     		cmp	r1, #0
 3310 11d2 02D1     		bne	.L185
 3311 11d4 3B78     		ldrb	r3, [r7]
 3312 11d6 9E06     		lsl	r6, r3, #26
 3313 11d8 53D5     		bpl	.L186
 3314              	.L185:
 3315 11da 032D     		cmp	r5, #3
 3316 11dc 51DD     		ble	.L186
 3317 11de 0098     		ldr	r0, [sp]
 3318 11e0 0378     		ldrb	r3, [r0]
 3319 11e2 032B     		cmp	r3, #3
 3320 11e4 4DD1     		bne	.L186
 3321              	.LVL400:
 3322 11e6 4378     		ldrb	r3, [r0, #1]
 3323 11e8 032B     		cmp	r3, #3
 3324 11ea 4AD9     		bls	.L186
 3325 11ec 1C1C     		mov	r4, r3
 3326 11ee A542     		cmp	r5, r4
 3327 11f0 47DB     		blt	.L186
 3328              		.loc 1 851 0
 3329 11f2 ED1A     		sub	r5, r5, r3
 3330              		.loc 1 852 0
 3331 11f4 1EA8     		add	r0, sp, #120
 3332 11f6 0378     		ldrb	r3, [r0]
 3333 11f8 4022     		mov	r2, #64
 3334 11fa 9343     		bic	r3, r3, r2
 3335 11fc 8A01     		lsl	r2, r1, #6
 3336 11fe 1343     		orr	r3, r3, r2
 3337 1200 0370     		strb	r3, [r0]
 3338              		.loc 1 853 0
 3339 1202 3B78     		ldrb	r3, [r7]
 3340 1204 9B06     		lsl	r3, r3, #26
 3341 1206 DB0F     		lsr	r3, r3, #31
 3342 1208 0278     		ldrb	r2, [r0]
 3343 120a 2021     		mov	r1, #32
 3344 120c 8A43     		bic	r2, r2, r1
 3345 120e 5B01     		lsl	r3, r3, #5
 3346 1210 1A43     		orr	r2, r2, r3
 3347 1212 0270     		strb	r2, [r0]
 3348              		.loc 1 855 0
 3349 1214 0099     		ldr	r1, [sp]
 3350 1216 8B78     		ldrb	r3, [r1, #2]
 3351              	.LVL401:
 3352 1218 1B02     		lsl	r3, r3, #8
 3353              	.LVL402:
 3354 121a CA78     		ldrb	r2, [r1, #3]
 3355 121c 1A43     		orr	r2, r2, r3
 3356              	.LVL403:
 3357 121e 0431     		add	r1, r1, #4
 3358 1220 0091     		str	r1, [sp]
 3359              	.LVL404:
 3360              		.loc 1 856 0
 3361 1222 704B     		ldr	r3, .L226+12
 3362 1224 9A42     		cmp	r2, r3
 3363 1226 06D1     		bne	.L187
 3364 1228 042C     		cmp	r4, #4
 3365 122a 04D1     		bne	.L187
 3366              		.loc 1 862 0
 3367 122c 3B78     		ldrb	r3, [r7]
 3368 122e 5A06     		lsl	r2, r3, #25
 3369 1230 00D4     		bmi	.LCB3579
 3370 1232 DDE1     		b	.L188	@long jump
 3371              	.LCB3579:
 3372              	.LVL405:
 3373 1234 2AE0     		b	.L189
 3374              	.LVL406:
 3375              	.L187:
 3376              		.loc 1 867 0
 3377 1236 6C4B     		ldr	r3, .L226+16
 3378 1238 9A42     		cmp	r2, r3
 3379 123a 11D1     		bne	.L190
 3380 123c 052C     		cmp	r4, #5
 3381 123e 0FD1     		bne	.L190
 3382              		.loc 1 868 0
 3383 1240 009B     		ldr	r3, [sp]
 3384 1242 1A78     		ldrb	r2, [r3]
 3385              	.LVL407:
 3386 1244 0133     		add	r3, r3, #1
 3387 1246 0093     		str	r3, [sp]
 3388              	.LVL408:
 3389              		.loc 1 869 0
 3390 1248 3B78     		ldrb	r3, [r7]
 3391 124a 5C06     		lsl	r4, r3, #25
 3392 124c 04D4     		bmi	.L191
 3393 124e 5646     		mov	r6, sl
 3394 1250 0F96     		str	r6, [sp, #60]
 3395 1252 0020     		mov	r0, #0
 3396 1254 0E90     		str	r0, [sp, #56]
 3397 1256 1DE0     		b	.L192
 3398              	.L191:
 3399              		.loc 1 875 0
 3400 1258 3B79     		ldrb	r3, [r7, #4]
 3401 125a 9342     		cmp	r3, r2
 3402 125c 16D1     		bne	.L189
 3403 125e 10E0     		b	.L186
 3404              	.LVL409:
 3405              	.L190:
 3406              		.loc 1 890 0
 3407 1260 3B78     		ldrb	r3, [r7]
 3408 1262 5906     		lsl	r1, r3, #25
 3409 1264 04D4     		bmi	.L193
 3410 1266 5246     		mov	r2, sl
 3411              	.LVL410:
 3412 1268 0F92     		str	r2, [sp, #60]
 3413 126a 0020     		mov	r0, #0
 3414 126c 0E90     		str	r0, [sp, #56]
 3415 126e 03E0     		b	.L194
 3416              	.LVL411:
 3417              	.L193:
 3418 1270 4146     		mov	r1, r8
 3419 1272 0E91     		str	r1, [sp, #56]
 3420 1274 0020     		mov	r0, #0
 3421 1276 0F90     		str	r0, [sp, #60]
 3422              	.L194:
 3423              		.loc 1 895 0
 3424 1278 231F     		sub	r3, r4, #4
 3425 127a 0099     		ldr	r1, [sp]
 3426 127c C918     		add	r1, r1, r3
 3427 127e 0091     		str	r1, [sp]
 3428              	.LVL412:
 3429 1280 08E0     		b	.L192
 3430              	.LVL413:
 3431              	.L186:
 3432 1282 4246     		mov	r2, r8
 3433              	.LVL414:
 3434 1284 0E92     		str	r2, [sp, #56]
 3435 1286 5046     		mov	r0, sl
 3436 1288 0F90     		str	r0, [sp, #60]
 3437 128a 03E0     		b	.L192
 3438              	.LVL415:
 3439              	.L189:
 3440 128c 4046     		mov	r0, r8
 3441 128e 0E90     		str	r0, [sp, #56]
 3442 1290 0020     		mov	r0, #0
 3443 1292 0F90     		str	r0, [sp, #60]
 3444              	.LVL416:
 3445              	.L192:
 3446              		.loc 1 904 0
 3447 1294 7B78     		ldrb	r3, [r7, #1]
 3448 1296 5907     		lsl	r1, r3, #29
 3449 1298 2ED5     		bpl	.L195
 3450 129a 072D     		cmp	r5, #7
 3451 129c 2CDD     		ble	.L195
 3452 129e 009A     		ldr	r2, [sp]
 3453              	.LVL417:
 3454 12a0 5378     		ldrb	r3, [r2, #1]
 3455 12a2 082B     		cmp	r3, #8
 3456 12a4 28D1     		bne	.L195
 3457              	.LVL418:
 3458 12a6 1378     		ldrb	r3, [r2]
 3459 12a8 042B     		cmp	r3, #4
 3460 12aa 25D1     		bne	.L195
 3461 12ac 083D     		sub	r5, r5, #8
 3462 12ae 9178     		ldrb	r1, [r2, #2]
 3463              	.LVL419:
 3464 12b0 0902     		lsl	r1, r1, #8
 3465              	.LVL420:
 3466 12b2 D378     		ldrb	r3, [r2, #3]
 3467 12b4 1943     		orr	r1, r1, r3
 3468              	.LVL421:
 3469 12b6 1379     		ldrb	r3, [r2, #4]
 3470 12b8 9A46     		mov	sl, r3
 3471 12ba 5479     		ldrb	r4, [r2, #5]
 3472 12bc A046     		mov	r8, r4
 3473 12be 9679     		ldrb	r6, [r2, #6]
 3474 12c0 D479     		ldrb	r4, [r2, #7]
 3475 12c2 0832     		add	r2, r2, #8
 3476 12c4 0092     		str	r2, [sp]
 3477              	.LVL422:
 3478 12c6 1EA8     		add	r0, sp, #120
 3479 12c8 4378     		ldrb	r3, [r0, #1]
 3480 12ca 0422     		mov	r2, #4
 3481 12cc 1343     		orr	r3, r3, r2
 3482 12ce 4370     		strb	r3, [r0, #1]
 3483 12d0 464B     		ldr	r3, .L226+20
 3484 12d2 9942     		cmp	r1, r3
 3485 12d4 04D0     		beq	.L196
 3486 12d6 4846     		mov	r0, r9
 3487 12d8 0C90     		str	r0, [sp, #48]
 3488 12da 0020     		mov	r0, #0
 3489 12dc 0D90     		str	r0, [sp, #52]
 3490 12de 0FE0     		b	.L197
 3491              	.L196:
 3492 12e0 5146     		mov	r1, sl
 3493              	.LVL423:
 3494 12e2 0B02     		lsl	r3, r1, #8
 3495              	.LVL424:
 3496 12e4 4246     		mov	r2, r8
 3497 12e6 1343     		orr	r3, r3, r2
 3498              	.LVL425:
 3499 12e8 1B02     		lsl	r3, r3, #8
 3500              	.LVL426:
 3501 12ea 3343     		orr	r3, r3, r6
 3502              	.LVL427:
 3503 12ec 1B02     		lsl	r3, r3, #8
 3504              	.LVL428:
 3505 12ee 2343     		orr	r3, r3, r4
 3506 12f0 0C93     		str	r3, [sp, #48]
 3507 12f2 5846     		mov	r0, fp
 3508 12f4 0D90     		str	r0, [sp, #52]
 3509 12f6 03E0     		b	.L197
 3510              	.LVL429:
 3511              	.L195:
 3512 12f8 4846     		mov	r0, r9
 3513 12fa 0C90     		str	r0, [sp, #48]
 3514 12fc 5846     		mov	r0, fp
 3515 12fe 0D90     		str	r0, [sp, #52]
 3516              	.LVL430:
 3517              	.L197:
 3518              		.loc 1 915 0
 3519 1300 7B78     		ldrb	r3, [r7, #1]
 3520              	.LVL431:
 3521 1302 1807     		lsl	r0, r3, #28
 3522 1304 13D5     		bpl	.L198
 3523 1306 022D     		cmp	r5, #2
 3524 1308 11DD     		ble	.L198
 3525 130a 0099     		ldr	r1, [sp]
 3526 130c 4B78     		ldrb	r3, [r1, #1]
 3527 130e 032B     		cmp	r3, #3
 3528 1310 0DD1     		bne	.L198
 3529              	.LVL432:
 3530 1312 0B78     		ldrb	r3, [r1]
 3531 1314 0D2B     		cmp	r3, #13
 3532 1316 0AD1     		bne	.L198
 3533 1318 033D     		sub	r5, r5, #3
 3534 131a 0331     		add	r1, r1, #3
 3535 131c 0091     		str	r1, [sp]
 3536              	.LVL433:
 3537 131e 1EAB     		add	r3, sp, #120
 3538 1320 5A78     		ldrb	r2, [r3, #1]
 3539              	.LVL434:
 3540 1322 0821     		mov	r1, #8
 3541 1324 0A43     		orr	r2, r2, r1
 3542 1326 5A70     		strb	r2, [r3, #1]
 3543 1328 0022     		mov	r2, #0
 3544 132a 0B92     		str	r2, [sp, #44]
 3545 132c 01E0     		b	.L199
 3546              	.LVL435:
 3547              	.L198:
 3548 132e 129B     		ldr	r3, [sp, #72]
 3549 1330 0B93     		str	r3, [sp, #44]
 3550              	.L199:
 3551              		.loc 1 922 0
 3552 1332 3B78     		ldrb	r3, [r7]
 3553 1334 DB09     		lsr	r3, r3, #7
 3554 1336 002B     		cmp	r3, #0
 3555 1338 17D0     		beq	.L200
 3556 133a 052D     		cmp	r5, #5
 3557 133c 15DD     		ble	.L200
 3558 133e 009C     		ldr	r4, [sp]
 3559 1340 6378     		ldrb	r3, [r4, #1]
 3560 1342 062B     		cmp	r3, #6
 3561 1344 11D1     		bne	.L200
 3562              	.LVL436:
 3563 1346 2378     		ldrb	r3, [r4]
 3564 1348 052B     		cmp	r3, #5
 3565 134a 0ED1     		bne	.L200
 3566 134c 063D     		sub	r5, r5, #6
 3567 134e 0634     		add	r4, r4, #6
 3568 1350 0094     		str	r4, [sp]
 3569              	.LVL437:
 3570 1352 1EAB     		add	r3, sp, #120
 3571 1354 1A78     		ldrb	r2, [r3]
 3572              	.LVL438:
 3573 1356 8021     		mov	r1, #128
 3574 1358 4942     		neg	r1, r1
 3575 135a 0A43     		orr	r2, r2, r1
 3576 135c 1A70     		strb	r2, [r3]
 3577 135e FFF7FEFF 		bl	magic
 3578 1362 0A90     		str	r0, [sp, #40]
 3579 1364 0126     		mov	r6, #1
 3580 1366 0796     		str	r6, [sp, #28]
 3581              	.LVL439:
 3582 1368 03E0     		b	.L201
 3583              	.LVL440:
 3584              	.L200:
 3585 136a 1398     		ldr	r0, [sp, #76]
 3586 136c 0A90     		str	r0, [sp, #40]
 3587 136e 0021     		mov	r1, #0
 3588 1370 0791     		str	r1, [sp, #28]
 3589              	.LVL441:
 3590              	.L201:
 3591              		.loc 1 932 0
 3592 1372 7B78     		ldrb	r3, [r7, #1]
 3593 1374 DB07     		lsl	r3, r3, #31
 3594 1376 DB0F     		lsr	r3, r3, #31
 3595 1378 1B06     		lsl	r3, r3, #24
 3596 137a 002B     		cmp	r3, #0
 3597 137c 13D0     		beq	.L202
 3598 137e 012D     		cmp	r5, #1
 3599 1380 11DD     		ble	.L202
 3600 1382 009A     		ldr	r2, [sp]
 3601              	.LVL442:
 3602 1384 5378     		ldrb	r3, [r2, #1]
 3603 1386 022B     		cmp	r3, #2
 3604 1388 0DD1     		bne	.L202
 3605              	.LVL443:
 3606 138a 1378     		ldrb	r3, [r2]
 3607 138c 072B     		cmp	r3, #7
 3608 138e 0AD1     		bne	.L202
 3609 1390 023D     		sub	r5, r5, #2
 3610 1392 0232     		add	r2, r2, #2
 3611 1394 0092     		str	r2, [sp]
 3612              	.LVL444:
 3613 1396 1EAB     		add	r3, sp, #120
 3614 1398 5A78     		ldrb	r2, [r3, #1]
 3615 139a 0121     		mov	r1, #1
 3616 139c 0A43     		orr	r2, r2, r1
 3617 139e 5A70     		strb	r2, [r3, #1]
 3618 13a0 0023     		mov	r3, #0
 3619 13a2 0993     		str	r3, [sp, #36]
 3620 13a4 01E0     		b	.L203
 3621              	.LVL445:
 3622              	.L202:
 3623 13a6 149C     		ldr	r4, [sp, #80]
 3624 13a8 0994     		str	r4, [sp, #36]
 3625              	.L203:
 3626              		.loc 1 935 0
 3627 13aa 7B78     		ldrb	r3, [r7, #1]
 3628 13ac 9E07     		lsl	r6, r3, #30
 3629 13ae 1FD5     		bpl	.L204
 3630 13b0 012D     		cmp	r5, #1
 3631 13b2 1DDD     		ble	.L204
 3632 13b4 0098     		ldr	r0, [sp]
 3633 13b6 4378     		ldrb	r3, [r0, #1]
 3634 13b8 022B     		cmp	r3, #2
 3635 13ba 19D1     		bne	.L204
 3636              	.LVL446:
 3637 13bc 0378     		ldrb	r3, [r0]
 3638 13be 082B     		cmp	r3, #8
 3639 13c0 16D1     		bne	.L204
 3640 13c2 023D     		sub	r5, r5, #2
 3641 13c4 0230     		add	r0, r0, #2
 3642 13c6 0090     		str	r0, [sp]
 3643              	.LVL447:
 3644 13c8 1EAB     		add	r3, sp, #120
 3645 13ca 5A78     		ldrb	r2, [r3, #1]
 3646              	.LVL448:
 3647 13cc 0221     		mov	r1, #2
 3648 13ce 0A43     		orr	r2, r2, r1
 3649 13d0 5A70     		strb	r2, [r3, #1]
 3650 13d2 0021     		mov	r1, #0
 3651 13d4 0891     		str	r1, [sp, #32]
 3652 13d6 0DE0     		b	.L205
 3653              	.L227:
 3654              		.align	2
 3655              	.L226:
 3656 13d8 00000000 		.word	lcp_gotoptions
 3657 13dc 00000000 		.word	lcp_wantoptions
 3658 13e0 27010000 		.word	295
 3659 13e4 23C00000 		.word	49187
 3660 13e8 23C20000 		.word	49699
 3661 13ec 25C00000 		.word	49189
 3662              	.LVL449:
 3663              	.L204:
 3664 13f0 159A     		ldr	r2, [sp, #84]
 3665              	.LVL450:
 3666 13f2 0892     		str	r2, [sp, #32]
 3667              	.LVL451:
 3668              	.L205:
 3669              		.loc 1 955 0
 3670 13f4 022D     		cmp	r5, #2
 3671 13f6 00DC     		bgt	.LCB3974
 3672 13f8 A1E0     		b	.L206	@long jump
 3673              	.LCB3974:
 3674              		.loc 1 956 0
 3675 13fa 009B     		ldr	r3, [sp]
 3676 13fc 1C78     		ldrb	r4, [r3]
 3677              	.LVL452:
 3678 13fe 191C     		mov	r1, r3
 3679              	.LVL453:
 3680 1400 0131     		add	r1, r1, #1
 3681              		.loc 1 957 0
 3682 1402 0878     		ldrb	r0, [r1]
 3683              	.LVL454:
 3684              		.loc 1 958 0
 3685 1404 0128     		cmp	r0, #1
 3686 1406 00DC     		bgt	.LCB3984
 3687 1408 F2E0     		b	.L188	@long jump
 3688              	.LCB3984:
 3689 140a 2D1A     		sub	r5, r5, r0
 3690 140c 00D5     		bpl	.LCB3987
 3691 140e EFE0     		b	.L188	@long jump
 3692              	.LCB3987:
 3693              		.loc 1 957 0
 3694 1410 4E1C     		add	r6, r1, #1
 3695              	.LVL455:
 3696              		.loc 1 965 0
 3697 1412 1EA9     		add	r1, sp, #120
 3698 1414 0B78     		ldrb	r3, [r1]
 3699 1416 1A07     		lsl	r2, r3, #28
 3700 1418 D20F     		lsr	r2, r2, #31
 3701 141a 0292     		str	r2, [sp, #8]
 3702              		.loc 1 975 0
 3703 141c DA06     		lsl	r2, r3, #27
 3704 141e D20F     		lsr	r2, r2, #31
 3705 1420 0392     		str	r2, [sp, #12]
 3706              		.loc 1 981 0
 3707 1422 5A06     		lsl	r2, r3, #25
 3708 1424 D20F     		lsr	r2, r2, #31
 3709 1426 0492     		str	r2, [sp, #16]
 3710 1428 9A06     		lsl	r2, r3, #26
 3711 142a D20F     		lsr	r2, r2, #31
 3712 142c 0592     		str	r2, [sp, #20]
 3713              		.loc 1 986 0
 3714 142e 1B06     		lsl	r3, r3, #24
 3715 1430 DB0F     		lsr	r3, r3, #31
 3716 1432 5A1E     		sub	r2, r3, #1
 3717 1434 9341     		sbc	r3, r3, r2
 3718 1436 0693     		str	r3, [sp, #24]
 3719              		.loc 1 992 0
 3720 1438 4A78     		ldrb	r2, [r1, #1]
 3721 143a D307     		lsl	r3, r2, #31
 3722 143c DB0F     		lsr	r3, r3, #31
 3723 143e 1B06     		lsl	r3, r3, #24
 3724 1440 1B0E     		lsr	r3, r3, #24
 3725 1442 9B46     		mov	fp, r3
 3726              		.loc 1 998 0
 3727 1444 9307     		lsl	r3, r2, #30
 3728 1446 DB0F     		lsr	r3, r3, #31
 3729 1448 9946     		mov	r9, r3
 3730              		.loc 1 1004 0
 3731 144a 5207     		lsl	r2, r2, #29
 3732 144c D20F     		lsr	r2, r2, #31
 3733 144e 9246     		mov	sl, r2
 3734              		.loc 1 963 0
 3735 1450 6E49     		ldr	r1, .L228
 3736 1452 8846     		mov	r8, r1
 3737              		.loc 1 965 0
 3738 1454 9422     		mov	r2, #148
 3739 1456 5300     		lsl	r3, r2, #1
 3740 1458 9C46     		mov	ip, r3
 3741 145a 0BE0     		b	.L207
 3742              	.LVL456:
 3743              	.L219:
 3744              		.loc 1 961 0
 3745 145c 831E     		sub	r3, r0, #2
 3746              	.LVL457:
 3747 145e F318     		add	r3, r6, r3
 3748              	.LVL458:
 3749              		.loc 1 956 0
 3750 1460 1C78     		ldrb	r4, [r3]
 3751 1462 591C     		add	r1, r3, #1
 3752              	.LVL459:
 3753              		.loc 1 957 0
 3754 1464 0878     		ldrb	r0, [r1]
 3755              		.loc 1 958 0
 3756 1466 0128     		cmp	r0, #1
 3757 1468 00DC     		bgt	.LCB4080
 3758 146a C1E0     		b	.L188	@long jump
 3759              	.LCB4080:
 3760 146c 2D1A     		sub	r5, r5, r0
 3761 146e 00D5     		bpl	.LCB4083
 3762 1470 BEE0     		b	.L188	@long jump
 3763              	.LCB4083:
 3764              		.loc 1 957 0
 3765 1472 4E1C     		add	r6, r1, #1
 3766              	.LVL460:
 3767              	.L207:
 3768              		.loc 1 963 0
 3769 1474 082C     		cmp	r4, #8
 3770 1476 60D8     		bhi	.L208
 3771 1478 A300     		lsl	r3, r4, #2
 3772              	.LVL461:
 3773 147a 4446     		mov	r4, r8
 3774              	.LVL462:
 3775 147c E358     		ldr	r3, [r4, r3]
 3776 147e 9F46     		mov	pc, r3
 3777              		.section	.rodata
 3778              		.align	2
 3779              	.L216:
 3780 0000 3A150000 		.word	.L208
 3781 0004 80140000 		.word	.L209
 3782 0008 AE140000 		.word	.L210
 3783 000c CC140000 		.word	.L211
 3784 0010 2A150000 		.word	.L212
 3785 0014 EC140000 		.word	.L213
 3786 0018 3A150000 		.word	.L208
 3787 001c 00150000 		.word	.L214
 3788 0020 18150000 		.word	.L215
 3789              		.text
 3790              	.L209:
 3791              		.loc 1 965 0
 3792 1480 3B78     		ldrb	r3, [r7]
 3793 1482 1907     		lsl	r1, r3, #28
 3794 1484 03D5     		bpl	.L217
 3795 1486 7B88     		ldrh	r3, [r7, #2]
 3796 1488 6345     		cmp	r3, ip
 3797 148a 00D0     		beq	.LCB4113
 3798 148c B0E0     		b	.L188	@long jump
 3799              	.LCB4113:
 3800              	.L217:
 3801 148e 029A     		ldr	r2, [sp, #8]
 3802 1490 002A     		cmp	r2, #0
 3803 1492 00D0     		beq	.LCB4117
 3804 1494 ACE0     		b	.L188	@long jump
 3805              	.LCB4117:
 3806 1496 0428     		cmp	r0, #4
 3807 1498 00D0     		beq	.LCB4119
 3808 149a A9E0     		b	.L188	@long jump
 3809              	.LCB4119:
 3810              		.loc 1 969 0
 3811 149c 3378     		ldrb	r3, [r6]
 3812              	.LVL463:
 3813 149e 1B02     		lsl	r3, r3, #8
 3814              	.LVL464:
 3815 14a0 7278     		ldrb	r2, [r6, #1]
 3816 14a2 1343     		orr	r3, r3, r2
 3817              	.LVL465:
 3818              		.loc 1 970 0
 3819 14a4 5A4C     		ldr	r4, .L228+4
 3820 14a6 A342     		cmp	r3, r4
 3821 14a8 47D8     		bhi	.L208
 3822 14aa 1193     		str	r3, [sp, #68]
 3823 14ac 45E0     		b	.L208
 3824              	.LVL466:
 3825              	.L210:
 3826              		.loc 1 975 0
 3827 14ae 3B78     		ldrb	r3, [r7]
 3828 14b0 D906     		lsl	r1, r3, #27
 3829 14b2 03D5     		bpl	.L218
 3830 14b4 BB68     		ldr	r3, [r7, #8]
 3831 14b6 0133     		add	r3, r3, #1
 3832 14b8 00D0     		beq	.LCB4150
 3833 14ba 99E0     		b	.L188	@long jump
 3834              	.LCB4150:
 3835              	.L218:
 3836 14bc 039A     		ldr	r2, [sp, #12]
 3837 14be 002A     		cmp	r2, #0
 3838 14c0 00D0     		beq	.LCB4154
 3839 14c2 95E0     		b	.L188	@long jump
 3840              	.LCB4154:
 3841 14c4 0628     		cmp	r0, #6
 3842 14c6 00D0     		beq	.LCB4156
 3843 14c8 92E0     		b	.L188	@long jump
 3844              	.LCB4156:
 3845 14ca 36E0     		b	.L208
 3846              	.L211:
 3847              		.loc 1 981 0
 3848 14cc 3B78     		ldrb	r3, [r7]
 3849 14ce 5C06     		lsl	r4, r3, #25
 3850 14d0 00D5     		bpl	.LCB4168
 3851 14d2 8DE0     		b	.L188	@long jump
 3852              	.LCB4168:
 3853 14d4 0499     		ldr	r1, [sp, #16]
 3854 14d6 0029     		cmp	r1, #0
 3855 14d8 00D0     		beq	.LCB4171
 3856 14da 89E0     		b	.L188	@long jump
 3857              	.LCB4171:
 3858 14dc 3B78     		ldrb	r3, [r7]
 3859 14de 9A06     		lsl	r2, r3, #26
 3860 14e0 00D5     		bpl	.LCB4179
 3861 14e2 85E0     		b	.L188	@long jump
 3862              	.LCB4179:
 3863 14e4 059B     		ldr	r3, [sp, #20]
 3864 14e6 002B     		cmp	r3, #0
 3865 14e8 27D0     		beq	.L208
 3866 14ea 81E0     		b	.L188
 3867              	.L213:
 3868              		.loc 1 986 0
 3869 14ec 3B78     		ldrb	r3, [r7]
 3870 14ee DB09     		lsr	r3, r3, #7
 3871 14f0 002B     		cmp	r3, #0
 3872 14f2 7DD1     		bne	.L188
 3873 14f4 069C     		ldr	r4, [sp, #24]
 3874 14f6 002C     		cmp	r4, #0
 3875 14f8 7AD1     		bne	.L188
 3876 14fa 0628     		cmp	r0, #6
 3877 14fc 78D1     		bne	.L188
 3878 14fe 1CE0     		b	.L208
 3879              	.L214:
 3880              		.loc 1 992 0
 3881 1500 7B78     		ldrb	r3, [r7, #1]
 3882 1502 DB07     		lsl	r3, r3, #31
 3883 1504 DB0F     		lsr	r3, r3, #31
 3884 1506 1B06     		lsl	r3, r3, #24
 3885 1508 002B     		cmp	r3, #0
 3886 150a 71D1     		bne	.L188
 3887 150c 5946     		mov	r1, fp
 3888 150e 0029     		cmp	r1, #0
 3889 1510 6ED1     		bne	.L188
 3890 1512 0228     		cmp	r0, #2
 3891 1514 6CD1     		bne	.L188
 3892 1516 10E0     		b	.L208
 3893              	.L215:
 3894              		.loc 1 998 0
 3895 1518 7B78     		ldrb	r3, [r7, #1]
 3896 151a 9A07     		lsl	r2, r3, #30
 3897 151c 68D4     		bmi	.L188
 3898 151e 4B46     		mov	r3, r9
 3899 1520 002B     		cmp	r3, #0
 3900 1522 65D1     		bne	.L188
 3901 1524 0228     		cmp	r0, #2
 3902 1526 63D1     		bne	.L188
 3903 1528 07E0     		b	.L208
 3904              	.L212:
 3905              		.loc 1 1004 0
 3906 152a 7B78     		ldrb	r3, [r7, #1]
 3907 152c 5C07     		lsl	r4, r3, #29
 3908 152e 5FD4     		bmi	.L188
 3909 1530 5146     		mov	r1, sl
 3910 1532 0029     		cmp	r1, #0
 3911 1534 5CD1     		bne	.L188
 3912 1536 0828     		cmp	r0, #8
 3913 1538 5AD1     		bne	.L188
 3914              	.LVL467:
 3915              	.L208:
 3916              		.loc 1 955 0
 3917 153a 022D     		cmp	r5, #2
 3918 153c 8EDC     		bgt	.L219
 3919              	.LVL468:
 3920              	.L206:
 3921              		.loc 1 1013 0
 3922 153e 002D     		cmp	r5, #0
 3923 1540 56D1     		bne	.L188
 3924              		.loc 1 1020 0
 3925 1542 019A     		ldr	r2, [sp, #4]
 3926 1544 9368     		ldr	r3, [r2, #8]
 3927              	.LVL469:
 3928 1546 092B     		cmp	r3, #9
 3929 1548 01D1     		bne	.L220
 3930              	.LVL470:
 3931 154a 0120     		mov	r0, #1
 3932              	.LVL471:
 3933 154c 55E0     		b	.L221
 3934              	.LVL472:
 3935              	.L220:
 3936              		.loc 1 1021 0
 3937 154e 079B     		ldr	r3, [sp, #28]
 3938 1550 002B     		cmp	r3, #0
 3939 1552 01D1     		bne	.L222
 3940              	.LVL473:
 3941 1554 0024     		mov	r4, #0
 3942              	.LVL474:
 3943 1556 0EE0     		b	.L223
 3944              	.LVL475:
 3945              	.L222:
 3946              		.loc 1 1022 0
 3947 1558 169C     		ldr	r4, [sp, #88]
 3948              	.LVL476:
 3949 155a 0134     		add	r4, r4, #1
 3950 155c 2D4B     		ldr	r3, .L228+8
 3951 155e 1B68     		ldr	r3, [r3]
 3952 1560 9C42     		cmp	r4, r3
 3953 1562 08DB     		blt	.L223
 3954              		.loc 1 1023 0
 3955 1564 2C49     		ldr	r1, .L228+12
 3956 1566 0220     		mov	r0, #2
 3957              	.LVL477:
 3958 1568 FFF7FEFF 		bl	ppp_trace
 3959              		.loc 1 1024 0
 3960 156c 019D     		ldr	r5, [sp, #4]
 3961              	.LVL478:
 3962 156e 2868     		ldr	r0, [r5]
 3963 1570 2A49     		ldr	r1, .L228+16
 3964 1572 FFF7FEFF 		bl	lcp_close
 3965              	.LVL479:
 3966              	.L223:
 3967              		.loc 1 1029 0
 3968 1576 18AA     		add	r2, sp, #96
 3969 1578 11AE     		add	r6, sp, #68
 3970              	.LVL480:
 3971 157a 3688     		ldrh	r6, [r6]
 3972 157c 5680     		strh	r6, [r2, #2]
 3973 157e 1098     		ldr	r0, [sp, #64]
 3974              	.LVL481:
 3975 1580 9060     		str	r0, [r2, #8]
 3976 1582 1378     		ldrb	r3, [r2]
 3977 1584 4021     		mov	r1, #64
 3978 1586 8B43     		bic	r3, r3, r1
 3979 1588 0F9D     		ldr	r5, [sp, #60]
 3980              	.LVL482:
 3981 158a A901     		lsl	r1, r5, #6
 3982 158c 0B43     		orr	r3, r3, r1
 3983 158e 1370     		strb	r3, [r2]
 3984 1590 1378     		ldrb	r3, [r2]
 3985 1592 2021     		mov	r1, #32
 3986 1594 8B43     		bic	r3, r3, r1
 3987 1596 0E9E     		ldr	r6, [sp, #56]
 3988 1598 7101     		lsl	r1, r6, #5
 3989 159a 0B43     		orr	r3, r3, r1
 3990 159c 1370     		strb	r3, [r2]
 3991 159e 5378     		ldrb	r3, [r2, #1]
 3992 15a0 0421     		mov	r1, #4
 3993 15a2 8B43     		bic	r3, r3, r1
 3994 15a4 0D98     		ldr	r0, [sp, #52]
 3995 15a6 8100     		lsl	r1, r0, #2
 3996 15a8 0B43     		orr	r3, r3, r1
 3997 15aa 5370     		strb	r3, [r2, #1]
 3998 15ac 0C99     		ldr	r1, [sp, #48]
 3999 15ae 5161     		str	r1, [r2, #20]
 4000 15b0 0120     		mov	r0, #1
 4001 15b2 5378     		ldrb	r3, [r2, #1]
 4002 15b4 0821     		mov	r1, #8
 4003 15b6 8B43     		bic	r3, r3, r1
 4004 15b8 0B9D     		ldr	r5, [sp, #44]
 4005 15ba E900     		lsl	r1, r5, #3
 4006 15bc 0B43     		orr	r3, r3, r1
 4007 15be 5370     		strb	r3, [r2, #1]
 4008 15c0 0A9E     		ldr	r6, [sp, #40]
 4009 15c2 D660     		str	r6, [r2, #12]
 4010 15c4 5378     		ldrb	r3, [r2, #1]
 4011 15c6 8343     		bic	r3, r3, r0
 4012 15c8 0999     		ldr	r1, [sp, #36]
 4013 15ca 0140     		and	r1, r1, r0
 4014 15cc 0B43     		orr	r3, r3, r1
 4015 15ce 5370     		strb	r3, [r2, #1]
 4016 15d0 0899     		ldr	r1, [sp, #32]
 4017 15d2 0840     		and	r0, r0, r1
 4018 15d4 5378     		ldrb	r3, [r2, #1]
 4019 15d6 0221     		mov	r1, #2
 4020 15d8 8B43     		bic	r3, r3, r1
 4021 15da 4000     		lsl	r0, r0, #1
 4022 15dc 0343     		orr	r3, r3, r0
 4023 15de 5370     		strb	r3, [r2, #1]
 4024 15e0 1461     		str	r4, [r2, #16]
 4025 15e2 3B1C     		mov	r3, r7
 4026 15e4 70CA     		ldmia	r2!, {r4, r5, r6}
 4027 15e6 70C3     		stmia	r3!, {r4, r5, r6}
 4028              	.LVL483:
 4029 15e8 13CA     		ldmia	r2!, {r0, r1, r4}
 4030 15ea 13C3     		stmia	r3!, {r0, r1, r4}
 4031 15ec 0120     		mov	r0, #1
 4032 15ee 04E0     		b	.L221
 4033              	.LVL484:
 4034              	.L188:
 4035              		.loc 1 1035 0
 4036 15f0 0B49     		ldr	r1, .L228+20
 4037 15f2 0320     		mov	r0, #3
 4038              	.LVL485:
 4039 15f4 FFF7FEFF 		bl	ppp_trace
 4040              	.LVL486:
 4041 15f8 0020     		mov	r0, #0
 4042              	.LVL487:
 4043              	.L221:
 4044              		.loc 1 1037 0
 4045 15fa 24B0     		add	sp, sp, #144
 4046              		@ sp needed for prologue
 4047              	.LVL488:
 4048              	.LVL489:
 4049              	.LVL490:
 4050 15fc 3CBC     		pop	{r2, r3, r4, r5}
 4051 15fe 9046     		mov	r8, r2
 4052 1600 9946     		mov	r9, r3
 4053 1602 A246     		mov	sl, r4
 4054 1604 AB46     		mov	fp, r5
 4055 1606 F0BC     		pop	{r4, r5, r6, r7}
 4056 1608 02BC     		pop	{r1}
 4057 160a 0847     		bx	r1
 4058              	.L229:
 4059              		.align	2
 4060              	.L228:
 4061 160c 00000000 		.word	.L216
 4062 1610 27010000 		.word	295
 4063 1614 00000000 		.word	lcp_loopbackfail
 4064 1618 0C040000 		.word	.LC111
 4065 161c 2C040000 		.word	.LC113
 4066 1620 40040000 		.word	.LC115
 4067              	.LFE304:
 4069              		.section	.rodata.str1.4
 4070 045e 0000     		.align	2
 4071              	.LC121:
 4072 0460 6C63705F 		.ascii	"lcp_reqci: bad CI length!\012\000"
 4072      72657163 
 4072      693A2062 
 4072      61642043 
 4072      49206C65 
 4073 047b 00       		.align	2
 4074              	.LC124:
 4075 047c 6C63705F 		.ascii	"lcp_reqci: Reject MRU - not allowed\012\000"
 4075      72657163 
 4075      693A2052 
 4075      656A6563 
 4075      74204D52 
 4076 04a1 000000   		.align	2
 4077              	.LC126:
 4078 04a4 6C63705F 		.ascii	"lcp_reqci: Reject MRU - bad length\012\000"
 4078      72657163 
 4078      693A2052 
 4078      656A6563 
 4078      74204D52 
 4079              		.align	2
 4080              	.LC128:
 4081 04c8 6C63705F 		.ascii	"lcp_reqci: Nak - MRU too small\012\000"
 4081      72657163 
 4081      693A204E 
 4081      616B202D 
 4081      204D5255 
 4082              		.align	2
 4083              	.LC130:
 4084 04e8 204D5255 		.ascii	" MRU %d\000"
 4084      20256400 
 4085              		.align	2
 4086              	.LC132:
 4087 04f0 6C63705F 		.ascii	"lcp_reqci: Reject ASYNCMAP not allowed\012\000"
 4087      72657163 
 4087      693A2052 
 4087      656A6563 
 4087      74204153 
 4088              		.align	2
 4089              	.LC134:
 4090 0518 6C63705F 		.ascii	"lcp_reqci: Reject ASYNCMAP bad length\012\000"
 4090      72657163 
 4090      693A2052 
 4090      656A6563 
 4090      74204153 
 4091 053f 00       		.align	2
 4092              	.LC136:
 4093 0540 6C63705F 		.ascii	"lcp_reqci: Nak ASYNCMAP %lX missing %lX\012\000"
 4093      72657163 
 4093      693A204E 
 4093      616B2041 
 4093      53594E43 
 4094 0569 000000   		.align	2
 4095              	.LC138:
 4096 056c 20415359 		.ascii	" ASYNCMAP=%lX\000"
 4096      4E434D41 
 4096      503D256C 
 4096      5800
 4097 057a 0000     		.align	2
 4098              	.LC140:
 4099 057c 6C63705F 		.ascii	"lcp_reqci: Reject AUTHTYPE missing arg\012\000"
 4099      72657163 
 4099      693A2052 
 4099      656A6563 
 4099      74204155 
 4100              		.align	2
 4101              	.LC142:
 4102 05a4 6C63705F 		.ascii	"lcp_reqci: Reject AUTHTYPE not allowed\012\000"
 4102      72657163 
 4102      693A2052 
 4102      656A6563 
 4102      74204155 
 4103              		.align	2
 4104              	.LC144:
 4105 05cc 6C63705F 		.ascii	"lcp_reqci: Reject AUTHTYPE PAP already accepted\012"
 4105      72657163 
 4105      693A2052 
 4105      656A6563 
 4105      74204155 
 4106 05fc 00       		.ascii	"\000"
 4107 05fd 000000   		.align	2
 4108              	.LC146:
 4109 0600 6C63705F 		.ascii	"lcp_reqci: Reject AUTHTYPE PAP bad len\012\000"
 4109      72657163 
 4109      693A2052 
 4109      656A6563 
 4109      74204155 
 4110              		.align	2
 4111              	.LC148:
 4112 0628 6C63705F 		.ascii	"lcp_reqci: Nak AUTHTYPE PAP not allowed\012\000"
 4112      72657163 
 4112      693A204E 
 4112      616B2041 
 4112      55544854 
 4113 0651 000000   		.align	2
 4114              	.LC150:
 4115 0654 20504150 		.ascii	" PAP (%X)\000"
 4115      20282558 
 4115      2900
 4116 065e 0000     		.align	2
 4117              	.LC152:
 4118 0660 6C63705F 		.ascii	"lcp_reqci: Reject AUTHTYPE CHAP accepted PAP\012\000"
 4118      72657163 
 4118      693A2052 
 4118      656A6563 
 4118      74204155 
 4119 068e 0000     		.align	2
 4120              	.LC154:
 4121 0690 6C63705F 		.ascii	"lcp_reqci: Reject AUTHTYPE CHAP bad len\012\000"
 4121      72657163 
 4121      693A2052 
 4121      656A6563 
 4121      74204155 
 4122 06b9 000000   		.align	2
 4123              	.LC156:
 4124 06bc 6C63705F 		.ascii	"lcp_reqci: Nak AUTHTYPE CHAP not allowed\012\000"
 4124      72657163 
 4124      693A204E 
 4124      616B2041 
 4124      55544854 
 4125 06e6 0000     		.align	2
 4126              	.LC158:
 4127 06e8 6C63705F 		.ascii	"lcp_reqci: Nak AUTHTYPE CHAP digest=%d\012\000"
 4127      72657163 
 4127      693A204E 
 4127      616B2041 
 4127      55544854 
 4128              		.align	2
 4129              	.LC160:
 4130 0710 20434841 		.ascii	" CHAP %X,%d\000"
 4130      50202558 
 4130      2C256400 
 4131              		.align	2
 4132              	.LC162:
 4133 071c 6C63705F 		.ascii	"lcp_reqci: Nak AUTHTYPE %d req CHAP\012\000"
 4133      72657163 
 4133      693A204E 
 4133      616B2041 
 4133      55544854 
 4134 0741 000000   		.align	2
 4135              	.LC164:
 4136 0744 6C63705F 		.ascii	"lcp_reqci: Nak AUTHTYPE %d req PAP\012\000"
 4136      72657163 
 4136      693A204E 
 4136      616B2041 
 4136      55544854 
 4137              		.align	2
 4138              	.LC166:
 4139 0768 20515541 		.ascii	" QUALITY (%x %x)\000"
 4139      4C495459 
 4139      20282578 
 4139      20257829 
 4139      00
 4140 0779 000000   		.align	2
 4141              	.LC168:
 4142 077c 204D4147 		.ascii	" MAGICNUMBER (%lX)\000"
 4142      49434E55 
 4142      4D424552 
 4142      2028256C 
 4142      582900
 4143 078f 00       		.align	2
 4144              	.LC170:
 4145 0790 2050434F 		.ascii	" PCOMPRESSION\000"
 4145      4D505245 
 4145      5353494F 
 4145      4E00
 4146 079e 0000     		.align	2
 4147              	.LC172:
 4148 07a0 20414343 		.ascii	" ACCOMPRESSION\000"
 4148      4F4D5052 
 4148      45535349 
 4148      4F4E00
 4149 07af 00       		.align	2
 4150              	.LC174:
 4151 07b0 2043495F 		.ascii	" CI_MRRU\000"
 4151      4D525255 
 4151      00
 4152 07b9 000000   		.align	2
 4153              	.LC176:
 4154 07bc 2043495F 		.ascii	" CI_SSNHF\000"
 4154      53534E48 
 4154      4600
 4155 07c6 0000     		.align	2
 4156              	.LC178:
 4157 07c8 2043495F 		.ascii	" CI_EPDISC\000"
 4157      45504449 
 4157      534300
 4158 07d3 00       		.align	2
 4159              	.LC180:
 4160 07d4 20756E6B 		.ascii	" unknown %d\000"
 4160      6E6F776E 
 4160      20256400 
 4161              		.align	2
 4162              	.LC182:
 4163 07e0 6C63705F 		.ascii	"lcp_reqci: rcvd%s\012\000"
 4163      72657163 
 4163      693A2072 
 4163      63766425 
 4163      730A00
 4164 07f3 00       		.align	2
 4165              	.LC184:
 4166 07f4 6C63705F 		.ascii	"lcp_reqci: %s\012\000"
 4166      72657163 
 4166      693A2025 
 4166      730A00
 4167 0803 00       		.align	2
 4168              	.LC186:
 4169 0804 41434B00 		.ascii	"ACK\000"
 4170              		.align	2
 4171              	.LC188:
 4172 0808 52454A00 		.ascii	"REJ\000"
 4173              		.align	2
 4174              	.LC190:
 4175 080c 4E414B00 		.ascii	"NAK\000"
 4176              		.align	2
 4177              	.LC192:
 4178 0810 6C63705F 		.ascii	"lcp_reqci: returning CONF%s.\012\000"
 4178      72657163 
 4178      693A2072 
 4178      65747572 
 4178      6E696E67 
 4179              		.text
 4180              		.align	2
 4181              		.code	16
 4182              		.thumb_func
 4184              	lcp_reqci:
 4185              	.LFB306:
 4186              		.loc 1 1198 0
 4187 1624 F0B5     		push	{r4, r5, r6, r7, lr}
 4188              	.LCFI37:
 4189 1626 5F46     		mov	r7, fp
 4190 1628 5646     		mov	r6, sl
 4191 162a 4D46     		mov	r5, r9
 4192 162c 4446     		mov	r4, r8
 4193 162e F0B4     		push	{r4, r5, r6, r7}
 4194              	.LCFI38:
 4195              	.LVL491:
 4196 1630 A3B0     		sub	sp, sp, #140
 4197              	.LCFI39:
 4198 1632 0591     		str	r1, [sp, #20]
 4199 1634 0492     		str	r2, [sp, #16]
 4200 1636 0393     		str	r3, [sp, #12]
 4201              		.loc 1 1199 0
 4202 1638 0268     		ldr	r2, [r0]
 4203              	.LVL492:
 4204 163a 5300     		lsl	r3, r2, #1
 4205              	.LVL493:
 4206 163c 9B18     		add	r3, r3, r2
 4207 163e DB00     		lsl	r3, r3, #3
 4208 1640 D44A     		ldr	r2, .L289
 4209 1642 D218     		add	r2, r2, r3
 4210 1644 0692     		str	r2, [sp, #24]
 4211              	.LVL494:
 4212              		.loc 1 1200 0
 4213 1646 D44A     		ldr	r2, .L289+4
 4214 1648 D218     		add	r2, r2, r3
 4215 164a 0792     		str	r2, [sp, #28]
 4216              	.LVL495:
 4217              		.loc 1 1201 0
 4218 164c D34A     		ldr	r2, .L289+8
 4219 164e D218     		add	r2, r2, r3
 4220 1650 0892     		str	r2, [sp, #32]
 4221              	.LVL496:
 4222              		.loc 1 1211 0
 4223 1652 0499     		ldr	r1, [sp, #16]
 4224              	.LVL497:
 4225 1654 0D68     		ldr	r5, [r1]
 4226              	.LVL498:
 4227              		.loc 1 1220 0
 4228 1656 0022     		mov	r2, #0
 4229 1658 079B     		ldr	r3, [sp, #28]
 4230 165a 04C3     		stmia	r3!, {r2}
 4231 165c 04C3     		stmia	r3!, {r2}
 4232 165e 04C3     		stmia	r3!, {r2}
 4233 1660 04C3     		stmia	r3!, {r2}
 4234 1662 04C3     		stmia	r3!, {r2}
 4235 1664 1A60     		str	r2, [r3]
 4236              		.loc 1 1228 0
 4237 1666 002D     		cmp	r5, #0
 4238 1668 06D1     		bne	.L231
 4239              	.LVL499:
 4240 166a 059A     		ldr	r2, [sp, #20]
 4241 166c 9246     		mov	sl, r2
 4242              	.LVL500:
 4243 166e 0023     		mov	r3, #0
 4244              	.LVL501:
 4245 1670 9846     		mov	r8, r3
 4246              	.LVL502:
 4247 1672 0221     		mov	r1, #2
 4248 1674 8946     		mov	r9, r1
 4249              	.LVL503:
 4250 1676 50E3     		b	.L232
 4251              	.LVL504:
 4252              	.L231:
 4253 1678 059F     		ldr	r7, [sp, #20]
 4254              	.LVL505:
 4255 167a 0997     		str	r7, [sp, #36]
 4256              	.LVL506:
 4257 167c 0222     		mov	r2, #2
 4258 167e 9146     		mov	r9, r2
 4259              	.LVL507:
 4260 1680 C74B     		ldr	r3, .L289+12
 4261              	.LVL508:
 4262 1682 0A93     		str	r3, [sp, #40]
 4263              	.LVL509:
 4264 1684 0021     		mov	r1, #0
 4265 1686 8846     		mov	r8, r1
 4266              	.LVL510:
 4267              		.loc 1 1443 0
 4268 1688 C64B     		ldr	r3, .L289+16
 4269 168a 1B04     		lsl	r3, r3, #16
 4270 168c 1B0C     		lsr	r3, r3, #16
 4271 168e 0293     		str	r3, [sp, #8]
 4272              		.loc 1 1339 0
 4273 1690 C54B     		ldr	r3, .L289+20
 4274 1692 1B04     		lsl	r3, r3, #16
 4275 1694 1B0C     		lsr	r3, r3, #16
 4276 1696 0193     		str	r3, [sp, #4]
 4277              	.LVL511:
 4278              	.L278:
 4279              		.loc 1 1231 0
 4280 1698 012D     		cmp	r5, #1
 4281 169a 06DD     		ble	.L233
 4282 169c 791C     		add	r1, r7, #1
 4283              	.LVL512:
 4284 169e 0A78     		ldrb	r2, [r1]
 4285 16a0 012A     		cmp	r2, #1
 4286 16a2 02D9     		bls	.L233
 4287 16a4 161C     		mov	r6, r2
 4288 16a6 B542     		cmp	r5, r6
 4289 16a8 0ADA     		bge	.L234
 4290              	.LVL513:
 4291              	.L233:
 4292              		.loc 1 1234 0
 4293 16aa C049     		ldr	r1, .L289+24
 4294              	.LVL514:
 4295 16ac 0320     		mov	r0, #3
 4296              	.LVL515:
 4297 16ae FFF7FEFF 		bl	ppp_trace
 4298 16b2 BA46     		mov	sl, r7
 4299 16b4 2E1C     		mov	r6, r5
 4300 16b6 0022     		mov	r2, #0
 4301 16b8 9346     		mov	fp, r2
 4302 16ba 0424     		mov	r4, #4
 4303 16bc 0025     		mov	r5, #0
 4304 16be F5E2     		b	.L235
 4305              	.LVL516:
 4306              	.L234:
 4307              		.loc 1 1241 0
 4308 16c0 3B78     		ldrb	r3, [r7]
 4309 16c2 9B46     		mov	fp, r3
 4310              		.loc 1 1242 0
 4311 16c4 0131     		add	r1, r1, #1
 4312              	.LVL517:
 4313              		.loc 1 1243 0
 4314 16c6 AD1A     		sub	r5, r5, r2
 4315              		.loc 1 1244 0
 4316 16c8 BA18     		add	r2, r7, r2
 4317 16ca 9246     		mov	sl, r2
 4318              	.LVL518:
 4319              		.loc 1 1246 0
 4320 16cc 132B     		cmp	r3, #19
 4321 16ce 00D9     		bls	.LCB4586
 4322 16d0 DDE2     		b	.L236	@long jump
 4323              	.LCB4586:
 4324 16d2 9B00     		lsl	r3, r3, #2
 4325 16d4 B64A     		ldr	r2, .L289+28
 4326 16d6 D358     		ldr	r3, [r2, r3]
 4327 16d8 9F46     		mov	pc, r3
 4328              		.section	.rodata
 4329              		.align	2
 4330              	.L247:
 4331 0024 8E1C0000 		.word	.L236
 4332 0028 DA160000 		.word	.L237
 4333 002c 66170000 		.word	.L238
 4334 0030 32180000 		.word	.L239
 4335 0034 961A0000 		.word	.L240
 4336 0038 321B0000 		.word	.L241
 4337 003c 8E1C0000 		.word	.L236
 4338 0040 D81B0000 		.word	.L242
 4339 0044 101C0000 		.word	.L243
 4340 0048 8E1C0000 		.word	.L236
 4341 004c 8E1C0000 		.word	.L236
 4342 0050 8E1C0000 		.word	.L236
 4343 0054 8E1C0000 		.word	.L236
 4344 0058 8E1C0000 		.word	.L236
 4345 005c 8E1C0000 		.word	.L236
 4346 0060 8E1C0000 		.word	.L236
 4347 0064 8E1C0000 		.word	.L236
 4348 0068 401C0000 		.word	.L244
 4349 006c 5A1C0000 		.word	.L245
 4350 0070 741C0000 		.word	.L246
 4351              		.text
 4352              	.L237:
 4353              		.loc 1 1248 0
 4354 16da 089A     		ldr	r2, [sp, #32]
 4355 16dc 1378     		ldrb	r3, [r2]
 4356 16de 1A07     		lsl	r2, r3, #28
 4357 16e0 05D4     		bmi	.L248
 4358              	.LVL519:
 4359              		.loc 1 1249 0
 4360 16e2 B449     		ldr	r1, .L289+32
 4361              	.LVL520:
 4362 16e4 0520     		mov	r0, #5
 4363              	.LVL521:
 4364 16e6 FFF7FEFF 		bl	ppp_trace
 4365 16ea 0424     		mov	r4, #4
 4366 16ec DEE2     		b	.L235
 4367              	.LVL522:
 4368              	.L248:
 4369              		.loc 1 1252 0
 4370 16ee 042E     		cmp	r6, #4
 4371 16f0 05D0     		beq	.L249
 4372              		.loc 1 1253 0
 4373 16f2 B149     		ldr	r1, .L289+36
 4374              	.LVL523:
 4375 16f4 0520     		mov	r0, #5
 4376              	.LVL524:
 4377 16f6 FFF7FEFF 		bl	ppp_trace
 4378 16fa 0424     		mov	r4, #4
 4379 16fc D6E2     		b	.L235
 4380              	.LVL525:
 4381              	.L249:
 4382              		.loc 1 1257 0
 4383 16fe 0B78     		ldrb	r3, [r1]
 4384              	.LVL526:
 4385 1700 1B02     		lsl	r3, r3, #8
 4386              	.LVL527:
 4387 1702 4A78     		ldrb	r2, [r1, #1]
 4388 1704 1343     		orr	r3, r3, r2
 4389              	.LVL528:
 4390 1706 9C46     		mov	ip, r3
 4391              		.loc 1 1264 0
 4392 1708 7F2B     		cmp	r3, #127
 4393 170a 15D8     		bhi	.L250
 4394              		.loc 1 1265 0
 4395 170c AB49     		ldr	r1, .L289+40
 4396              	.LVL529:
 4397 170e 0520     		mov	r0, #5
 4398              	.LVL530:
 4399 1710 FFF7FEFF 		bl	ppp_trace
 4400              	.LVL531:
 4401              		.loc 1 1267 0
 4402 1714 0123     		mov	r3, #1
 4403 1716 0A99     		ldr	r1, [sp, #40]
 4404 1718 0B70     		strb	r3, [r1]
 4405 171a 0A1C     		mov	r2, r1
 4406              	.LVL532:
 4407 171c 0132     		add	r2, r2, #1
 4408              		.loc 1 1268 0
 4409 171e 0423     		mov	r3, #4
 4410 1720 1370     		strb	r3, [r2]
 4411 1722 0132     		add	r2, r2, #1
 4412              	.LVL533:
 4413              		.loc 1 1269 0
 4414 1724 0023     		mov	r3, #0
 4415 1726 1370     		strb	r3, [r2]
 4416 1728 0132     		add	r2, r2, #1
 4417              	.LVL534:
 4418 172a 8023     		mov	r3, #128
 4419 172c 5B42     		neg	r3, r3
 4420 172e 1370     		strb	r3, [r2]
 4421 1730 0132     		add	r2, r2, #1
 4422              	.LVL535:
 4423 1732 0A92     		str	r2, [sp, #40]
 4424              	.LVL536:
 4425 1734 0324     		mov	r4, #3
 4426 1736 B9E2     		b	.L235
 4427              	.LVL537:
 4428              	.L250:
 4429              		.loc 1 1272 0
 4430 1738 079A     		ldr	r2, [sp, #28]
 4431 173a 1378     		ldrb	r3, [r2]
 4432              	.LVL538:
 4433 173c 0822     		mov	r2, #8
 4434 173e 1343     		orr	r3, r3, r2
 4435 1740 0799     		ldr	r1, [sp, #28]
 4436              	.LVL539:
 4437 1742 0B70     		strb	r3, [r1]
 4438              		.loc 1 1273 0
 4439 1744 6346     		mov	r3, ip
 4440              	.LVL540:
 4441 1746 079A     		ldr	r2, [sp, #28]
 4442 1748 5380     		strh	r3, [r2, #2]
 4443              		.loc 1 1275 0
 4444 174a 0FAC     		add	r4, sp, #60
 4445              	.LVL541:
 4446 174c 4146     		mov	r1, r8
 4447 174e 6018     		add	r0, r4, r1
 4448              	.LVL542:
 4449 1750 9B4A     		ldr	r2, .L289+44
 4450 1752 5021     		mov	r1, #80
 4451 1754 6346     		mov	r3, ip
 4452              	.LVL543:
 4453 1756 FFF7FEFF 		bl	snprintf
 4454              	.LVL544:
 4455              		.loc 1 1276 0
 4456 175a 201C     		mov	r0, r4
 4457 175c FFF7FEFF 		bl	strlen
 4458 1760 8046     		mov	r8, r0
 4459 1762 0224     		mov	r4, #2
 4460              	.LVL545:
 4461 1764 A2E2     		b	.L235
 4462              	.LVL546:
 4463              	.L238:
 4464              		.loc 1 1281 0
 4465 1766 089A     		ldr	r2, [sp, #32]
 4466 1768 1378     		ldrb	r3, [r2]
 4467 176a DA06     		lsl	r2, r3, #27
 4468 176c 05D4     		bmi	.L251
 4469              	.LVL547:
 4470              		.loc 1 1282 0
 4471 176e 9549     		ldr	r1, .L289+48
 4472              	.LVL548:
 4473 1770 0520     		mov	r0, #5
 4474              	.LVL549:
 4475 1772 FFF7FEFF 		bl	ppp_trace
 4476 1776 0424     		mov	r4, #4
 4477 1778 98E2     		b	.L235
 4478              	.LVL550:
 4479              	.L251:
 4480              		.loc 1 1285 0
 4481 177a 062E     		cmp	r6, #6
 4482 177c 05D0     		beq	.L252
 4483              		.loc 1 1286 0
 4484 177e 9249     		ldr	r1, .L289+52
 4485              	.LVL551:
 4486 1780 0520     		mov	r0, #5
 4487              	.LVL552:
 4488 1782 FFF7FEFF 		bl	ppp_trace
 4489 1786 0424     		mov	r4, #4
 4490 1788 90E2     		b	.L235
 4491              	.LVL553:
 4492              	.L252:
 4493              		.loc 1 1290 0
 4494 178a 0A78     		ldrb	r2, [r1]
 4495              	.LVL554:
 4496 178c 0131     		add	r1, r1, #1
 4497              	.LVL555:
 4498 178e 1202     		lsl	r2, r2, #8
 4499              	.LVL556:
 4500 1790 0B78     		ldrb	r3, [r1]
 4501 1792 1343     		orr	r3, r3, r2
 4502              	.LVL557:
 4503 1794 0131     		add	r1, r1, #1
 4504              	.LVL558:
 4505 1796 1B02     		lsl	r3, r3, #8
 4506              	.LVL559:
 4507 1798 0A78     		ldrb	r2, [r1]
 4508 179a 1343     		orr	r3, r3, r2
 4509              	.LVL560:
 4510 179c 1B02     		lsl	r3, r3, #8
 4511              	.LVL561:
 4512 179e 4A78     		ldrb	r2, [r1, #1]
 4513 17a0 1343     		orr	r3, r3, r2
 4514 17a2 0B93     		str	r3, [sp, #44]
 4515              		.loc 1 1296 0
 4516 17a4 0899     		ldr	r1, [sp, #32]
 4517              	.LVL562:
 4518 17a6 8B68     		ldr	r3, [r1, #8]
 4519              	.LVL563:
 4520 17a8 1A1C     		mov	r2, r3
 4521 17aa 0B99     		ldr	r1, [sp, #44]
 4522 17ac 8A43     		bic	r2, r1
 4523 17ae 2AD0     		beq	.L253
 4524              	.LVL564:
 4525              		.loc 1 1297 0
 4526 17b0 8649     		ldr	r1, .L289+56
 4527 17b2 0520     		mov	r0, #5
 4528              	.LVL565:
 4529 17b4 0B9A     		ldr	r2, [sp, #44]
 4530 17b6 FFF7FEFF 		bl	ppp_trace
 4531              		.loc 1 1300 0
 4532 17ba 0223     		mov	r3, #2
 4533 17bc 0A9A     		ldr	r2, [sp, #40]
 4534 17be 1370     		strb	r3, [r2]
 4535 17c0 0A9A     		ldr	r2, [sp, #40]
 4536 17c2 0132     		add	r2, r2, #1
 4537              	.LVL566:
 4538              		.loc 1 1301 0
 4539 17c4 0623     		mov	r3, #6
 4540 17c6 1370     		strb	r3, [r2]
 4541 17c8 0132     		add	r2, r2, #1
 4542              	.LVL567:
 4543              		.loc 1 1302 0
 4544 17ca 0899     		ldr	r1, [sp, #32]
 4545 17cc 8B68     		ldr	r3, [r1, #8]
 4546 17ce 0B99     		ldr	r1, [sp, #44]
 4547 17d0 0B43     		orr	r3, r3, r1
 4548 17d2 1B0E     		lsr	r3, r3, #24
 4549 17d4 1370     		strb	r3, [r2]
 4550 17d6 0132     		add	r2, r2, #1
 4551              	.LVL568:
 4552 17d8 0899     		ldr	r1, [sp, #32]
 4553 17da 8B68     		ldr	r3, [r1, #8]
 4554 17dc 0B99     		ldr	r1, [sp, #44]
 4555 17de 0B43     		orr	r3, r3, r1
 4556 17e0 1B0C     		lsr	r3, r3, #16
 4557 17e2 1370     		strb	r3, [r2]
 4558 17e4 0132     		add	r2, r2, #1
 4559              	.LVL569:
 4560 17e6 0899     		ldr	r1, [sp, #32]
 4561 17e8 8B68     		ldr	r3, [r1, #8]
 4562 17ea 0B99     		ldr	r1, [sp, #44]
 4563 17ec 0B43     		orr	r3, r3, r1
 4564 17ee 1B0A     		lsr	r3, r3, #8
 4565 17f0 1370     		strb	r3, [r2]
 4566 17f2 0132     		add	r2, r2, #1
 4567              	.LVL570:
 4568 17f4 0899     		ldr	r1, [sp, #32]
 4569 17f6 0B7A     		ldrb	r3, [r1, #8]
 4570 17f8 0B99     		ldr	r1, [sp, #44]
 4571 17fa 0B43     		orr	r3, r3, r1
 4572 17fc 1370     		strb	r3, [r2]
 4573 17fe 0132     		add	r2, r2, #1
 4574              	.LVL571:
 4575 1800 0A92     		str	r2, [sp, #40]
 4576              	.LVL572:
 4577 1802 0324     		mov	r4, #3
 4578 1804 52E2     		b	.L235
 4579              	.LVL573:
 4580              	.L253:
 4581              		.loc 1 1305 0
 4582 1806 079A     		ldr	r2, [sp, #28]
 4583 1808 1378     		ldrb	r3, [r2]
 4584 180a 1022     		mov	r2, #16
 4585 180c 1343     		orr	r3, r3, r2
 4586 180e 0799     		ldr	r1, [sp, #28]
 4587 1810 0B70     		strb	r3, [r1]
 4588              		.loc 1 1306 0
 4589 1812 0B9A     		ldr	r2, [sp, #44]
 4590 1814 8A60     		str	r2, [r1, #8]
 4591              		.loc 1 1308 0
 4592 1816 0FAC     		add	r4, sp, #60
 4593              	.LVL574:
 4594 1818 4346     		mov	r3, r8
 4595 181a E018     		add	r0, r4, r3
 4596              	.LVL575:
 4597 181c 6C4A     		ldr	r2, .L289+60
 4598 181e 5021     		mov	r1, #80
 4599 1820 0B9B     		ldr	r3, [sp, #44]
 4600 1822 FFF7FEFF 		bl	snprintf
 4601              		.loc 1 1309 0
 4602 1826 201C     		mov	r0, r4
 4603 1828 FFF7FEFF 		bl	strlen
 4604 182c 8046     		mov	r8, r0
 4605 182e 0224     		mov	r4, #2
 4606              	.LVL576:
 4607 1830 3CE2     		b	.L235
 4608              	.LVL577:
 4609              	.L239:
 4610              		.loc 1 1314 0
 4611 1832 032E     		cmp	r6, #3
 4612 1834 05DC     		bgt	.L254
 4613              		.loc 1 1315 0
 4614 1836 6749     		ldr	r1, .L289+64
 4615              	.LVL578:
 4616 1838 0520     		mov	r0, #5
 4617              	.LVL579:
 4618 183a FFF7FEFF 		bl	ppp_trace
 4619 183e 0424     		mov	r4, #4
 4620 1840 34E2     		b	.L235
 4621              	.LVL580:
 4622              	.L254:
 4623              		.loc 1 1318 0
 4624 1842 089A     		ldr	r2, [sp, #32]
 4625 1844 1378     		ldrb	r3, [r2]
 4626 1846 9B06     		lsl	r3, r3, #26
 4627 1848 D80F     		lsr	r0, r3, #31
 4628              	.LVL581:
 4629 184a 0028     		cmp	r0, #0
 4630 184c 08D1     		bne	.L255
 4631              	.LVL582:
 4632 184e 1378     		ldrb	r3, [r2]
 4633 1850 5A06     		lsl	r2, r3, #25
 4634 1852 05D4     		bmi	.L255
 4635              		.loc 1 1322 0
 4636 1854 6049     		ldr	r1, .L289+68
 4637              	.LVL583:
 4638 1856 0520     		mov	r0, #5
 4639 1858 FFF7FEFF 		bl	ppp_trace
 4640 185c 0424     		mov	r4, #4
 4641 185e 25E2     		b	.L235
 4642              	.LVL584:
 4643              	.L255:
 4644              		.loc 1 1326 0
 4645 1860 0B78     		ldrb	r3, [r1]
 4646              	.LVL585:
 4647 1862 0131     		add	r1, r1, #1
 4648              	.LVL586:
 4649 1864 1B02     		lsl	r3, r3, #8
 4650              	.LVL587:
 4651 1866 0A78     		ldrb	r2, [r1]
 4652 1868 1343     		orr	r3, r3, r2
 4653              	.LVL588:
 4654 186a 9C46     		mov	ip, r3
 4655              		.loc 1 1339 0
 4656 186c 019B     		ldr	r3, [sp, #4]
 4657              	.LVL589:
 4658 186e 9C45     		cmp	ip, r3
 4659 1870 41D1     		bne	.L256
 4660              		.loc 1 1340 0
 4661 1872 0799     		ldr	r1, [sp, #28]
 4662              	.LVL590:
 4663 1874 0B78     		ldrb	r3, [r1]
 4664 1876 5A06     		lsl	r2, r3, #25
 4665 1878 05D5     		bpl	.L257
 4666              		.loc 1 1341 0
 4667 187a 5849     		ldr	r1, .L289+72
 4668 187c 0320     		mov	r0, #3
 4669 187e FFF7FEFF 		bl	ppp_trace
 4670              	.LVL591:
 4671 1882 0424     		mov	r4, #4
 4672 1884 12E2     		b	.L235
 4673              	.LVL592:
 4674              	.L257:
 4675              		.loc 1 1344 0
 4676 1886 042E     		cmp	r6, #4
 4677 1888 05D0     		beq	.L258
 4678              		.loc 1 1345 0
 4679 188a 5549     		ldr	r1, .L289+76
 4680 188c 0320     		mov	r0, #3
 4681 188e FFF7FEFF 		bl	ppp_trace
 4682              	.LVL593:
 4683 1892 0424     		mov	r4, #4
 4684 1894 0AE2     		b	.L235
 4685              	.LVL594:
 4686              	.L258:
 4687              		.loc 1 1349 0
 4688 1896 0028     		cmp	r0, #0
 4689 1898 19D1     		bne	.L259
 4690              		.loc 1 1350 0
 4691 189a 5249     		ldr	r1, .L289+80
 4692 189c 0320     		mov	r0, #3
 4693 189e FFF7FEFF 		bl	ppp_trace
 4694              	.LVL595:
 4695              		.loc 1 1352 0
 4696 18a2 0323     		mov	r3, #3
 4697 18a4 0A99     		ldr	r1, [sp, #40]
 4698 18a6 0B70     		strb	r3, [r1]
 4699 18a8 0A1C     		mov	r2, r1
 4700              	.LVL596:
 4701 18aa 0132     		add	r2, r2, #1
 4702              		.loc 1 1353 0
 4703 18ac 0523     		mov	r3, #5
 4704 18ae 1370     		strb	r3, [r2]
 4705 18b0 0132     		add	r2, r2, #1
 4706              	.LVL597:
 4707              		.loc 1 1354 0
 4708 18b2 3E23     		mov	r3, #62
 4709 18b4 5B42     		neg	r3, r3
 4710 18b6 1370     		strb	r3, [r2]
 4711 18b8 0132     		add	r2, r2, #1
 4712              	.LVL598:
 4713 18ba 2323     		mov	r3, #35
 4714 18bc 1370     		strb	r3, [r2]
 4715 18be 0132     		add	r2, r2, #1
 4716              	.LVL599:
 4717              		.loc 1 1355 0
 4718 18c0 0899     		ldr	r1, [sp, #32]
 4719 18c2 0B79     		ldrb	r3, [r1, #4]
 4720 18c4 1370     		strb	r3, [r2]
 4721 18c6 0132     		add	r2, r2, #1
 4722              	.LVL600:
 4723 18c8 0A92     		str	r2, [sp, #40]
 4724              	.LVL601:
 4725 18ca 0324     		mov	r4, #3
 4726 18cc EEE1     		b	.L235
 4727              	.LVL602:
 4728              	.L259:
 4729              		.loc 1 1358 0
 4730 18ce 079A     		ldr	r2, [sp, #28]
 4731 18d0 1378     		ldrb	r3, [r2]
 4732 18d2 2022     		mov	r2, #32
 4733 18d4 1343     		orr	r3, r3, r2
 4734 18d6 0799     		ldr	r1, [sp, #28]
 4735 18d8 0B70     		strb	r3, [r1]
 4736              		.loc 1 1360 0
 4737 18da 0FAC     		add	r4, sp, #60
 4738              	.LVL603:
 4739 18dc 4246     		mov	r2, r8
 4740 18de A018     		add	r0, r4, r2
 4741 18e0 414A     		ldr	r2, .L289+84
 4742 18e2 5021     		mov	r1, #80
 4743 18e4 6346     		mov	r3, ip
 4744 18e6 FFF7FEFF 		bl	snprintf
 4745              	.LVL604:
 4746              		.loc 1 1361 0
 4747 18ea 201C     		mov	r0, r4
 4748 18ec FFF7FEFF 		bl	strlen
 4749 18f0 8046     		mov	r8, r0
 4750 18f2 0224     		mov	r4, #2
 4751              	.LVL605:
 4752 18f4 DAE1     		b	.L235
 4753              	.LVL606:
 4754              	.L256:
 4755              		.loc 1 1365 0
 4756 18f6 3D4B     		ldr	r3, .L289+88
 4757 18f8 9C45     		cmp	ip, r3
 4758 18fa 00D0     		beq	.LCB5045
 4759 18fc 9AE0     		b	.L260	@long jump
 4760              	.LCB5045:
 4761              		.loc 1 1366 0
 4762 18fe 079A     		ldr	r2, [sp, #28]
 4763 1900 1378     		ldrb	r3, [r2]
 4764 1902 9A06     		lsl	r2, r3, #26
 4765 1904 05D5     		bpl	.L261
 4766              		.loc 1 1367 0
 4767 1906 3A49     		ldr	r1, .L289+92
 4768              	.LVL607:
 4769 1908 0320     		mov	r0, #3
 4770 190a FFF7FEFF 		bl	ppp_trace
 4771              	.LVL608:
 4772 190e 0424     		mov	r4, #4
 4773 1910 CCE1     		b	.L235
 4774              	.LVL609:
 4775              	.L261:
 4776              		.loc 1 1370 0
 4777 1912 052E     		cmp	r6, #5
 4778 1914 05D0     		beq	.L262
 4779              		.loc 1 1371 0
 4780 1916 3749     		ldr	r1, .L289+96
 4781              	.LVL610:
 4782 1918 0320     		mov	r0, #3
 4783 191a FFF7FEFF 		bl	ppp_trace
 4784              	.LVL611:
 4785 191e 0424     		mov	r4, #4
 4786 1920 C4E1     		b	.L235
 4787              	.LVL612:
 4788              	.L262:
 4789              		.loc 1 1375 0
 4790 1922 089A     		ldr	r2, [sp, #32]
 4791 1924 1378     		ldrb	r3, [r2]
 4792 1926 5A06     		lsl	r2, r3, #25
 4793 1928 15D4     		bmi	.L263
 4794              		.loc 1 1376 0
 4795 192a 3349     		ldr	r1, .L289+100
 4796              	.LVL613:
 4797 192c 0320     		mov	r0, #3
 4798 192e FFF7FEFF 		bl	ppp_trace
 4799              	.LVL614:
 4800              		.loc 1 1378 0
 4801 1932 0323     		mov	r3, #3
 4802 1934 0A99     		ldr	r1, [sp, #40]
 4803 1936 0B70     		strb	r3, [r1]
 4804 1938 0A1C     		mov	r2, r1
 4805              	.LVL615:
 4806 193a 0132     		add	r2, r2, #1
 4807              		.loc 1 1379 0
 4808 193c 0423     		mov	r3, #4
 4809 193e 1370     		strb	r3, [r2]
 4810 1940 0132     		add	r2, r2, #1
 4811              	.LVL616:
 4812              		.loc 1 1380 0
 4813 1942 4023     		mov	r3, #64
 4814 1944 5B42     		neg	r3, r3
 4815 1946 1370     		strb	r3, [r2]
 4816 1948 0132     		add	r2, r2, #1
 4817              	.LVL617:
 4818 194a 2323     		mov	r3, #35
 4819 194c 1370     		strb	r3, [r2]
 4820 194e 0132     		add	r2, r2, #1
 4821              	.LVL618:
 4822 1950 0A92     		str	r2, [sp, #40]
 4823              	.LVL619:
 4824 1952 0324     		mov	r4, #3
 4825 1954 AAE1     		b	.L235
 4826              	.LVL620:
 4827              	.L263:
 4828              		.loc 1 1383 0
 4829 1956 4978     		ldrb	r1, [r1, #1]
 4830              	.LVL621:
 4831 1958 0C91     		str	r1, [sp, #48]
 4832 195a 0A1C     		mov	r2, r1
 4833              	.LVL622:
 4834              		.loc 1 1384 0
 4835 195c 0529     		cmp	r1, #5
 4836 195e 4FD0     		beq	.L264
 4837              		.loc 1 1389 0
 4838 1960 2649     		ldr	r1, .L289+104
 4839 1962 0320     		mov	r0, #3
 4840 1964 FFF7FEFF 		bl	ppp_trace
 4841              	.LVL623:
 4842              		.loc 1 1391 0
 4843 1968 0323     		mov	r3, #3
 4844 196a 0A9A     		ldr	r2, [sp, #40]
 4845 196c 1370     		strb	r3, [r2]
 4846 196e 0A9A     		ldr	r2, [sp, #40]
 4847 1970 0132     		add	r2, r2, #1
 4848              	.LVL624:
 4849              		.loc 1 1392 0
 4850 1972 0523     		mov	r3, #5
 4851 1974 1370     		strb	r3, [r2]
 4852 1976 0132     		add	r2, r2, #1
 4853              	.LVL625:
 4854              		.loc 1 1393 0
 4855 1978 3E23     		mov	r3, #62
 4856 197a 5B42     		neg	r3, r3
 4857 197c 1370     		strb	r3, [r2]
 4858 197e 0132     		add	r2, r2, #1
 4859              	.LVL626:
 4860 1980 2323     		mov	r3, #35
 4861 1982 1370     		strb	r3, [r2]
 4862 1984 0132     		add	r2, r2, #1
 4863              	.LVL627:
 4864              		.loc 1 1394 0
 4865 1986 0899     		ldr	r1, [sp, #32]
 4866 1988 0B79     		ldrb	r3, [r1, #4]
 4867 198a 1370     		strb	r3, [r2]
 4868 198c 0132     		add	r2, r2, #1
 4869              	.LVL628:
 4870 198e 0A92     		str	r2, [sp, #40]
 4871              	.LVL629:
 4872 1990 0324     		mov	r4, #3
 4873 1992 8BE1     		b	.L235
 4874              	.L290:
 4875              		.align	2
 4876              	.L289:
 4877 1994 00000000 		.word	lcp_gotoptions
 4878 1998 00000000 		.word	lcp_hisoptions
 4879 199c 00000000 		.word	lcp_allowoptions
 4880 19a0 44000000 		.word	nak_buffer
 4881 19a4 25C0FFFF 		.word	-16347
 4882 19a8 23C0FFFF 		.word	-16349
 4883 19ac 60040000 		.word	.LC121
 4884 19b0 24000000 		.word	.L247
 4885 19b4 7C040000 		.word	.LC124
 4886 19b8 A4040000 		.word	.LC126
 4887 19bc C8040000 		.word	.LC128
 4888 19c0 E8040000 		.word	.LC130
 4889 19c4 F0040000 		.word	.LC132
 4890 19c8 18050000 		.word	.LC134
 4891 19cc 40050000 		.word	.LC136
 4892 19d0 6C050000 		.word	.LC138
 4893 19d4 7C050000 		.word	.LC140
 4894 19d8 A4050000 		.word	.LC142
 4895 19dc CC050000 		.word	.LC144
 4896 19e0 00060000 		.word	.LC146
 4897 19e4 28060000 		.word	.LC148
 4898 19e8 54060000 		.word	.LC150
 4899 19ec 23C20000 		.word	49699
 4900 19f0 60060000 		.word	.LC152
 4901 19f4 90060000 		.word	.LC154
 4902 19f8 BC060000 		.word	.LC156
 4903 19fc E8060000 		.word	.LC158
 4904              	.LVL630:
 4905              	.L264:
 4906              		.loc 1 1398 0
 4907 1a00 0FAC     		add	r4, sp, #60
 4908              	.LVL631:
 4909 1a02 4246     		mov	r2, r8
 4910              	.LVL632:
 4911 1a04 A018     		add	r0, r4, r2
 4912 1a06 D84A     		ldr	r2, .L291
 4913 1a08 0523     		mov	r3, #5
 4914 1a0a 0093     		str	r3, [sp]
 4915 1a0c 5021     		mov	r1, #80
 4916 1a0e 6346     		mov	r3, ip
 4917 1a10 FFF7FEFF 		bl	snprintf
 4918              	.LVL633:
 4919              		.loc 1 1399 0
 4920 1a14 201C     		mov	r0, r4
 4921 1a16 FFF7FEFF 		bl	strlen
 4922 1a1a 8046     		mov	r8, r0
 4923              		.loc 1 1401 0
 4924 1a1c 0CAB     		add	r3, sp, #48
 4925 1a1e 1978     		ldrb	r1, [r3]
 4926 1a20 079B     		ldr	r3, [sp, #28]
 4927 1a22 1971     		strb	r1, [r3, #4]
 4928              		.loc 1 1402 0
 4929 1a24 079A     		ldr	r2, [sp, #28]
 4930 1a26 1378     		ldrb	r3, [r2]
 4931 1a28 4022     		mov	r2, #64
 4932 1a2a 1343     		orr	r3, r3, r2
 4933 1a2c 0799     		ldr	r1, [sp, #28]
 4934 1a2e 0B70     		strb	r3, [r1]
 4935 1a30 0224     		mov	r4, #2
 4936              	.LVL634:
 4937 1a32 3BE1     		b	.L235
 4938              	.LVL635:
 4939              	.L260:
 4940              		.loc 1 1412 0
 4941 1a34 0323     		mov	r3, #3
 4942 1a36 0A9A     		ldr	r2, [sp, #40]
 4943 1a38 1370     		strb	r3, [r2]
 4944 1a3a 141C     		mov	r4, r2
 4945              	.LVL636:
 4946 1a3c 0134     		add	r4, r4, #1
 4947              		.loc 1 1413 0
 4948 1a3e 0899     		ldr	r1, [sp, #32]
 4949              	.LVL637:
 4950 1a40 0B78     		ldrb	r3, [r1]
 4951 1a42 5A06     		lsl	r2, r3, #25
 4952 1a44 15D5     		bpl	.L265
 4953              		.loc 1 1414 0
 4954 1a46 C949     		ldr	r1, .L291+4
 4955 1a48 0320     		mov	r0, #3
 4956 1a4a 6246     		mov	r2, ip
 4957 1a4c FFF7FEFF 		bl	ppp_trace
 4958              	.LVL638:
 4959              		.loc 1 1415 0
 4960 1a50 0523     		mov	r3, #5
 4961 1a52 2370     		strb	r3, [r4]
 4962 1a54 621C     		add	r2, r4, #1
 4963              	.LVL639:
 4964              		.loc 1 1416 0
 4965 1a56 3E23     		mov	r3, #62
 4966 1a58 5B42     		neg	r3, r3
 4967 1a5a 1370     		strb	r3, [r2]
 4968 1a5c 0132     		add	r2, r2, #1
 4969              	.LVL640:
 4970 1a5e 2323     		mov	r3, #35
 4971 1a60 1370     		strb	r3, [r2]
 4972 1a62 0132     		add	r2, r2, #1
 4973              	.LVL641:
 4974              		.loc 1 1417 0
 4975 1a64 0899     		ldr	r1, [sp, #32]
 4976 1a66 0B79     		ldrb	r3, [r1, #4]
 4977 1a68 1370     		strb	r3, [r2]
 4978 1a6a 0132     		add	r2, r2, #1
 4979              	.LVL642:
 4980 1a6c 0A92     		str	r2, [sp, #40]
 4981              	.LVL643:
 4982 1a6e 0324     		mov	r4, #3
 4983              	.LVL644:
 4984 1a70 1CE1     		b	.L235
 4985              	.LVL645:
 4986              	.L265:
 4987              		.loc 1 1419 0
 4988 1a72 BF49     		ldr	r1, .L291+8
 4989 1a74 0320     		mov	r0, #3
 4990 1a76 6246     		mov	r2, ip
 4991 1a78 FFF7FEFF 		bl	ppp_trace
 4992              	.LVL646:
 4993              		.loc 1 1420 0
 4994 1a7c 0423     		mov	r3, #4
 4995 1a7e 2370     		strb	r3, [r4]
 4996 1a80 621C     		add	r2, r4, #1
 4997              	.LVL647:
 4998              		.loc 1 1421 0
 4999 1a82 4023     		mov	r3, #64
 5000 1a84 5B42     		neg	r3, r3
 5001 1a86 1370     		strb	r3, [r2]
 5002 1a88 0132     		add	r2, r2, #1
 5003              	.LVL648:
 5004 1a8a 2323     		mov	r3, #35
 5005 1a8c 1370     		strb	r3, [r2]
 5006 1a8e 0132     		add	r2, r2, #1
 5007              	.LVL649:
 5008 1a90 0A92     		str	r2, [sp, #40]
 5009              	.LVL650:
 5010 1a92 0324     		mov	r4, #3
 5011              	.LVL651:
 5012 1a94 0AE1     		b	.L235
 5013              	.LVL652:
 5014              	.L240:
 5015              		.loc 1 1426 0
 5016 1a96 0B78     		ldrb	r3, [r1]
 5017              	.LVL653:
 5018 1a98 0131     		add	r1, r1, #1
 5019              	.LVL654:
 5020 1a9a 1B02     		lsl	r3, r3, #8
 5021              	.LVL655:
 5022 1a9c 0A78     		ldrb	r2, [r1]
 5023 1a9e 1343     		orr	r3, r3, r2
 5024              	.LVL656:
 5025 1aa0 0D93     		str	r3, [sp, #52]
 5026 1aa2 0131     		add	r1, r1, #1
 5027              	.LVL657:
 5028              		.loc 1 1427 0
 5029 1aa4 0A78     		ldrb	r2, [r1]
 5030              	.LVL658:
 5031 1aa6 0131     		add	r1, r1, #1
 5032              	.LVL659:
 5033 1aa8 1202     		lsl	r2, r2, #8
 5034              	.LVL660:
 5035 1aaa 0B78     		ldrb	r3, [r1]
 5036              	.LVL661:
 5037 1aac 1343     		orr	r3, r3, r2
 5038              	.LVL662:
 5039 1aae 0131     		add	r1, r1, #1
 5040              	.LVL663:
 5041 1ab0 1B02     		lsl	r3, r3, #8
 5042              	.LVL664:
 5043 1ab2 0A78     		ldrb	r2, [r1]
 5044 1ab4 1343     		orr	r3, r3, r2
 5045              	.LVL665:
 5046 1ab6 1B02     		lsl	r3, r3, #8
 5047              	.LVL666:
 5048              		.loc 1 1429 0
 5049 1ab8 0FAC     		add	r4, sp, #60
 5050              	.LVL667:
 5051 1aba 4246     		mov	r2, r8
 5052 1abc A018     		add	r0, r4, r2
 5053              	.LVL668:
 5054 1abe AD4A     		ldr	r2, .L291+12
 5055 1ac0 4978     		ldrb	r1, [r1, #1]
 5056              	.LVL669:
 5057 1ac2 0B43     		orr	r3, r3, r1
 5058              	.LVL670:
 5059 1ac4 0093     		str	r3, [sp]
 5060 1ac6 5021     		mov	r1, #80
 5061 1ac8 0D9B     		ldr	r3, [sp, #52]
 5062 1aca FFF7FEFF 		bl	snprintf
 5063              		.loc 1 1430 0
 5064 1ace 201C     		mov	r0, r4
 5065 1ad0 FFF7FEFF 		bl	strlen
 5066 1ad4 8046     		mov	r8, r0
 5067              		.loc 1 1433 0
 5068 1ad6 0899     		ldr	r1, [sp, #32]
 5069 1ad8 4B78     		ldrb	r3, [r1, #1]
 5070 1ada 5A07     		lsl	r2, r3, #29
 5071 1adc 00D4     		bmi	.LCB5376
 5072 1ade E4E0     		b	.L266	@long jump
 5073              	.LCB5376:
 5074              	.LVL671:
 5075 1ae0 082E     		cmp	r6, #8
 5076 1ae2 00D0     		beq	.LCB5380
 5077 1ae4 E1E0     		b	.L266	@long jump
 5078              	.LCB5380:
 5079              		.loc 1 1443 0
 5080 1ae6 0D9B     		ldr	r3, [sp, #52]
 5081 1ae8 0299     		ldr	r1, [sp, #8]
 5082 1aea 8B42     		cmp	r3, r1
 5083 1aec 01D1     		bne	.L267
 5084 1aee 0224     		mov	r4, #2
 5085              	.LVL672:
 5086 1af0 DCE0     		b	.L235
 5087              	.LVL673:
 5088              	.L267:
 5089              		.loc 1 1445 0
 5090 1af2 0423     		mov	r3, #4
 5091 1af4 0A9A     		ldr	r2, [sp, #40]
 5092 1af6 1370     		strb	r3, [r2]
 5093 1af8 0A9A     		ldr	r2, [sp, #40]
 5094 1afa 0132     		add	r2, r2, #1
 5095              	.LVL674:
 5096              		.loc 1 1446 0
 5097 1afc 0823     		mov	r3, #8
 5098 1afe 1370     		strb	r3, [r2]
 5099 1b00 0132     		add	r2, r2, #1
 5100              	.LVL675:
 5101              		.loc 1 1447 0
 5102 1b02 4023     		mov	r3, #64
 5103 1b04 5B42     		neg	r3, r3
 5104 1b06 1370     		strb	r3, [r2]
 5105 1b08 0132     		add	r2, r2, #1
 5106              	.LVL676:
 5107 1b0a 2523     		mov	r3, #37
 5108 1b0c 1370     		strb	r3, [r2]
 5109 1b0e 0132     		add	r2, r2, #1
 5110              	.LVL677:
 5111              		.loc 1 1448 0
 5112 1b10 0899     		ldr	r1, [sp, #32]
 5113 1b12 CB7D     		ldrb	r3, [r1, #23]
 5114 1b14 1370     		strb	r3, [r2]
 5115 1b16 0132     		add	r2, r2, #1
 5116              	.LVL678:
 5117 1b18 CB8A     		ldrh	r3, [r1, #22]
 5118 1b1a 1370     		strb	r3, [r2]
 5119 1b1c 0132     		add	r2, r2, #1
 5120              	.LVL679:
 5121 1b1e 4B69     		ldr	r3, [r1, #20]
 5122 1b20 1B0A     		lsr	r3, r3, #8
 5123 1b22 1370     		strb	r3, [r2]
 5124 1b24 0132     		add	r2, r2, #1
 5125              	.LVL680:
 5126 1b26 4B69     		ldr	r3, [r1, #20]
 5127 1b28 1370     		strb	r3, [r2]
 5128 1b2a 0132     		add	r2, r2, #1
 5129              	.LVL681:
 5130 1b2c 0A92     		str	r2, [sp, #40]
 5131              	.LVL682:
 5132 1b2e 0324     		mov	r4, #3
 5133              	.LVL683:
 5134 1b30 BCE0     		b	.L235
 5135              	.LVL684:
 5136              	.L241:
 5137              		.loc 1 1454 0
 5138 1b32 089A     		ldr	r2, [sp, #32]
 5139 1b34 1378     		ldrb	r3, [r2]
 5140 1b36 DB09     		lsr	r3, r3, #7
 5141 1b38 002B     		cmp	r3, #0
 5142 1b3a 05D1     		bne	.L268
 5143              	.LVL685:
 5144 1b3c 069A     		ldr	r2, [sp, #24]
 5145 1b3e 1378     		ldrb	r3, [r2]
 5146 1b40 DB09     		lsr	r3, r3, #7
 5147 1b42 002B     		cmp	r3, #0
 5148 1b44 00D1     		bne	.LCB5461
 5149 1b46 B0E0     		b	.L266	@long jump
 5150              	.LCB5461:
 5151              	.L268:
 5152 1b48 062E     		cmp	r6, #6
 5153 1b4a 00D0     		beq	.LCB5464
 5154 1b4c ADE0     		b	.L266	@long jump
 5155              	.LCB5464:
 5156              		.loc 1 1459 0
 5157 1b4e 0A78     		ldrb	r2, [r1]
 5158              	.LVL686:
 5159 1b50 0131     		add	r1, r1, #1
 5160              	.LVL687:
 5161 1b52 1202     		lsl	r2, r2, #8
 5162              	.LVL688:
 5163 1b54 0B78     		ldrb	r3, [r1]
 5164 1b56 1343     		orr	r3, r3, r2
 5165              	.LVL689:
 5166 1b58 0131     		add	r1, r1, #1
 5167              	.LVL690:
 5168 1b5a 1B02     		lsl	r3, r3, #8
 5169              	.LVL691:
 5170 1b5c 0A78     		ldrb	r2, [r1]
 5171 1b5e 1343     		orr	r3, r3, r2
 5172              	.LVL692:
 5173 1b60 1B02     		lsl	r3, r3, #8
 5174              	.LVL693:
 5175 1b62 4A78     		ldrb	r2, [r1, #1]
 5176 1b64 1343     		orr	r3, r3, r2
 5177 1b66 0E93     		str	r3, [sp, #56]
 5178              		.loc 1 1461 0
 5179 1b68 0FAC     		add	r4, sp, #60
 5180              	.LVL694:
 5181 1b6a 4346     		mov	r3, r8
 5182              	.LVL695:
 5183 1b6c E018     		add	r0, r4, r3
 5184              	.LVL696:
 5185 1b6e 824A     		ldr	r2, .L291+16
 5186 1b70 5021     		mov	r1, #80
 5187              	.LVL697:
 5188 1b72 0E9B     		ldr	r3, [sp, #56]
 5189 1b74 FFF7FEFF 		bl	snprintf
 5190              		.loc 1 1462 0
 5191 1b78 201C     		mov	r0, r4
 5192 1b7a FFF7FEFF 		bl	strlen
 5193 1b7e 8046     		mov	r8, r0
 5194              		.loc 1 1468 0
 5195 1b80 0699     		ldr	r1, [sp, #24]
 5196 1b82 0B78     		ldrb	r3, [r1]
 5197 1b84 DB09     		lsr	r3, r3, #7
 5198 1b86 002B     		cmp	r3, #0
 5199 1b88 1BD0     		beq	.L269
 5200              	.LVL698:
 5201 1b8a CB68     		ldr	r3, [r1, #12]
 5202 1b8c 0E9A     		ldr	r2, [sp, #56]
 5203 1b8e 9342     		cmp	r3, r2
 5204 1b90 17D1     		bne	.L269
 5205              		.loc 1 1470 0
 5206 1b92 FFF7FEFF 		bl	magic
 5207              		.loc 1 1472 0
 5208 1b96 0523     		mov	r3, #5
 5209 1b98 0A99     		ldr	r1, [sp, #40]
 5210 1b9a 0B70     		strb	r3, [r1]
 5211 1b9c 0B1C     		mov	r3, r1
 5212              	.LVL699:
 5213 1b9e 0133     		add	r3, r3, #1
 5214              		.loc 1 1473 0
 5215 1ba0 0622     		mov	r2, #6
 5216 1ba2 1A70     		strb	r2, [r3]
 5217 1ba4 0133     		add	r3, r3, #1
 5218              	.LVL700:
 5219              		.loc 1 1474 0
 5220 1ba6 020E     		lsr	r2, r0, #24
 5221 1ba8 1A70     		strb	r2, [r3]
 5222 1baa 0133     		add	r3, r3, #1
 5223              	.LVL701:
 5224 1bac 020C     		lsr	r2, r0, #16
 5225 1bae 1A70     		strb	r2, [r3]
 5226 1bb0 0133     		add	r3, r3, #1
 5227              	.LVL702:
 5228 1bb2 020A     		lsr	r2, r0, #8
 5229 1bb4 1A70     		strb	r2, [r3]
 5230 1bb6 0133     		add	r3, r3, #1
 5231              	.LVL703:
 5232 1bb8 1870     		strb	r0, [r3]
 5233 1bba 0133     		add	r3, r3, #1
 5234              	.LVL704:
 5235 1bbc 0A93     		str	r3, [sp, #40]
 5236              	.LVL705:
 5237 1bbe 0324     		mov	r4, #3
 5238              	.LVL706:
 5239 1bc0 74E0     		b	.L235
 5240              	.LVL707:
 5241              	.L269:
 5242              		.loc 1 1477 0
 5243 1bc2 079A     		ldr	r2, [sp, #28]
 5244 1bc4 1378     		ldrb	r3, [r2]
 5245 1bc6 8022     		mov	r2, #128
 5246 1bc8 5242     		neg	r2, r2
 5247 1bca 1343     		orr	r3, r3, r2
 5248 1bcc 0799     		ldr	r1, [sp, #28]
 5249 1bce 0B70     		strb	r3, [r1]
 5250              		.loc 1 1478 0
 5251 1bd0 0E9A     		ldr	r2, [sp, #56]
 5252 1bd2 CA60     		str	r2, [r1, #12]
 5253 1bd4 0224     		mov	r4, #2
 5254              	.LVL708:
 5255 1bd6 69E0     		b	.L235
 5256              	.LVL709:
 5257              	.L242:
 5258              		.loc 1 1484 0
 5259 1bd8 0FAC     		add	r4, sp, #60
 5260              	.LVL710:
 5261 1bda 4346     		mov	r3, r8
 5262 1bdc E018     		add	r0, r4, r3
 5263              	.LVL711:
 5264 1bde 674A     		ldr	r2, .L291+20
 5265 1be0 5021     		mov	r1, #80
 5266              	.LVL712:
 5267 1be2 FFF7FEFF 		bl	snprintf
 5268              		.loc 1 1485 0
 5269 1be6 201C     		mov	r0, r4
 5270 1be8 FFF7FEFF 		bl	strlen
 5271 1bec 8046     		mov	r8, r0
 5272              		.loc 1 1487 0
 5273 1bee 0899     		ldr	r1, [sp, #32]
 5274 1bf0 4B78     		ldrb	r3, [r1, #1]
 5275 1bf2 DB07     		lsl	r3, r3, #31
 5276 1bf4 DB0F     		lsr	r3, r3, #31
 5277 1bf6 1B06     		lsl	r3, r3, #24
 5278 1bf8 002B     		cmp	r3, #0
 5279 1bfa 56D0     		beq	.L266
 5280              	.LVL713:
 5281 1bfc 022E     		cmp	r6, #2
 5282 1bfe 54D1     		bne	.L266
 5283              		.loc 1 1492 0
 5284 1c00 079A     		ldr	r2, [sp, #28]
 5285 1c02 5378     		ldrb	r3, [r2, #1]
 5286 1c04 0122     		mov	r2, #1
 5287 1c06 1343     		orr	r3, r3, r2
 5288 1c08 0799     		ldr	r1, [sp, #28]
 5289 1c0a 4B70     		strb	r3, [r1, #1]
 5290 1c0c 0224     		mov	r4, #2
 5291              	.LVL714:
 5292 1c0e 4DE0     		b	.L235
 5293              	.LVL715:
 5294              	.L243:
 5295              		.loc 1 1497 0
 5296 1c10 0FAC     		add	r4, sp, #60
 5297              	.LVL716:
 5298 1c12 4246     		mov	r2, r8
 5299 1c14 A018     		add	r0, r4, r2
 5300              	.LVL717:
 5301 1c16 5A4A     		ldr	r2, .L291+24
 5302 1c18 5021     		mov	r1, #80
 5303              	.LVL718:
 5304 1c1a FFF7FEFF 		bl	snprintf
 5305              		.loc 1 1498 0
 5306 1c1e 201C     		mov	r0, r4
 5307 1c20 FFF7FEFF 		bl	strlen
 5308 1c24 8046     		mov	r8, r0
 5309              		.loc 1 1500 0
 5310 1c26 0899     		ldr	r1, [sp, #32]
 5311 1c28 4B78     		ldrb	r3, [r1, #1]
 5312 1c2a 9A07     		lsl	r2, r3, #30
 5313 1c2c 3DD5     		bpl	.L266
 5314              	.LVL719:
 5315 1c2e 022E     		cmp	r6, #2
 5316 1c30 3BD1     		bne	.L266
 5317              		.loc 1 1505 0
 5318 1c32 0799     		ldr	r1, [sp, #28]
 5319 1c34 4B78     		ldrb	r3, [r1, #1]
 5320 1c36 0222     		mov	r2, #2
 5321 1c38 1343     		orr	r3, r3, r2
 5322 1c3a 4B70     		strb	r3, [r1, #1]
 5323 1c3c 0224     		mov	r4, #2
 5324              	.LVL720:
 5325 1c3e 35E0     		b	.L235
 5326              	.LVL721:
 5327              	.L244:
 5328              		.loc 1 1510 0
 5329 1c40 0FAC     		add	r4, sp, #60
 5330              	.LVL722:
 5331 1c42 4246     		mov	r2, r8
 5332 1c44 A018     		add	r0, r4, r2
 5333              	.LVL723:
 5334 1c46 4F4A     		ldr	r2, .L291+28
 5335 1c48 5021     		mov	r1, #80
 5336              	.LVL724:
 5337 1c4a FFF7FEFF 		bl	snprintf
 5338              		.loc 1 1511 0
 5339 1c4e 201C     		mov	r0, r4
 5340 1c50 FFF7FEFF 		bl	strlen
 5341 1c54 8046     		mov	r8, r0
 5342 1c56 0424     		mov	r4, #4
 5343              	.LVL725:
 5344 1c58 28E0     		b	.L235
 5345              	.LVL726:
 5346              	.L245:
 5347              		.loc 1 1518 0
 5348 1c5a 0FAC     		add	r4, sp, #60
 5349              	.LVL727:
 5350 1c5c 4346     		mov	r3, r8
 5351 1c5e E018     		add	r0, r4, r3
 5352              	.LVL728:
 5353 1c60 494A     		ldr	r2, .L291+32
 5354 1c62 5021     		mov	r1, #80
 5355              	.LVL729:
 5356 1c64 FFF7FEFF 		bl	snprintf
 5357              		.loc 1 1519 0
 5358 1c68 201C     		mov	r0, r4
 5359 1c6a FFF7FEFF 		bl	strlen
 5360 1c6e 8046     		mov	r8, r0
 5361 1c70 0424     		mov	r4, #4
 5362              	.LVL730:
 5363 1c72 1BE0     		b	.L235
 5364              	.LVL731:
 5365              	.L246:
 5366              		.loc 1 1526 0
 5367 1c74 0FAC     		add	r4, sp, #60
 5368              	.LVL732:
 5369 1c76 4146     		mov	r1, r8
 5370              	.LVL733:
 5371 1c78 6018     		add	r0, r4, r1
 5372              	.LVL734:
 5373 1c7a 444A     		ldr	r2, .L291+36
 5374 1c7c 5021     		mov	r1, #80
 5375 1c7e FFF7FEFF 		bl	snprintf
 5376              		.loc 1 1527 0
 5377 1c82 201C     		mov	r0, r4
 5378 1c84 FFF7FEFF 		bl	strlen
 5379 1c88 8046     		mov	r8, r0
 5380 1c8a 0424     		mov	r4, #4
 5381              	.LVL735:
 5382 1c8c 0EE0     		b	.L235
 5383              	.LVL736:
 5384              	.L236:
 5385              		.loc 1 1534 0
 5386 1c8e 0FAC     		add	r4, sp, #60
 5387              	.LVL737:
 5388 1c90 4246     		mov	r2, r8
 5389 1c92 A018     		add	r0, r4, r2
 5390              	.LVL738:
 5391 1c94 3E4A     		ldr	r2, .L291+40
 5392 1c96 5021     		mov	r1, #80
 5393              	.LVL739:
 5394 1c98 5B46     		mov	r3, fp
 5395 1c9a FFF7FEFF 		bl	snprintf
 5396              		.loc 1 1535 0
 5397 1c9e 201C     		mov	r0, r4
 5398 1ca0 FFF7FEFF 		bl	strlen
 5399 1ca4 8046     		mov	r8, r0
 5400 1ca6 0424     		mov	r4, #4
 5401              	.LVL740:
 5402 1ca8 00E0     		b	.L235
 5403              	.LVL741:
 5404              	.L266:
 5405              		.loc 1 1541 0
 5406 1caa 0424     		mov	r4, #4
 5407              	.LVL742:
 5408              	.L235:
 5409              		.loc 1 1543 0
 5410 1cac 4346     		mov	r3, r8
 5411 1cae 2F2B     		cmp	r3, #47
 5412 1cb0 06DD     		ble	.L270
 5413              		.loc 1 1544 0
 5414 1cb2 3849     		ldr	r1, .L291+44
 5415              	.LVL743:
 5416 1cb4 0520     		mov	r0, #5
 5417              	.LVL744:
 5418 1cb6 0FAA     		add	r2, sp, #60
 5419 1cb8 FFF7FEFF 		bl	ppp_trace
 5420 1cbc 0021     		mov	r1, #0
 5421 1cbe 8846     		mov	r8, r1
 5422              	.LVL745:
 5423              	.L270:
 5424              		.loc 1 1548 0
 5425 1cc0 022C     		cmp	r4, #2
 5426 1cc2 02D1     		bne	.L287
 5427 1cc4 4A46     		mov	r2, r9
 5428 1cc6 022A     		cmp	r2, #2
 5429 1cc8 1CD1     		bne	.L271
 5430              	.L287:
 5431              		.loc 1 1553 0
 5432 1cca 032C     		cmp	r4, #3
 5433 1ccc 0BD1     		bne	.L273
 5434              		.loc 1 1554 0
 5435 1cce 039B     		ldr	r3, [sp, #12]
 5436 1cd0 002B     		cmp	r3, #0
 5437 1cd2 02D0     		beq	.L288
 5438              	.LVL746:
 5439 1cd4 5946     		mov	r1, fp
 5440              	.LVL747:
 5441 1cd6 0529     		cmp	r1, #5
 5442 1cd8 07D1     		bne	.L274
 5443              	.LVL748:
 5444              	.L288:
 5445              		.loc 1 1558 0
 5446 1cda 4A46     		mov	r2, r9
 5447 1cdc 042A     		cmp	r2, #4
 5448 1cde 11D0     		beq	.L271
 5449              		.loc 1 1559 0
 5450 1ce0 0323     		mov	r3, #3
 5451 1ce2 9946     		mov	r9, r3
 5452 1ce4 0EE0     		b	.L271
 5453              	.LVL749:
 5454              	.L273:
 5455              		.loc 1 1564 0
 5456 1ce6 042C     		cmp	r4, #4
 5457 1ce8 0CD1     		bne	.L271
 5458              	.L274:
 5459              		.loc 1 1566 0
 5460 1cea 0999     		ldr	r1, [sp, #36]
 5461              	.LVL750:
 5462 1cec 8F42     		cmp	r7, r1
 5463 1cee 04D0     		beq	.L276
 5464              	.LVL751:
 5465              		.loc 1 1567 0
 5466 1cf0 081C     		mov	r0, r1
 5467              	.LVL752:
 5468 1cf2 391C     		mov	r1, r7
 5469 1cf4 321C     		mov	r2, r6
 5470 1cf6 FFF7FEFF 		bl	memcpy
 5471              	.LVL753:
 5472              	.L276:
 5473              		.loc 1 1569 0
 5474 1cfa 099A     		ldr	r2, [sp, #36]
 5475 1cfc 9219     		add	r2, r2, r6
 5476 1cfe 0992     		str	r2, [sp, #36]
 5477              	.LVL754:
 5478 1d00 0423     		mov	r3, #4
 5479 1d02 9946     		mov	r9, r3
 5480              	.LVL755:
 5481              	.L271:
 5482              		.loc 1 1228 0
 5483 1d04 002D     		cmp	r5, #0
 5484 1d06 01D0     		beq	.L277
 5485              	.LVL756:
 5486 1d08 5746     		mov	r7, sl
 5487 1d0a C5E4     		b	.L278
 5488              	.L277:
 5489 1d0c 4C46     		mov	r4, r9
 5490              	.LVL757:
 5491              		.loc 1 1580 0
 5492 1d0e 032C     		cmp	r4, #3
 5493 1d10 09D0     		beq	.L280
 5494              	.LVL758:
 5495 1d12 042C     		cmp	r4, #4
 5496 1d14 10D0     		beq	.L281
 5497 1d16 022C     		cmp	r4, #2
 5498 1d18 13D1     		bne	.L279
 5499              	.LVL759:
 5500              	.L232:
 5501              		.loc 1 1582 0
 5502 1d1a 5146     		mov	r1, sl
 5503              	.LVL760:
 5504 1d1c 059A     		ldr	r2, [sp, #20]
 5505 1d1e 8B1A     		sub	r3, r1, r2
 5506 1d20 0499     		ldr	r1, [sp, #16]
 5507 1d22 0B60     		str	r3, [r1]
 5508 1d24 0DE0     		b	.L279
 5509              	.LVL761:
 5510              	.L280:
 5511              		.loc 1 1588 0
 5512 1d26 1C49     		ldr	r1, .L291+48
 5513              	.LVL762:
 5514 1d28 0A9B     		ldr	r3, [sp, #40]
 5515 1d2a 5A1A     		sub	r2, r3, r1
 5516 1d2c 049B     		ldr	r3, [sp, #16]
 5517 1d2e 1A60     		str	r2, [r3]
 5518              		.loc 1 1589 0
 5519 1d30 0598     		ldr	r0, [sp, #20]
 5520              	.LVL763:
 5521 1d32 FFF7FEFF 		bl	memcpy
 5522 1d36 04E0     		b	.L279
 5523              	.LVL764:
 5524              	.L281:
 5525              		.loc 1 1592 0
 5526 1d38 0999     		ldr	r1, [sp, #36]
 5527              	.LVL765:
 5528 1d3a 059A     		ldr	r2, [sp, #20]
 5529 1d3c 8B1A     		sub	r3, r1, r2
 5530 1d3e 0499     		ldr	r1, [sp, #16]
 5531 1d40 0B60     		str	r3, [r1]
 5532              	.LVL766:
 5533              	.L279:
 5534              		.loc 1 1597 0
 5535 1d42 4246     		mov	r2, r8
 5536 1d44 002A     		cmp	r2, #0
 5537 1d46 04DD     		ble	.L282
 5538              		.loc 1 1598 0
 5539 1d48 1449     		ldr	r1, .L291+52
 5540              	.LVL767:
 5541 1d4a 0520     		mov	r0, #5
 5542              	.LVL768:
 5543 1d4c 0FAA     		add	r2, sp, #60
 5544 1d4e FFF7FEFF 		bl	ppp_trace
 5545              	.LVL769:
 5546              	.L282:
 5547              		.loc 1 1601 0
 5548 1d52 4B46     		mov	r3, r9
 5549 1d54 022B     		cmp	r3, #2
 5550 1d56 01D1     		bne	.L283
 5551              	.LVL770:
 5552 1d58 114A     		ldr	r2, .L291+56
 5553 1d5a 26E0     		b	.L284
 5554              	.L283:
 5555 1d5c 4946     		mov	r1, r9
 5556              	.LVL771:
 5557 1d5e 0329     		cmp	r1, #3
 5558 1d60 22D0     		beq	.L285
 5559 1d62 104A     		ldr	r2, .L291+60
 5560 1d64 21E0     		b	.L284
 5561              	.L292:
 5562 1d66 C046     		.align	2
 5563              	.L291:
 5564 1d68 10070000 		.word	.LC160
 5565 1d6c 1C070000 		.word	.LC162
 5566 1d70 44070000 		.word	.LC164
 5567 1d74 68070000 		.word	.LC166
 5568 1d78 7C070000 		.word	.LC168
 5569 1d7c 90070000 		.word	.LC170
 5570 1d80 A0070000 		.word	.LC172
 5571 1d84 B0070000 		.word	.LC174
 5572 1d88 BC070000 		.word	.LC176
 5573 1d8c C8070000 		.word	.LC178
 5574 1d90 D4070000 		.word	.LC180
 5575 1d94 E0070000 		.word	.LC182
 5576 1d98 44000000 		.word	nak_buffer
 5577 1d9c F4070000 		.word	.LC184
 5578 1da0 04080000 		.word	.LC186
 5579 1da4 08080000 		.word	.LC188
 5580              	.L285:
 5581 1da8 074A     		ldr	r2, .L293
 5582              	.LVL772:
 5583              	.L284:
 5584 1daa 0849     		ldr	r1, .L293+4
 5585              	.LVL773:
 5586 1dac 0520     		mov	r0, #5
 5587              	.LVL774:
 5588 1dae FFF7FEFF 		bl	ppp_trace
 5589              		.loc 1 1603 0
 5590 1db2 4846     		mov	r0, r9
 5591 1db4 23B0     		add	sp, sp, #140
 5592              		@ sp needed for prologue
 5593              	.LVL775:
 5594              	.LVL776:
 5595              	.LVL777:
 5596              	.LVL778:
 5597              	.LVL779:
 5598              	.LVL780:
 5599 1db6 3CBC     		pop	{r2, r3, r4, r5}
 5600 1db8 9046     		mov	r8, r2
 5601 1dba 9946     		mov	r9, r3
 5602 1dbc A246     		mov	sl, r4
 5603 1dbe AB46     		mov	fp, r5
 5604 1dc0 F0BC     		pop	{r4, r5, r6, r7}
 5605 1dc2 02BC     		pop	{r1}
 5606 1dc4 0847     		bx	r1
 5607              	.L294:
 5608 1dc6 C046     		.align	2
 5609              	.L293:
 5610 1dc8 0C080000 		.word	.LC190
 5611 1dcc 10080000 		.word	.LC192
 5612              	.LFE306:
 5614              		.align	2
 5615              		.code	16
 5616              		.thumb_func
 5618              	lcp_resetci:
 5619              	.LFB300:
 5620              		.loc 1 491 0
 5621 1dd0 70B5     		push	{r4, r5, r6, lr}
 5622              	.LCFI40:
 5623              	.LVL781:
 5624 1dd2 061C     		mov	r6, r0
 5625              		.loc 1 492 0
 5626 1dd4 0468     		ldr	r4, [r0]
 5627 1dd6 FFF7FEFF 		bl	magic
 5628              	.LVL782:
 5629 1dda 124D     		ldr	r5, .L297
 5630 1ddc 6300     		lsl	r3, r4, #1
 5631 1dde 1B19     		add	r3, r3, r4
 5632 1de0 DB00     		lsl	r3, r3, #3
 5633 1de2 EB18     		add	r3, r5, r3
 5634 1de4 D860     		str	r0, [r3, #12]
 5635              		.loc 1 493 0
 5636 1de6 3268     		ldr	r2, [r6]
 5637 1de8 5300     		lsl	r3, r2, #1
 5638 1dea 9B18     		add	r3, r3, r2
 5639 1dec DB00     		lsl	r3, r3, #3
 5640 1dee EB18     		add	r3, r5, r3
 5641 1df0 1033     		add	r3, r3, #16
 5642 1df2 0022     		mov	r2, #0
 5643 1df4 1A60     		str	r2, [r3]
 5644              		.loc 1 494 0
 5645 1df6 3268     		ldr	r2, [r6]
 5646 1df8 0B49     		ldr	r1, .L297+4
 5647 1dfa 5300     		lsl	r3, r2, #1
 5648 1dfc 9B18     		add	r3, r3, r2
 5649 1dfe DB00     		lsl	r3, r3, #3
 5650 1e00 C918     		add	r1, r1, r3
 5651 1e02 ED18     		add	r5, r5, r3
 5652 1e04 0DCD     		ldmia	r5!, {r0, r2, r3}
 5653 1e06 0DC1     		stmia	r1!, {r0, r2, r3}
 5654 1e08 0DCD     		ldmia	r5!, {r0, r2, r3}
 5655 1e0a 0DC1     		stmia	r1!, {r0, r2, r3}
 5656              		.loc 1 495 0
 5657 1e0c 0749     		ldr	r1, .L297+8
 5658 1e0e 3368     		ldr	r3, [r6]
 5659 1e10 9B00     		lsl	r3, r3, #2
 5660 1e12 074A     		ldr	r2, .L297+12
 5661 1e14 5A50     		str	r2, [r3, r1]
 5662              		.loc 1 496 0
 5663 1e16 3068     		ldr	r0, [r6]
 5664 1e18 FFF7FEFF 		bl	auth_reset
 5665              		.loc 1 497 0
 5666              		@ sp needed for prologue
 5667              	.LVL783:
 5668 1e1c 70BC     		pop	{r4, r5, r6}
 5669 1e1e 01BC     		pop	{r0}
 5670 1e20 0047     		bx	r0
 5671              	.L298:
 5672 1e22 C046     		.align	2
 5673              	.L297:
 5674 1e24 00000000 		.word	lcp_wantoptions
 5675 1e28 00000000 		.word	lcp_gotoptions
 5676 1e2c 00000000 		.word	peer_mru
 5677 1e30 DC050000 		.word	1500
 5678              	.LFE300:
 5680              		.global	lcp_protent
 5681              		.section	.rodata.str1.4
 5682 082e 0000     		.align	2
 5683              	.LC197:
 5684 0830 4C435000 		.ascii	"LCP\000"
 5685              		.data
 5686              		.align	2
 5689              	lcp_protent:
 5690 0000 21C0     		.short	-16351
 5691 0002 0000     		.space	2
 5692 0004 00000000 		.word	lcp_init
 5693 0008 00000000 		.word	lcp_input
 5694 000c 00000000 		.word	lcp_protrej
 5695 0010 00000000 		.word	lcp_lowerup
 5696 0014 00000000 		.word	lcp_lowerdown
 5697 0018 00000000 		.word	lcp_open
 5698 001c 00000000 		.word	lcp_close
 5699 0020 01000000 		.word	1
 5700 0024 30080000 		.word	.LC197
 5701              		.global	lcp_loopbackfail
 5702              		.align	2
 5705              	lcp_loopbackfail:
 5706 0028 0A000000 		.word	10
 5707              		.align	2
 5710              	lcp_callbacks:
 5711 002c 00000000 		.word	lcp_resetci
 5712 0030 00000000 		.word	lcp_cilen
 5713 0034 00000000 		.word	lcp_addci
 5714 0038 00000000 		.word	lcp_ackci
 5715 003c 00000000 		.word	lcp_nakci
 5716 0040 00000000 		.word	lcp_rejci
 5717 0044 00000000 		.word	lcp_reqci
 5718 0048 00000000 		.word	lcp_up
 5719 004c 00000000 		.word	lcp_down
 5720 0050 00000000 		.word	lcp_starting
 5721 0054 00000000 		.word	lcp_finished
 5722 0058 00000000 		.word	0
 5723 005c 00000000 		.word	0
 5724 0060 00000000 		.word	lcp_extcode
 5725 0064 30080000 		.word	.LC197
 5726              		.bss
 5727              		.align	2
 5728              	lcp_echos_pending:
 5729 0000 00000000 		.space	4
 5730              		.align	2
 5731              	lcp_echo_timer_running:
 5732 0004 00000000 		.space	4
 5733              		.align	2
 5734              	lcp_echo_number:
 5735 0008 00000000 		.space	4
 5736              		.align	2
 5737              	lcp_fsm:
 5738 000c 00000000 		.space	56
 5738      00000000 
 5738      00000000 
 5738      00000000 
 5738      00000000 
 5739              	nak_buffer:
 5740 0044 00000000 		.space	1500
 5740      00000000 
 5740      00000000 
 5740      00000000 
 5740      00000000 
 5741              		.comm	lcp_phase,4,4
 5742              		.comm	lcp_wantoptions,24,4
 5743              		.comm	lcp_gotoptions,24,4
 5744              		.comm	lcp_allowoptions,24,4
 5745              		.comm	lcp_hisoptions,24,4
 5746              		.comm	xmit_accm,32,1
 6295              	.Letext0:
 12430              		.code 16
 12431              		.align	1
 12432              	.L111:
 12433 1e34 1847C046 		bx	r3
DEFINED SYMBOLS
                            *ABS*:00000000 lcp.c
     /tmp/ccvxcEuN.s:1      .text:00000000 $t
     /tmp/ccvxcEuN.s:15     .text:00000000 lcp_cilen
     /tmp/ccvxcEuN.s:131    .text:000000a4 $d
                            *COM*:00000018 lcp_gotoptions
     /tmp/ccvxcEuN.s:158    .text:000000a8 $t
     /tmp/ccvxcEuN.s:161    .text:000000a8 lcp_rejci
     /tmp/ccvxcEuN.s:679    .text:000003ac $d
     /tmp/ccvxcEuN.s:691    .text:000003d4 $t
     /tmp/ccvxcEuN.s:790    .text:0000047c $d
     /tmp/ccvxcEuN.s:802    .text:00000480 $t
     /tmp/ccvxcEuN.s:805    .text:00000480 lcp_ackci
     /tmp/ccvxcEuN.s:1202   .text:0000068c $d
     /tmp/ccvxcEuN.s:1234   .text:000006a4 $t
     /tmp/ccvxcEuN.s:1237   .text:000006a4 lcp_addci
     /tmp/ccvxcEuN.s:1573   .text:00000898 $d
     /tmp/ccvxcEuN.s:1591   .text:000008c0 $t
     /tmp/ccvxcEuN.s:1594   .text:000008c0 lcp_protrej
     /tmp/ccvxcEuN.s:1622   .text:000008e0 $d
     /tmp/ccvxcEuN.s:5737   .bss:0000000c lcp_fsm
     /tmp/ccvxcEuN.s:1627   .text:000008e8 $t
     /tmp/ccvxcEuN.s:1630   .text:000008e8 lcp_input
     /tmp/ccvxcEuN.s:1652   .text:000008fc $d
     /tmp/ccvxcEuN.s:1660   .text:00000900 lcp_sprotrej
     /tmp/ccvxcEuN.s:1657   .text:00000900 $t
     /tmp/ccvxcEuN.s:1702   .text:00000934 $d
     /tmp/ccvxcEuN.s:1731   .text:00000938 $t
     /tmp/ccvxcEuN.s:1734   .text:00000938 lcp_extcode
     /tmp/ccvxcEuN.s:2014   .text:00000aa8 $d
     /tmp/ccvxcEuN.s:5728   .bss:00000000 lcp_echos_pending
     /tmp/ccvxcEuN.s:2032   .text:00000ad4 lcp_lowerdown
     /tmp/ccvxcEuN.s:2029   .text:00000ad4 $t
     /tmp/ccvxcEuN.s:2053   .text:00000ae8 $d
     /tmp/ccvxcEuN.s:2066   .text:00000aec lcp_lowerup
     /tmp/ccvxcEuN.s:2063   .text:00000aec $t
     /tmp/ccvxcEuN.s:2186   .text:00000bb4 $d
                            *COM*:00000018 lcp_wantoptions
                            *COM*:00000020 xmit_accm
                            *COM*:00000018 lcp_allowoptions
     /tmp/ccvxcEuN.s:2196   .text:00000bd0 $t
     /tmp/ccvxcEuN.s:2199   .text:00000bd0 lcp_finished
     /tmp/ccvxcEuN.s:2220   .text:00000bdc lcp_close
     /tmp/ccvxcEuN.s:2282   .text:00000c24 $d
                            *COM*:00000004 lcp_phase
     /tmp/ccvxcEuN.s:2291   .text:00000c2c lcp_open
     /tmp/ccvxcEuN.s:2288   .text:00000c2c $t
     /tmp/ccvxcEuN.s:2354   .text:00000c78 $d
     /tmp/ccvxcEuN.s:2369   .text:00000c84 lcp_init
     /tmp/ccvxcEuN.s:2366   .text:00000c84 $t
     /tmp/ccvxcEuN.s:2604   .text:00000de4 $d
     /tmp/ccvxcEuN.s:5710   .data:0000002c lcp_callbacks
     /tmp/ccvxcEuN.s:2616   .text:00000e08 $t
     /tmp/ccvxcEuN.s:2619   .text:00000e08 lcp_starting
     /tmp/ccvxcEuN.s:2639   .text:00000e14 lcp_down
     /tmp/ccvxcEuN.s:2729   .text:00000e94 $d
     /tmp/ccvxcEuN.s:5731   .bss:00000004 lcp_echo_timer_running
     /tmp/ccvxcEuN.s:2877   .text:00000f64 LcpEchoTimeout
     /tmp/ccvxcEuN.s:2749   .text:00000eac $t
     /tmp/ccvxcEuN.s:2752   .text:00000eac LcpEchoCheck
     /tmp/ccvxcEuN.s:2863   .text:00000f44 $d
     /tmp/ccvxcEuN.s:5734   .bss:00000008 lcp_echo_number
     /tmp/ccvxcEuN.s:2874   .text:00000f64 $t
     /tmp/ccvxcEuN.s:2903   .text:00000f7c $d
     /tmp/ccvxcEuN.s:2907   .text:00000f80 $t
     /tmp/ccvxcEuN.s:2910   .text:00000f80 lcp_up
     /tmp/ccvxcEuN.s:3087   .text:0000107c $d
                            *COM*:00000018 lcp_hisoptions
     /tmp/ccvxcEuN.s:3110   .text:000010a0 $t
     /tmp/ccvxcEuN.s:3113   .text:000010a0 lcp_nakci
     /tmp/ccvxcEuN.s:3656   .text:000013d8 $d
     /tmp/ccvxcEuN.s:3664   .text:000013f0 $t
     /tmp/ccvxcEuN.s:3780   .rodata:00000000 $d
     /tmp/ccvxcEuN.s:4061   .text:0000160c $d
     /tmp/ccvxcEuN.s:5705   .data:00000028 lcp_loopbackfail
     /tmp/ccvxcEuN.s:4181   .text:00001624 $t
     /tmp/ccvxcEuN.s:4184   .text:00001624 lcp_reqci
     /tmp/ccvxcEuN.s:4877   .text:00001994 $d
     /tmp/ccvxcEuN.s:5739   .bss:00000044 nak_buffer
     /tmp/ccvxcEuN.s:4907   .text:00001a00 $t
     /tmp/ccvxcEuN.s:5564   .text:00001d68 $d
     /tmp/ccvxcEuN.s:5581   .text:00001da8 $t
     /tmp/ccvxcEuN.s:5610   .text:00001dc8 $d
     /tmp/ccvxcEuN.s:5615   .text:00001dd0 $t
     /tmp/ccvxcEuN.s:5618   .text:00001dd0 lcp_resetci
     /tmp/ccvxcEuN.s:5674   .text:00001e24 $d
     /tmp/ccvxcEuN.s:5689   .data:00000000 lcp_protent
     /tmp/ccvxcEuN.s:5690   .data:00000000 $d
     /tmp/ccvxcEuN.s:12430  .text:00001e34 $t

UNDEFINED SYMBOLS
ppp_trace
fsm_protreject
fsm_input
fsm_sdata
ppp_protocols
fsm_lowerdown
ppp_set_xaccm
ppp_send_config
ppp_recv_config
fsm_lowerup
peer_mru
link_terminated
fsm_close
fsm_open
fsm_init
memset
link_required
sys_untimeout
link_down
sys_timeout
link_established
magic
snprintf
strlen
memcpy
auth_reset
