   1              		.code	16
   2              		.file	"ipcp.c"
  10              	.Ltext0:
  11              		.align	2
  12              		.code	16
  13              		.thumb_func
  15              	ipcp_resetci:
  16              	.LFB297:
  17              		.file 1 "rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c"
   1:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*****************************************************************************
   2:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * ipcp.c - Network PPP IP Control Protocol program file.
   3:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** *
   4:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * Copyright (c) 2003 by Marc Boucher, Services Informatiques (MBSI) inc.
   5:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * portions Copyright (c) 1997 by Global Election Systems Inc.
   6:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** *
   7:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * The authors hereby grant permission to use, copy, modify, distribute,
   8:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * and license this software and its documentation for any purpose, provided
   9:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * that existing copyright notices are retained in all copies and that this
  10:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * notice and the following disclaimer are included verbatim in any
  11:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * distributions. No written agreement, license, or royalty fee is required
  12:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * for any of the authorized uses.
  13:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** *
  14:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * THIS SOFTWARE IS PROVIDED BY THE CONTRIBUTORS *AS IS* AND ANY EXPRESS OR
  15:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
  16:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  17:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * IN NO EVENT SHALL THE CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,
  18:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  19:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  20:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
  21:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
  22:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
  23:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  24:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** *
  25:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ******************************************************************************
  26:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * REVISION HISTORY
  27:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** *
  28:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * 03-01-01 Marc Boucher <marc@mbsi.ca>
  29:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** *   Ported to lwIP.
  30:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** * 97-12-08 Guy Lancaster <lancasterg@acm.org>, Global Election Systems Inc.
  31:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** *   Original.
  32:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** *****************************************************************************/
  33:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
  34:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp.c - PPP IP Control Protocol.
  35:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  *
  36:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * Copyright (c) 1989 Carnegie Mellon University.
  37:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * All rights reserved.
  38:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  *
  39:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * Redistribution and use in source and binary forms are permitted
  40:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * provided that the above copyright notice and this paragraph are
  41:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * duplicated in all such forms and that any documentation,
  42:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * advertising materials, and other materials related to such
  43:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * distribution and use acknowledge that the software was developed
  44:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * by Carnegie Mellon University.  The name of the
  45:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * University may not be used to endorse or promote products derived
  46:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * from this software without specific prior written permission.
  47:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
  48:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
  49:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
  50:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
  51:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
  52:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #include "lwip/opt.h"
  53:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
  54:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #if PPP_SUPPORT /* don't build if not configured for use in lwipopts.h */
  55:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
  56:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #include "ppp.h"
  57:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #include "pppdebug.h"
  58:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
  59:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #include "auth.h"
  60:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #include "fsm.h"
  61:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #include "vj.h"
  62:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #include "ipcp.h"
  63:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
  64:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #include <string.h>
  65:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
  66:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*************************/
  67:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*** LOCAL DEFINITIONS ***/
  68:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*************************/
  69:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /* #define OLD_CI_ADDRS 1 */ /* Support deprecated address negotiation. */
  70:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
  71:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
  72:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * Lengths of configuration options.
  73:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
  74:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define CILEN_VOID     2
  75:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define CILEN_COMPRESS 4  /* min length for compression protocol opt. */
  76:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define CILEN_VJ       6  /* length for RFC1332 Van-Jacobson opt. */
  77:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define CILEN_ADDR     6  /* new-style single address option */
  78:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define CILEN_ADDRS    10 /* old-style dual address option */
  79:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
  80:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
  81:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
  82:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /***********************************/
  83:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*** LOCAL FUNCTION DECLARATIONS ***/
  84:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /***********************************/
  85:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
  86:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * Callbacks for fsm code.  (CI = Configuration Information)
  87:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
  88:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void ipcp_resetci (fsm *);                     /* Reset our CI */
  89:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static int  ipcp_cilen (fsm *);                       /* Return length of our CI */
  90:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void ipcp_addci (fsm *, u_char *, int *);      /* Add our CI */
  91:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static int  ipcp_ackci (fsm *, u_char *, int);        /* Peer ack'd our CI */
  92:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static int  ipcp_nakci (fsm *, u_char *, int);        /* Peer nak'd our CI */
  93:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static int  ipcp_rejci (fsm *, u_char *, int);        /* Peer rej'd our CI */
  94:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static int  ipcp_reqci (fsm *, u_char *, int *, int); /* Rcv CI */
  95:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void ipcp_up (fsm *);                          /* We're UP */
  96:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void ipcp_down (fsm *);                        /* We're DOWN */
  97:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #if 0
  98:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void ipcp_script (fsm *, char *); /* Run an up/down script */
  99:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #endif
 100:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void ipcp_finished (fsm *);                    /* Don't need lower layer */
 101:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 102:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
 103:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * Protocol entry points from main code.
 104:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
 105:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void ipcp_init (int);
 106:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void ipcp_open (int);
 107:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void ipcp_close (int, char *);
 108:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void ipcp_lowerup (int);
 109:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void ipcp_lowerdown (int);
 110:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void ipcp_input (int, u_char *, int);
 111:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void ipcp_protrej (int);
 112:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 113:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void ipcp_clear_addrs (int);
 114:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 115:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define CODENAME(x) ((x) == CONFACK ? "ACK" : \
 116:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****                      (x) == CONFNAK ? "NAK" : "REJ")
 117:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 118:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 119:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 120:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /******************************/
 121:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*** PUBLIC DATA STRUCTURES ***/
 122:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /******************************/
 123:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /* global vars */
 124:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_options ipcp_wantoptions[NUM_PPP];  /* Options that we want to request */
 125:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_options ipcp_gotoptions[NUM_PPP];   /* Options that peer ack'd */
 126:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_options ipcp_allowoptions[NUM_PPP]; /* Options we allow peer to request */
 127:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_options ipcp_hisoptions[NUM_PPP];   /* Options that we ack'd */
 128:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 129:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** fsm ipcp_fsm[NUM_PPP]; /* IPCP fsm structure */
 130:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 131:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** struct protent ipcp_protent = {
 132:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   PPP_IPCP,
 133:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_init,
 134:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_input,
 135:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_protrej,
 136:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_lowerup,
 137:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_lowerdown,
 138:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_open,
 139:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_close,
 140:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #if 0
 141:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_printpkt,
 142:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   NULL,
 143:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #endif
 144:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   1,
 145:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   "IPCP",
 146:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #if 0
 147:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ip_check_options,
 148:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   NULL,
 149:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ip_active_pkt
 150:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #endif
 151:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** };
 152:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 153:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 154:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 155:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*****************************/
 156:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*** LOCAL DATA STRUCTURES ***/
 157:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*****************************/
 158:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /* local vars */
 159:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static int cis_received[NUM_PPP];      /* # Conf-Reqs received */
 160:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static int default_route_set[NUM_PPP]; /* Have set up a default route */
 161:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 162:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static fsm_callbacks ipcp_callbacks = { /* IPCP callback routines */
 163:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_resetci,  /* Reset our Configuration Information */
 164:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_cilen,    /* Length of our Configuration Information */
 165:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_addci,    /* Add our Configuration Information */
 166:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_ackci,    /* ACK our Configuration Information */
 167:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_nakci,    /* NAK our Configuration Information */
 168:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_rejci,    /* Reject our Configuration Information */
 169:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_reqci,    /* Request peer's Configuration Information */
 170:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_up,       /* Called when fsm reaches LS_OPENED state */
 171:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_down,     /* Called when fsm leaves LS_OPENED state */
 172:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   NULL,          /* Called when we want the lower layer up */
 173:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_finished, /* Called when we want the lower layer down */
 174:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   NULL,          /* Called when Protocol-Reject received */
 175:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   NULL,          /* Retransmission is necessary */
 176:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   NULL,          /* Called to handle protocol-specific codes */
 177:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   "IPCP"         /* String name of protocol */
 178:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** };
 179:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 180:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 181:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 182:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /**********************************/
 183:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*** LOCAL FUNCTION DEFINITIONS ***/
 184:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /**********************************/
 185:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 186:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define inet_ntoa(addr) ip_ntoa(((struct ip_addr*)&(addr)))
 187:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 188:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
 189:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_init - Initialize IPCP.
 190:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
 191:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void
 192:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_init(int unit)
 193:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
 194:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   fsm           *f = &ipcp_fsm[unit];
 195:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *wo = &ipcp_wantoptions[unit];
 196:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *ao = &ipcp_allowoptions[unit];
 197:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 198:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   f->unit      = unit;
 199:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   f->protocol  = PPP_IPCP;
 200:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   f->callbacks = &ipcp_callbacks;
 201:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   fsm_init(&ipcp_fsm[unit]);
 202:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 203:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   memset(wo, 0, sizeof(*wo));
 204:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   memset(ao, 0, sizeof(*ao));
 205:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 206:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   wo->neg_addr      = 1;
 207:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   wo->ouraddr       = 0;
 208:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #if VJ_SUPPORT
 209:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   wo->neg_vj        = 1;
 210:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #else  /* VJ_SUPPORT */
 211:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   wo->neg_vj        = 0;
 212:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #endif /* VJ_SUPPORT */
 213:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   wo->vj_protocol   = IPCP_VJ_COMP;
 214:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   wo->maxslotindex  = MAX_SLOTS - 1;
 215:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   wo->cflag         = 0;
 216:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   wo->default_route = 1;
 217:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 218:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ao->neg_addr      = 1;
 219:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #if VJ_SUPPORT
 220:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ao->neg_vj        = 1;
 221:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #else  /* VJ_SUPPORT */
 222:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ao->neg_vj        = 0;
 223:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #endif /* VJ_SUPPORT */
 224:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ao->maxslotindex  = MAX_SLOTS - 1;
 225:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ao->cflag         = 1;
 226:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ao->default_route = 1;
 227:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
 228:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 229:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 230:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
 231:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_open - IPCP is allowed to come up.
 232:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
 233:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void
 234:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_open(int unit)
 235:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
 236:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   fsm_open(&ipcp_fsm[unit]);
 237:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
 238:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 239:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 240:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
 241:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_close - Take IPCP down.
 242:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
 243:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void
 244:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_close(int unit, char *reason)
 245:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
 246:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   fsm_close(&ipcp_fsm[unit], reason);
 247:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
 248:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 249:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 250:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
 251:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_lowerup - The lower layer is up.
 252:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
 253:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void
 254:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_lowerup(int unit)
 255:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
 256:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   fsm_lowerup(&ipcp_fsm[unit]);
 257:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
 258:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 259:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 260:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
 261:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_lowerdown - The lower layer is down.
 262:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
 263:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void
 264:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_lowerdown(int unit)
 265:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
 266:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   fsm_lowerdown(&ipcp_fsm[unit]);
 267:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
 268:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 269:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 270:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
 271:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_input - Input IPCP packet.
 272:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
 273:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void
 274:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_input(int unit, u_char *p, int len)
 275:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
 276:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   fsm_input(&ipcp_fsm[unit], p, len);
 277:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
 278:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 279:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 280:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
 281:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_protrej - A Protocol-Reject was received for IPCP.
 282:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  *
 283:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * Pretend the lower layer went down, so we shut up.
 284:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
 285:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void
 286:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_protrej(int unit)
 287:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
 288:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   fsm_lowerdown(&ipcp_fsm[unit]);
 289:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
 290:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 291:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 292:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
 293:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_resetci - Reset our CI.
 294:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
 295:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void
 296:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_resetci(fsm *f)
 297:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
  18              		.loc 1 297 0
  19 0000 70B5     		push	{r4, r5, r6, lr}
  20              	.LCFI0:
  21              	.LVL0:
  22 0002 041C     		mov	r4, r0
 298:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *wo = &ipcp_wantoptions[f->unit];
  23              		.loc 1 298 0
  24 0004 0168     		ldr	r1, [r0]
  25 0006 4A01     		lsl	r2, r1, #5
  26 0008 264B     		ldr	r3, .L7
  27 000a 9818     		add	r0, r3, r2
  28              	.LVL1:
 299:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 300:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   wo->req_addr = wo->neg_addr && ipcp_allowoptions[f->unit].neg_addr;
  29              		.loc 1 300 0
  30 000c 0378     		ldrb	r3, [r0]
  31 000e DB07     		lsl	r3, r3, #31
  32 0010 DB0F     		lsr	r3, r3, #31
  33 0012 1B06     		lsl	r3, r3, #24
  34 0014 002B     		cmp	r3, #0
  35 0016 01D1     		bne	.L2
  36 0018 0021     		mov	r1, #0
  37 001a 0BE0     		b	.L3
  38              	.L2:
  39 001c 224A     		ldr	r2, .L7+4
  40 001e 4B01     		lsl	r3, r1, #5
  41 0020 D35C     		ldrb	r3, [r2, r3]
  42 0022 DB07     		lsl	r3, r3, #31
  43 0024 DB0F     		lsr	r3, r3, #31
  44 0026 1B06     		lsl	r3, r3, #24
  45 0028 5A42     		neg	r2, r3
  46 002a 5341     		adc	r3, r3, r2
  47 002c 0122     		mov	r2, #1
  48 002e 5340     		eor	r3, r3, r2
  49 0030 1B06     		lsl	r3, r3, #24
  50 0032 190E     		lsr	r1, r3, #24
  51              	.L3:
  52 0034 0378     		ldrb	r3, [r0]
  53 0036 0422     		mov	r2, #4
  54 0038 9343     		bic	r3, r3, r2
  55 003a 8A00     		lsl	r2, r1, #2
  56 003c 1343     		orr	r3, r3, r2
  57 003e 0370     		strb	r3, [r0]
 301:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (wo->ouraddr == 0) {
  58              		.loc 1 301 0
  59 0040 8368     		ldr	r3, [r0, #8]
  60 0042 002B     		cmp	r3, #0
  61 0044 04D1     		bne	.L4
 302:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     wo->accept_local = 1;
  62              		.loc 1 302 0
  63 0046 0378     		ldrb	r3, [r0]
  64 0048 8022     		mov	r2, #128
  65 004a 5242     		neg	r2, r2
  66 004c 1343     		orr	r3, r3, r2
  67 004e 0370     		strb	r3, [r0]
  68              	.L4:
 303:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 304:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (wo->hisaddr == 0) {
  69              		.loc 1 304 0
  70 0050 C368     		ldr	r3, [r0, #12]
  71 0052 002B     		cmp	r3, #0
  72 0054 03D1     		bne	.L5
 305:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     wo->accept_remote = 1;
  73              		.loc 1 305 0
  74 0056 4378     		ldrb	r3, [r0, #1]
  75 0058 0122     		mov	r2, #1
  76 005a 1343     		orr	r3, r3, r2
  77 005c 4370     		strb	r3, [r0, #1]
  78              	.L5:
 306:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 307:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /* Request DNS addresses from the peer */
 308:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   wo->req_dns1 = ppp_settings.usepeerdns;
  79              		.loc 1 308 0
  80 005e 134B     		ldr	r3, .L7+8
  81 0060 1A78     		ldrb	r2, [r3]
  82 0062 5206     		lsl	r2, r2, #25
  83 0064 D20F     		lsr	r2, r2, #31
  84 0066 4378     		ldrb	r3, [r0, #1]
  85 0068 0221     		mov	r1, #2
  86 006a 8B43     		bic	r3, r3, r1
  87 006c 5100     		lsl	r1, r2, #1
  88 006e 0B43     		orr	r3, r3, r1
  89 0070 4370     		strb	r3, [r0, #1]
 309:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   wo->req_dns2 = ppp_settings.usepeerdns;
  90              		.loc 1 309 0
  91 0072 4378     		ldrb	r3, [r0, #1]
  92 0074 0421     		mov	r1, #4
  93 0076 8B43     		bic	r3, r3, r1
  94 0078 9200     		lsl	r2, r2, #2
  95 007a 1343     		orr	r3, r3, r2
  96 007c 4370     		strb	r3, [r0, #1]
 310:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_gotoptions[f->unit] = *wo;
  97              		.loc 1 310 0
  98 007e 0C4A     		ldr	r2, .L7+12
  99 0080 2368     		ldr	r3, [r4]
 100 0082 5B01     		lsl	r3, r3, #5
 101 0084 D218     		add	r2, r2, r3
 102 0086 031C     		mov	r3, r0
 103 0088 62CB     		ldmia	r3!, {r1, r5, r6}
 104 008a 62C2     		stmia	r2!, {r1, r5, r6}
 105              	.LVL2:
 106 008c 23CB     		ldmia	r3!, {r0, r1, r5}
 107 008e 23C2     		stmia	r2!, {r0, r1, r5}
 108 0090 41CB     		ldmia	r3!, {r0, r6}
 109 0092 41C2     		stmia	r2!, {r0, r6}
 311:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   cis_received[f->unit] = 0;
 110              		.loc 1 311 0
 111 0094 0749     		ldr	r1, .L7+16
 112 0096 2368     		ldr	r3, [r4]
 113              	.LVL3:
 114 0098 9B00     		lsl	r3, r3, #2
 115 009a 0022     		mov	r2, #0
 116 009c 5A50     		str	r2, [r3, r1]
 312:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
 117              		.loc 1 312 0
 118              		@ sp needed for prologue
 119              	.LVL4:
 120 009e 70BC     		pop	{r4, r5, r6}
 121 00a0 01BC     		pop	{r0}
 122 00a2 0047     		bx	r0
 123              	.L8:
 124              		.align	2
 125              	.L7:
 126 00a4 00000000 		.word	ipcp_wantoptions
 127 00a8 00000000 		.word	ipcp_allowoptions
 128 00ac 00000000 		.word	ppp_settings
 129 00b0 00000000 		.word	ipcp_gotoptions
 130 00b4 00000000 		.word	cis_received
 131              	.LFE297:
 133              		.align	2
 134              		.code	16
 135              		.thumb_func
 137              	ipcp_cilen:
 138              	.LFB298:
 313:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 314:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 315:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
 316:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_cilen - Return length of our CI.
 317:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
 318:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static int
 319:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_cilen(fsm *f)
 320:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
 139              		.loc 1 320 0
 140 00b8 30B5     		push	{r4, r5, lr}
 141              	.LCFI1:
 142              	.LVL5:
 143 00ba 051C     		mov	r5, r0
 321:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *go = &ipcp_gotoptions[f->unit];
 144              		.loc 1 321 0
 145 00bc 0368     		ldr	r3, [r0]
 146 00be 5801     		lsl	r0, r3, #5
 147              	.LVL6:
 148 00c0 354B     		ldr	r3, .L24
 149 00c2 1918     		add	r1, r3, r0
 150              	.LVL7:
 322:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *wo = &ipcp_wantoptions[f->unit];
 151              		.loc 1 322 0
 152 00c4 354B     		ldr	r3, .L24+4
 153 00c6 1C18     		add	r4, r3, r0
 154              	.LVL8:
 323:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *ho = &ipcp_hisoptions[f->unit];
 324:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 325:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define LENCIVJ(neg, old)   (neg ? (old? CILEN_COMPRESS : CILEN_VJ) : 0)
 326:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define LENCIADDR(neg, old) (neg ? (old? CILEN_ADDRS : CILEN_ADDR) : 0)
 327:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define LENCIDNS(neg)       (neg ? (CILEN_ADDR) : 0)
 328:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 329:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
 330:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * First see if we want to change our options to the old
 331:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * forms because we have received old forms from the peer.
 332:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    */
 333:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (wo->neg_addr && !go->neg_addr && !go->old_addrs) {
 155              		.loc 1 333 0
 156 00c8 2378     		ldrb	r3, [r4]
 157 00ca DB07     		lsl	r3, r3, #31
 158 00cc DB0F     		lsr	r3, r3, #31
 159 00ce 1B06     		lsl	r3, r3, #24
 160 00d0 002B     		cmp	r3, #0
 161 00d2 10D0     		beq	.L10
 162 00d4 0B78     		ldrb	r3, [r1]
 163 00d6 DB07     		lsl	r3, r3, #31
 164 00d8 DB0F     		lsr	r3, r3, #31
 165 00da 1B06     		lsl	r3, r3, #24
 166 00dc 002B     		cmp	r3, #0
 167 00de 0AD1     		bne	.L10
 168 00e0 0B78     		ldrb	r3, [r1]
 169 00e2 9A07     		lsl	r2, r3, #30
 170 00e4 07D4     		bmi	.L10
 334:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     /* use the old style of address negotiation */
 335:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     go->neg_addr = 1;
 171              		.loc 1 335 0
 172 00e6 0B78     		ldrb	r3, [r1]
 173 00e8 0122     		mov	r2, #1
 174 00ea 1343     		orr	r3, r3, r2
 175 00ec 0B70     		strb	r3, [r1]
 336:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     go->old_addrs = 1;
 176              		.loc 1 336 0
 177 00ee 0B78     		ldrb	r3, [r1]
 178 00f0 0222     		mov	r2, #2
 179 00f2 1343     		orr	r3, r3, r2
 180 00f4 0B70     		strb	r3, [r1]
 181              	.L10:
 337:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 338:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (wo->neg_vj && !go->neg_vj && !go->old_vj) {
 182              		.loc 1 338 0
 183 00f6 2378     		ldrb	r3, [r4]
 184 00f8 9A06     		lsl	r2, r3, #26
 185 00fa 22D5     		bpl	.L11
 186 00fc 0B78     		ldrb	r3, [r1]
 187 00fe 9A06     		lsl	r2, r3, #26
 188 0100 1FD4     		bmi	.L11
 189 0102 0B78     		ldrb	r3, [r1]
 190 0104 5A06     		lsl	r2, r3, #25
 191 0106 1CD4     		bmi	.L11
 339:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     /* try an older style of VJ negotiation */
 340:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (cis_received[f->unit] == 0) {
 192              		.loc 1 340 0
 193 0108 254B     		ldr	r3, .L24+8
 194 010a 2A68     		ldr	r2, [r5]
 195 010c 9200     		lsl	r2, r2, #2
 196 010e D358     		ldr	r3, [r2, r3]
 197 0110 002B     		cmp	r3, #0
 198 0112 04D1     		bne	.L12
 341:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       /* keep trying the new style until we see some CI from the peer */
 342:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       go->neg_vj = 1;
 199              		.loc 1 342 0
 200 0114 0B78     		ldrb	r3, [r1]
 201 0116 2022     		mov	r2, #32
 202 0118 1343     		orr	r3, r3, r2
 203 011a 0B70     		strb	r3, [r1]
 204 011c 11E0     		b	.L11
 205              	.L12:
 206              		.loc 1 323 0
 207 011e 214B     		ldr	r3, .L24+12
 208 0120 1818     		add	r0, r3, r0
 209              	.LVL9:
 343:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } else {
 344:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       /* use the old style only if the peer did */
 345:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       if (ho->neg_vj && ho->old_vj) {
 210              		.loc 1 345 0
 211 0122 0378     		ldrb	r3, [r0]
 212 0124 9A06     		lsl	r2, r3, #26
 213 0126 0CD5     		bpl	.L11
 214 0128 0378     		ldrb	r3, [r0]
 215 012a 5A06     		lsl	r2, r3, #25
 216 012c 09D5     		bpl	.L11
 346:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         go->neg_vj = 1;
 217              		.loc 1 346 0
 218 012e 0B78     		ldrb	r3, [r1]
 219 0130 2022     		mov	r2, #32
 220 0132 1343     		orr	r3, r3, r2
 221 0134 0B70     		strb	r3, [r1]
 347:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         go->old_vj = 1;
 222              		.loc 1 347 0
 223 0136 0B78     		ldrb	r3, [r1]
 224 0138 4022     		mov	r2, #64
 225 013a 1343     		orr	r3, r3, r2
 226 013c 0B70     		strb	r3, [r1]
 348:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         go->vj_protocol = ho->vj_protocol;
 227              		.loc 1 348 0
 228 013e 4388     		ldrh	r3, [r0, #2]
 229 0140 4B80     		strh	r3, [r1, #2]
 230              	.L11:
 349:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       }
 350:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     }
 351:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 352:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 353:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   return (LENCIADDR(go->neg_addr, go->old_addrs) +
 231              		.loc 1 353 0
 232 0142 0B78     		ldrb	r3, [r1]
 233 0144 DB07     		lsl	r3, r3, #31
 234 0146 DB0F     		lsr	r3, r3, #31
 235 0148 1B06     		lsl	r3, r3, #24
 236 014a 002B     		cmp	r3, #0
 237 014c 01D1     		bne	.L13
 238 014e 0024     		mov	r4, #0
 239              	.LVL10:
 240 0150 05E0     		b	.L14
 241              	.LVL11:
 242              	.L13:
 243 0152 0B78     		ldrb	r3, [r1]
 244 0154 9A07     		lsl	r2, r3, #30
 245 0156 01D4     		bmi	.L15
 246 0158 0624     		mov	r4, #6
 247              	.LVL12:
 248 015a 00E0     		b	.L14
 249              	.LVL13:
 250              	.L15:
 251 015c 0A24     		mov	r4, #10
 252              	.LVL14:
 253              	.L14:
 254 015e 0B78     		ldrb	r3, [r1]
 255 0160 9A06     		lsl	r2, r3, #26
 256 0162 01D4     		bmi	.L16
 257 0164 0020     		mov	r0, #0
 258              	.LVL15:
 259 0166 05E0     		b	.L17
 260              	.LVL16:
 261              	.L16:
 262 0168 0B78     		ldrb	r3, [r1]
 263 016a 5A06     		lsl	r2, r3, #25
 264 016c 01D4     		bmi	.L18
 265 016e 0620     		mov	r0, #6
 266              	.LVL17:
 267 0170 00E0     		b	.L17
 268              	.LVL18:
 269              	.L18:
 270 0172 0420     		mov	r0, #4
 271              	.LVL19:
 272              	.L17:
 273 0174 4B78     		ldrb	r3, [r1, #1]
 274 0176 9A07     		lsl	r2, r3, #30
 275 0178 01D4     		bmi	.L19
 276 017a 0022     		mov	r2, #0
 277 017c 00E0     		b	.L20
 278              	.L19:
 279 017e 0622     		mov	r2, #6
 280              	.L20:
 281 0180 4B78     		ldrb	r3, [r1, #1]
 282 0182 5907     		lsl	r1, r3, #29
 283 0184 01D4     		bmi	.L21
 284              	.LVL20:
 285 0186 0023     		mov	r3, #0
 286 0188 00E0     		b	.L22
 287              	.L21:
 288 018a 0623     		mov	r3, #6
 289              	.L22:
 290 018c 0019     		add	r0, r0, r4
 291 018e 8018     		add	r0, r0, r2
 292 0190 C018     		add	r0, r0, r3
 354:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           LENCIVJ(go->neg_vj, go->old_vj) +
 355:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           LENCIDNS(go->req_dns1) +
 356:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           LENCIDNS(go->req_dns2));
 357:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
 293              		.loc 1 357 0
 294              		@ sp needed for prologue
 295              	.LVL21:
 296 0192 30BC     		pop	{r4, r5}
 297 0194 02BC     		pop	{r1}
 298 0196 0847     		bx	r1
 299              	.L25:
 300              		.align	2
 301              	.L24:
 302 0198 00000000 		.word	ipcp_gotoptions
 303 019c 00000000 		.word	ipcp_wantoptions
 304 01a0 00000000 		.word	cis_received
 305 01a4 00000000 		.word	ipcp_hisoptions
 306              	.LFE298:
 308              		.align	2
 309              		.code	16
 310              		.thumb_func
 312              	ipcp_close:
 313              	.LFB292:
 314              		.loc 1 245 0
 315 01a8 00B5     		push	{lr}
 316              	.LCFI2:
 317              	.LVL22:
 318              		.loc 1 246 0
 319 01aa C300     		lsl	r3, r0, #3
 320 01ac 1B1A     		sub	r3, r3, r0
 321 01ae DB00     		lsl	r3, r3, #3
 322 01b0 0248     		ldr	r0, .L28
 323              	.LVL23:
 324 01b2 C018     		add	r0, r0, r3
 325 01b4 FFF7FEFF 		bl	fsm_close
 326              	.LVL24:
 327              		.loc 1 247 0
 328              		@ sp needed for prologue
 329 01b8 01BC     		pop	{r0}
 330 01ba 0047     		bx	r0
 331              	.L29:
 332              		.align	2
 333              	.L28:
 334 01bc 00000000 		.word	ipcp_fsm
 335              	.LFE292:
 337              		.align	2
 338              		.code	16
 339              		.thumb_func
 341              	ipcp_open:
 342              	.LFB291:
 343              		.loc 1 235 0
 344 01c0 00B5     		push	{lr}
 345              	.LCFI3:
 346              	.LVL25:
 347              		.loc 1 236 0
 348 01c2 C300     		lsl	r3, r0, #3
 349 01c4 1B1A     		sub	r3, r3, r0
 350 01c6 DB00     		lsl	r3, r3, #3
 351 01c8 0248     		ldr	r0, .L32
 352              	.LVL26:
 353 01ca C018     		add	r0, r0, r3
 354 01cc FFF7FEFF 		bl	fsm_open
 355              		.loc 1 237 0
 356              		@ sp needed for prologue
 357 01d0 01BC     		pop	{r0}
 358 01d2 0047     		bx	r0
 359              	.L33:
 360              		.align	2
 361              	.L32:
 362 01d4 00000000 		.word	ipcp_fsm
 363              	.LFE291:
 365              		.align	2
 366              		.code	16
 367              		.thumb_func
 369              	ipcp_lowerdown:
 370              	.LFB294:
 371              		.loc 1 265 0
 372 01d8 00B5     		push	{lr}
 373              	.LCFI4:
 374              	.LVL27:
 375              		.loc 1 266 0
 376 01da C300     		lsl	r3, r0, #3
 377 01dc 1B1A     		sub	r3, r3, r0
 378 01de DB00     		lsl	r3, r3, #3
 379 01e0 0248     		ldr	r0, .L36
 380              	.LVL28:
 381 01e2 C018     		add	r0, r0, r3
 382 01e4 FFF7FEFF 		bl	fsm_lowerdown
 383              		.loc 1 267 0
 384              		@ sp needed for prologue
 385 01e8 01BC     		pop	{r0}
 386 01ea 0047     		bx	r0
 387              	.L37:
 388              		.align	2
 389              	.L36:
 390 01ec 00000000 		.word	ipcp_fsm
 391              	.LFE294:
 393              		.align	2
 394              		.code	16
 395              		.thumb_func
 397              	ipcp_protrej:
 398              	.LFB296:
 399              		.loc 1 287 0
 400 01f0 00B5     		push	{lr}
 401              	.LCFI5:
 402              	.LVL29:
 403              		.loc 1 288 0
 404 01f2 C300     		lsl	r3, r0, #3
 405 01f4 1B1A     		sub	r3, r3, r0
 406 01f6 DB00     		lsl	r3, r3, #3
 407 01f8 0248     		ldr	r0, .L40
 408              	.LVL30:
 409 01fa C018     		add	r0, r0, r3
 410 01fc FFF7FEFF 		bl	fsm_lowerdown
 411              		.loc 1 289 0
 412              		@ sp needed for prologue
 413 0200 01BC     		pop	{r0}
 414 0202 0047     		bx	r0
 415              	.L41:
 416              		.align	2
 417              	.L40:
 418 0204 00000000 		.word	ipcp_fsm
 419              	.LFE296:
 421              		.align	2
 422              		.code	16
 423              		.thumb_func
 425              	ipcp_lowerup:
 426              	.LFB293:
 427              		.loc 1 255 0
 428 0208 00B5     		push	{lr}
 429              	.LCFI6:
 430              	.LVL31:
 431              		.loc 1 256 0
 432 020a C300     		lsl	r3, r0, #3
 433 020c 1B1A     		sub	r3, r3, r0
 434 020e DB00     		lsl	r3, r3, #3
 435 0210 0248     		ldr	r0, .L44
 436              	.LVL32:
 437 0212 C018     		add	r0, r0, r3
 438 0214 FFF7FEFF 		bl	fsm_lowerup
 439              		.loc 1 257 0
 440              		@ sp needed for prologue
 441 0218 01BC     		pop	{r0}
 442 021a 0047     		bx	r0
 443              	.L45:
 444              		.align	2
 445              	.L44:
 446 021c 00000000 		.word	ipcp_fsm
 447              	.LFE293:
 449              		.align	2
 450              		.code	16
 451              		.thumb_func
 453              	ipcp_input:
 454              	.LFB295:
 455              		.loc 1 275 0
 456 0220 00B5     		push	{lr}
 457              	.LCFI7:
 458              	.LVL33:
 459              		.loc 1 276 0
 460 0222 C300     		lsl	r3, r0, #3
 461 0224 1B1A     		sub	r3, r3, r0
 462 0226 DB00     		lsl	r3, r3, #3
 463 0228 0248     		ldr	r0, .L48
 464              	.LVL34:
 465 022a C018     		add	r0, r0, r3
 466 022c FFF7FEFF 		bl	fsm_input
 467              	.LVL35:
 468              		.loc 1 277 0
 469              		@ sp needed for prologue
 470 0230 01BC     		pop	{r0}
 471 0232 0047     		bx	r0
 472              	.L49:
 473              		.align	2
 474              	.L48:
 475 0234 00000000 		.word	ipcp_fsm
 476              	.LFE295:
 478              		.align	2
 479              		.code	16
 480              		.thumb_func
 482              	ipcp_init:
 483              	.LFB290:
 484              		.loc 1 193 0
 485 0238 70B5     		push	{r4, r5, r6, lr}
 486              	.LCFI8:
 487              	.LVL36:
 488 023a 021C     		mov	r2, r0
 489              		.loc 1 194 0
 490 023c C300     		lsl	r3, r0, #3
 491 023e 1B1A     		sub	r3, r3, r0
 492 0240 DB00     		lsl	r3, r3, #3
 493 0242 2148     		ldr	r0, .L52
 494              	.LVL37:
 495 0244 C018     		add	r0, r0, r3
 496              	.LVL38:
 497              		.loc 1 195 0
 498 0246 5301     		lsl	r3, r2, #5
 499 0248 204C     		ldr	r4, .L52+4
 500 024a E418     		add	r4, r4, r3
 501              	.LVL39:
 502              		.loc 1 196 0
 503 024c 204D     		ldr	r5, .L52+8
 504 024e ED18     		add	r5, r5, r3
 505              	.LVL40:
 506              		.loc 1 198 0
 507 0250 0260     		str	r2, [r0]
 508              		.loc 1 199 0
 509 0252 204B     		ldr	r3, .L52+12
 510 0254 8380     		strh	r3, [r0, #4]
 511              		.loc 1 200 0
 512 0256 204B     		ldr	r3, .L52+16
 513 0258 C362     		str	r3, [r0, #44]
 514              		.loc 1 201 0
 515 025a FFF7FEFF 		bl	fsm_init
 516              	.LVL41:
 517              		.loc 1 203 0
 518 025e 0022     		mov	r2, #0
 519 0260 231C     		mov	r3, r4
 520 0262 04C3     		stmia	r3!, {r2}
 521 0264 04C3     		stmia	r3!, {r2}
 522 0266 04C3     		stmia	r3!, {r2}
 523 0268 04C3     		stmia	r3!, {r2}
 524 026a 04C3     		stmia	r3!, {r2}
 525 026c 04C3     		stmia	r3!, {r2}
 526 026e 04C3     		stmia	r3!, {r2}
 527 0270 1A60     		str	r2, [r3]
 528              		.loc 1 204 0
 529 0272 2B1C     		mov	r3, r5
 530 0274 04C3     		stmia	r3!, {r2}
 531 0276 04C3     		stmia	r3!, {r2}
 532 0278 04C3     		stmia	r3!, {r2}
 533 027a 04C3     		stmia	r3!, {r2}
 534 027c 04C3     		stmia	r3!, {r2}
 535 027e 04C3     		stmia	r3!, {r2}
 536 0280 04C3     		stmia	r3!, {r2}
 537 0282 1A60     		str	r2, [r3]
 538              		.loc 1 206 0
 539 0284 2378     		ldrb	r3, [r4]
 540 0286 0126     		mov	r6, #1
 541 0288 3343     		orr	r3, r3, r6
 542 028a 2370     		strb	r3, [r4]
 543              		.loc 1 207 0
 544 028c A260     		str	r2, [r4, #8]
 545              		.loc 1 209 0
 546 028e 2378     		ldrb	r3, [r4]
 547 0290 2020     		mov	r0, #32
 548 0292 0343     		orr	r3, r3, r0
 549 0294 2370     		strb	r3, [r4]
 550              		.loc 1 213 0
 551 0296 2D23     		mov	r3, #45
 552 0298 6380     		strh	r3, [r4, #2]
 553              		.loc 1 214 0
 554 029a 0F21     		mov	r1, #15
 555 029c 2171     		strb	r1, [r4, #4]
 556              		.loc 1 215 0
 557 029e 6271     		strb	r2, [r4, #5]
 558              		.loc 1 216 0
 559 02a0 2378     		ldrb	r3, [r4]
 560 02a2 0822     		mov	r2, #8
 561 02a4 1343     		orr	r3, r3, r2
 562 02a6 2370     		strb	r3, [r4]
 563              		.loc 1 218 0
 564 02a8 2B78     		ldrb	r3, [r5]
 565 02aa 3343     		orr	r3, r3, r6
 566 02ac 2B70     		strb	r3, [r5]
 567              		.loc 1 220 0
 568 02ae 2B78     		ldrb	r3, [r5]
 569 02b0 0343     		orr	r3, r3, r0
 570 02b2 2B70     		strb	r3, [r5]
 571              		.loc 1 224 0
 572 02b4 2971     		strb	r1, [r5, #4]
 573              		.loc 1 225 0
 574 02b6 0123     		mov	r3, #1
 575 02b8 6B71     		strb	r3, [r5, #5]
 576              		.loc 1 226 0
 577 02ba 2B78     		ldrb	r3, [r5]
 578 02bc 1343     		orr	r3, r3, r2
 579 02be 2B70     		strb	r3, [r5]
 580              		.loc 1 227 0
 581              		@ sp needed for prologue
 582              	.LVL42:
 583              	.LVL43:
 584 02c0 70BC     		pop	{r4, r5, r6}
 585 02c2 01BC     		pop	{r0}
 586 02c4 0047     		bx	r0
 587              	.L53:
 588 02c6 C046     		.align	2
 589              	.L52:
 590 02c8 00000000 		.word	ipcp_fsm
 591 02cc 00000000 		.word	ipcp_wantoptions
 592 02d0 00000000 		.word	ipcp_allowoptions
 593 02d4 2180FFFF 		.word	-32735
 594 02d8 28000000 		.word	ipcp_callbacks
 595              	.LFE290:
 597              		.align	2
 598              		.code	16
 599              		.thumb_func
 601              	ipcp_finished:
 602              	.LFB307:
 358:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 359:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 360:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
 361:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_addci - Add our desired CIs to a packet.
 362:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
 363:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void
 364:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_addci(fsm *f, u_char *ucp, int *lenp)
 365:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
 366:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *go = &ipcp_gotoptions[f->unit];
 367:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   int len = *lenp;
 368:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 369:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define ADDCIVJ(opt, neg, val, old, maxslotindex, cflag) \
 370:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (neg) { \
 371:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     int vjlen = old? CILEN_COMPRESS : CILEN_VJ; \
 372:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (len >= vjlen) { \
 373:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       PUTCHAR(opt, ucp); \
 374:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       PUTCHAR(vjlen, ucp); \
 375:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       PUTSHORT(val, ucp); \
 376:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       if (!old) { \
 377:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         PUTCHAR(maxslotindex, ucp); \
 378:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         PUTCHAR(cflag, ucp); \
 379:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       } \
 380:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       len -= vjlen; \
 381:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } else { \
 382:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       neg = 0; \
 383:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 384:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 385:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 386:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define ADDCIADDR(opt, neg, old, val1, val2) \
 387:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (neg) { \
 388:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     int addrlen = (old? CILEN_ADDRS: CILEN_ADDR); \
 389:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (len >= addrlen) { \
 390:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       u32_t l; \
 391:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       PUTCHAR(opt, ucp); \
 392:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       PUTCHAR(addrlen, ucp); \
 393:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       l = ntohl(val1); \
 394:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       PUTLONG(l, ucp); \
 395:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       if (old) { \
 396:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         l = ntohl(val2); \
 397:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         PUTLONG(l, ucp); \
 398:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       } \
 399:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       len -= addrlen; \
 400:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } else { \
 401:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       neg = 0; \
 402:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 403:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 404:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 405:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define ADDCIDNS(opt, neg, addr) \
 406:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (neg) { \
 407:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (len >= CILEN_ADDR) { \
 408:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       u32_t l; \
 409:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       PUTCHAR(opt, ucp); \
 410:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       PUTCHAR(CILEN_ADDR, ucp); \
 411:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       l = ntohl(addr); \
 412:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       PUTLONG(l, ucp); \
 413:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       len -= CILEN_ADDR; \
 414:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } else { \
 415:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       neg = 0; \
 416:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 417:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 418:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 419:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ADDCIADDR((go->old_addrs? CI_ADDRS: CI_ADDR), go->neg_addr,
 420:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       go->old_addrs, go->ouraddr, go->hisaddr);
 421:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 422:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ADDCIVJ(CI_COMPRESSTYPE, go->neg_vj, go->vj_protocol, go->old_vj,
 423:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       go->maxslotindex, go->cflag);
 424:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 425:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ADDCIDNS(CI_MS_DNS1, go->req_dns1, go->dnsaddr[0]);
 426:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 427:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ADDCIDNS(CI_MS_DNS2, go->req_dns2, go->dnsaddr[1]);
 428:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 429:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   *lenp -= len;
 430:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
 431:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 432:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 433:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
 434:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_ackci - Ack our CIs.
 435:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  *
 436:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * Returns:
 437:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  *  0 - Ack was bad.
 438:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  *  1 - Ack was good.
 439:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
 440:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static int
 441:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_ackci(fsm *f, u_char *p, int len)
 442:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
 443:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *go = &ipcp_gotoptions[f->unit];
 444:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u_short cilen, citype, cishort;
 445:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u32_t cilong;
 446:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u_char cimaxslotindex, cicflag;
 447:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 448:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
 449:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * CIs must be in exactly the same order that we sent...
 450:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * Check packet length and CI length at each step.
 451:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * If we find any deviations, then this packet is bad.
 452:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    */
 453:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 454:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define ACKCIVJ(opt, neg, val, old, maxslotindex, cflag) \
 455:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (neg) { \
 456:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     int vjlen = old? CILEN_COMPRESS : CILEN_VJ; \
 457:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if ((len -= vjlen) < 0) { \
 458:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       goto bad; \
 459:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 460:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETCHAR(citype, p); \
 461:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETCHAR(cilen, p); \
 462:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (cilen != vjlen || \
 463:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         citype != opt) { \
 464:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       goto bad; \
 465:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 466:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETSHORT(cishort, p); \
 467:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (cishort != val) { \
 468:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       goto bad; \
 469:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 470:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (!old) { \
 471:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       GETCHAR(cimaxslotindex, p); \
 472:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       if (cimaxslotindex != maxslotindex) { \
 473:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         goto bad; \
 474:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       } \
 475:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       GETCHAR(cicflag, p); \
 476:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       if (cicflag != cflag) { \
 477:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         goto bad; \
 478:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       } \
 479:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 480:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 481:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 482:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define ACKCIADDR(opt, neg, old, val1, val2) \
 483:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (neg) { \
 484:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     int addrlen = (old? CILEN_ADDRS: CILEN_ADDR); \
 485:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     u32_t l; \
 486:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if ((len -= addrlen) < 0) { \
 487:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       goto bad; \
 488:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 489:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETCHAR(citype, p); \
 490:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETCHAR(cilen, p); \
 491:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (cilen != addrlen || \
 492:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         citype != opt) { \
 493:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       goto bad; \
 494:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 495:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETLONG(l, p); \
 496:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     cilong = htonl(l); \
 497:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (val1 != cilong) { \
 498:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       goto bad; \
 499:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 500:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (old) { \
 501:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       GETLONG(l, p); \
 502:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       cilong = htonl(l); \
 503:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       if (val2 != cilong) { \
 504:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         goto bad; \
 505:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       } \
 506:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 507:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 508:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 509:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define ACKCIDNS(opt, neg, addr) \
 510:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (neg) { \
 511:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     u32_t l; \
 512:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if ((len -= CILEN_ADDR) < 0) { \
 513:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       goto bad; \
 514:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 515:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETCHAR(citype, p); \
 516:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETCHAR(cilen, p); \
 517:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (cilen != CILEN_ADDR || \
 518:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         citype != opt) { \
 519:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       goto bad; \
 520:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 521:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETLONG(l, p); \
 522:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     cilong = htonl(l); \
 523:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (addr != cilong) { \
 524:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       goto bad; \
 525:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 526:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 527:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 528:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ACKCIADDR((go->old_addrs? CI_ADDRS: CI_ADDR), go->neg_addr,
 529:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         go->old_addrs, go->ouraddr, go->hisaddr);
 530:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 531:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ACKCIVJ(CI_COMPRESSTYPE, go->neg_vj, go->vj_protocol, go->old_vj,
 532:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       go->maxslotindex, go->cflag);
 533:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 534:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ACKCIDNS(CI_MS_DNS1, go->req_dns1, go->dnsaddr[0]);
 535:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 536:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ACKCIDNS(CI_MS_DNS2, go->req_dns2, go->dnsaddr[1]);
 537:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 538:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
 539:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * If there are any remaining CIs, then this packet is bad.
 540:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    */
 541:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (len != 0) {
 542:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     goto bad;
 543:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 544:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   return (1);
 545:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 546:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** bad:
 547:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   IPCPDEBUG((LOG_INFO, "ipcp_ackci: received bad Ack!\n"));
 548:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   return (0);
 549:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
 550:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 551:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
 552:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_nakci - Peer has sent a NAK for some of our CIs.
 553:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * This should not modify any state if the Nak is bad
 554:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * or if IPCP is in the LS_OPENED state.
 555:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  *
 556:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * Returns:
 557:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  *  0 - Nak was bad.
 558:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  *  1 - Nak was good.
 559:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
 560:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static int
 561:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_nakci(fsm *f, u_char *p, int len)
 562:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
 563:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *go = &ipcp_gotoptions[f->unit];
 564:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u_char cimaxslotindex, cicflag;
 565:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u_char citype, cilen, *next;
 566:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u_short cishort;
 567:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u32_t ciaddr1, ciaddr2, l, cidnsaddr;
 568:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options no;    /* options we've seen Naks for */
 569:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options try;    /* options to request next time */
 570:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 571:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   BZERO(&no, sizeof(no));
 572:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   try = *go;
 573:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 574:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
 575:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * Any Nak'd CIs must be in exactly the same order that we sent.
 576:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * Check packet length and CI length at each step.
 577:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * If we find any deviations, then this packet is bad.
 578:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    */
 579:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define NAKCIADDR(opt, neg, old, code) \
 580:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (go->neg && \
 581:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       len >= (cilen = (old? CILEN_ADDRS: CILEN_ADDR)) && \
 582:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       p[1] == cilen && \
 583:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       p[0] == opt) { \
 584:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     len -= cilen; \
 585:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     INCPTR(2, p); \
 586:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETLONG(l, p); \
 587:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     ciaddr1 = htonl(l); \
 588:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (old) { \
 589:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       GETLONG(l, p); \
 590:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       ciaddr2 = htonl(l); \
 591:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       no.old_addrs = 1; \
 592:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } else { \
 593:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       ciaddr2 = 0; \
 594:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 595:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     no.neg = 1; \
 596:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     code \
 597:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 598:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 599:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define NAKCIVJ(opt, neg, code) \
 600:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (go->neg && \
 601:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       ((cilen = p[1]) == CILEN_COMPRESS || cilen == CILEN_VJ) && \
 602:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       len >= cilen && \
 603:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       p[0] == opt) { \
 604:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     len -= cilen; \
 605:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     INCPTR(2, p); \
 606:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETSHORT(cishort, p); \
 607:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     no.neg = 1; \
 608:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     code \
 609:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 610:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 611:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define NAKCIDNS(opt, neg, code) \
 612:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (go->neg && \
 613:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       ((cilen = p[1]) == CILEN_ADDR) && \
 614:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       len >= cilen && \
 615:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       p[0] == opt) { \
 616:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     len -= cilen; \
 617:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     INCPTR(2, p); \
 618:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETLONG(l, p); \
 619:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     cidnsaddr = htonl(l); \
 620:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     no.neg = 1; \
 621:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     code \
 622:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 623:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 624:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
 625:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * Accept the peer's idea of {our,his} address, if different
 626:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * from our idea, only if the accept_{local,remote} flag is set.
 627:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    */
 628:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   NAKCIADDR((go->old_addrs? CI_ADDRS: CI_ADDR), neg_addr, go->old_addrs,
 629:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (go->accept_local && ciaddr1) { /* Do we know our address? */
 630:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       try.ouraddr = ciaddr1;
 631:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       IPCPDEBUG((LOG_INFO, "local IP address %s\n",
 632:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****            inet_ntoa(ciaddr1)));
 633:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     }
 634:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (go->accept_remote && ciaddr2) { /* Does he know his? */
 635:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       try.hisaddr = ciaddr2;
 636:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       IPCPDEBUG((LOG_INFO, "remote IP address %s\n",
 637:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****            inet_ntoa(ciaddr2)));
 638:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     }
 639:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   );
 640:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 641:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
 642:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * Accept the peer's value of maxslotindex provided that it
 643:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * is less than what we asked for.  Turn off slot-ID compression
 644:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * if the peer wants.  Send old-style compress-type option if
 645:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * the peer wants.
 646:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    */
 647:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   NAKCIVJ(CI_COMPRESSTYPE, neg_vj,
 648:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (cilen == CILEN_VJ) {
 649:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       GETCHAR(cimaxslotindex, p);
 650:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       GETCHAR(cicflag, p);
 651:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       if (cishort == IPCP_VJ_COMP) {
 652:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         try.old_vj = 0;
 653:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (cimaxslotindex < go->maxslotindex) {
 654:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           try.maxslotindex = cimaxslotindex;
 655:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
 656:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (!cicflag) {
 657:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           try.cflag = 0;
 658:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
 659:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       } else {
 660:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         try.neg_vj = 0;
 661:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       }
 662:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } else {
 663:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       if (cishort == IPCP_VJ_COMP || cishort == IPCP_VJ_COMP_OLD) {
 664:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         try.old_vj = 1;
 665:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         try.vj_protocol = cishort;
 666:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       } else {
 667:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         try.neg_vj = 0;
 668:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       }
 669:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     }
 670:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   );
 671:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 672:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   NAKCIDNS(CI_MS_DNS1, req_dns1,
 673:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       try.dnsaddr[0] = cidnsaddr;
 674:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         IPCPDEBUG((LOG_INFO, "primary DNS address %s\n", inet_ntoa(cidnsaddr)));
 675:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       );
 676:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 677:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   NAKCIDNS(CI_MS_DNS2, req_dns2,
 678:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       try.dnsaddr[1] = cidnsaddr;
 679:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         IPCPDEBUG((LOG_INFO, "secondary DNS address %s\n", inet_ntoa(cidnsaddr)));
 680:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       );
 681:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 682:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
 683:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   * There may be remaining CIs, if the peer is requesting negotiation
 684:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   * on an option that we didn't include in our request packet.
 685:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   * If they want to negotiate about IP addresses, we comply.
 686:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   * If they want us to ask for compression, we refuse.
 687:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   */
 688:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   while (len > CILEN_VOID) {
 689:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETCHAR(citype, p);
 690:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETCHAR(cilen, p);
 691:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if( (len -= cilen) < 0 ) {
 692:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       goto bad;
 693:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     }
 694:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     next = p + cilen - 2;
 695:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 696:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     switch (citype) {
 697:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       case CI_COMPRESSTYPE:
 698:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (go->neg_vj || no.neg_vj ||
 699:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             (cilen != CILEN_VJ && cilen != CILEN_COMPRESS)) {
 700:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           goto bad;
 701:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
 702:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         no.neg_vj = 1;
 703:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         break;
 704:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       case CI_ADDRS:
 705:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if ((go->neg_addr && go->old_addrs) || no.old_addrs
 706:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             || cilen != CILEN_ADDRS) {
 707:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           goto bad;
 708:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
 709:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         try.neg_addr = 1;
 710:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         try.old_addrs = 1;
 711:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         GETLONG(l, p);
 712:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         ciaddr1 = htonl(l);
 713:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (ciaddr1 && go->accept_local) {
 714:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           try.ouraddr = ciaddr1;
 715:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
 716:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         GETLONG(l, p);
 717:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         ciaddr2 = htonl(l);
 718:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (ciaddr2 && go->accept_remote) {
 719:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           try.hisaddr = ciaddr2;
 720:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
 721:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         no.old_addrs = 1;
 722:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         break;
 723:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       case CI_ADDR:
 724:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (go->neg_addr || no.neg_addr || cilen != CILEN_ADDR) {
 725:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           goto bad;
 726:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
 727:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         try.old_addrs = 0;
 728:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         GETLONG(l, p);
 729:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         ciaddr1 = htonl(l);
 730:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (ciaddr1 && go->accept_local) {
 731:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           try.ouraddr = ciaddr1;
 732:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
 733:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (try.ouraddr != 0) {
 734:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           try.neg_addr = 1;
 735:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
 736:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         no.neg_addr = 1;
 737:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         break;
 738:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     }
 739:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     p = next;
 740:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 741:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 742:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /* If there is still anything left, this packet is bad. */
 743:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (len != 0) {
 744:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     goto bad;
 745:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 746:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 747:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
 748:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * OK, the Nak is good.  Now we can update state.
 749:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    */
 750:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (f->state != LS_OPENED) {
 751:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     *go = try;
 752:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 753:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 754:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   return 1;
 755:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 756:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** bad:
 757:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   IPCPDEBUG((LOG_INFO, "ipcp_nakci: received bad Nak!\n"));
 758:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   return 0;
 759:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
 760:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 761:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 762:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
 763:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_rejci - Reject some of our CIs.
 764:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
 765:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static int
 766:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_rejci(fsm *f, u_char *p, int len)
 767:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
 768:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *go = &ipcp_gotoptions[f->unit];
 769:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u_char cimaxslotindex, ciflag, cilen;
 770:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u_short cishort;
 771:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u32_t cilong;
 772:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options try;    /* options to request next time */
 773:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 774:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   try = *go;
 775:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
 776:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * Any Rejected CIs must be in exactly the same order that we sent.
 777:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * Check packet length and CI length at each step.
 778:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * If we find any deviations, then this packet is bad.
 779:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    */
 780:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define REJCIADDR(opt, neg, old, val1, val2) \
 781:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (go->neg && \
 782:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       len >= (cilen = old? CILEN_ADDRS: CILEN_ADDR) && \
 783:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       p[1] == cilen && \
 784:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       p[0] == opt) { \
 785:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     u32_t l; \
 786:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     len -= cilen; \
 787:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     INCPTR(2, p); \
 788:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETLONG(l, p); \
 789:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     cilong = htonl(l); \
 790:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     /* Check rejected value. */ \
 791:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (cilong != val1) { \
 792:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       goto bad; \
 793:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 794:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (old) { \
 795:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       GETLONG(l, p); \
 796:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       cilong = htonl(l); \
 797:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       /* Check rejected value. */ \
 798:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       if (cilong != val2) { \
 799:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         goto bad; \
 800:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       } \
 801:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 802:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     try.neg = 0; \
 803:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 804:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 805:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define REJCIVJ(opt, neg, val, old, maxslot, cflag) \
 806:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (go->neg && \
 807:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       p[1] == (old? CILEN_COMPRESS : CILEN_VJ) && \
 808:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       len >= p[1] && \
 809:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       p[0] == opt) { \
 810:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     len -= p[1]; \
 811:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     INCPTR(2, p); \
 812:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETSHORT(cishort, p); \
 813:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     /* Check rejected value. */  \
 814:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (cishort != val) { \
 815:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       goto bad; \
 816:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 817:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (!old) { \
 818:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       GETCHAR(cimaxslotindex, p); \
 819:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       if (cimaxslotindex != maxslot) { \
 820:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         goto bad; \
 821:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       } \
 822:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       GETCHAR(ciflag, p); \
 823:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       if (ciflag != cflag) { \
 824:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         goto bad; \
 825:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       } \
 826:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 827:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     try.neg = 0; \
 828:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 829:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 830:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #define REJCIDNS(opt, neg, dnsaddr) \
 831:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (go->neg && \
 832:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       ((cilen = p[1]) == CILEN_ADDR) && \
 833:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       len >= cilen && \
 834:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       p[0] == opt) { \
 835:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     u32_t l; \
 836:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     len -= cilen; \
 837:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     INCPTR(2, p); \
 838:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETLONG(l, p); \
 839:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     cilong = htonl(l); \
 840:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     /* Check rejected value. */ \
 841:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (cilong != dnsaddr) { \
 842:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       goto bad; \
 843:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     } \
 844:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     try.neg = 0; \
 845:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 846:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 847:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   REJCIADDR((go->old_addrs? CI_ADDRS: CI_ADDR), neg_addr,
 848:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         go->old_addrs, go->ouraddr, go->hisaddr);
 849:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 850:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   REJCIVJ(CI_COMPRESSTYPE, neg_vj, go->vj_protocol, go->old_vj,
 851:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       go->maxslotindex, go->cflag);
 852:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 853:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   REJCIDNS(CI_MS_DNS1, req_dns1, go->dnsaddr[0]);
 854:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 855:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   REJCIDNS(CI_MS_DNS2, req_dns2, go->dnsaddr[1]);
 856:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 857:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
 858:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * If there are any remaining CIs, then this packet is bad.
 859:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    */
 860:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (len != 0) {
 861:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     goto bad;
 862:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 863:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
 864:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * Now we can update state.
 865:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    */
 866:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (f->state != LS_OPENED) {
 867:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     *go = try;
 868:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
 869:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   return 1;
 870:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 871:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** bad:
 872:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   IPCPDEBUG((LOG_INFO, "ipcp_rejci: received bad Reject!\n"));
 873:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   return 0;
 874:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
 875:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 876:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 877:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
 878:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_reqci - Check the peer's requested CIs and send appropriate response.
 879:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  *
 880:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * Returns: CONFACK, CONFNAK or CONFREJ and input packet modified
 881:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * appropriately.  If reject_if_disagree is non-zero, doesn't return
 882:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * CONFNAK; returns CONFREJ if it can't return CONFACK.
 883:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
 884:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static int
 885:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_reqci(fsm *f, u_char *inp/* Requested CIs */,int *len/* Length of requested CIs */,int reject_
 886:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
 887:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *wo = &ipcp_wantoptions[f->unit];
 888:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *ho = &ipcp_hisoptions[f->unit];
 889:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *ao = &ipcp_allowoptions[f->unit];
 890:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #ifdef OLD_CI_ADDRS
 891:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *go = &ipcp_gotoptions[f->unit];
 892:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #endif
 893:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u_char *cip, *next;     /* Pointer to current and next CIs */
 894:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u_short cilen, citype;  /* Parsed len, type */
 895:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u_short cishort;        /* Parsed short value */
 896:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u32_t tl, ciaddr1;      /* Parsed address values */
 897:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #ifdef OLD_CI_ADDRS
 898:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u32_t ciaddr2;          /* Parsed address values */
 899:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #endif
 900:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   int rc = CONFACK;       /* Final packet return code */
 901:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   int orc;                /* Individual option return code */
 902:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u_char *p;              /* Pointer to next char to parse */
 903:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u_char *ucp = inp;      /* Pointer to current output char */
 904:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   int l = *len;           /* Length left */
 905:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u_char maxslotindex, cflag;
 906:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   int d;
 907:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 908:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   cis_received[f->unit] = 1;
 909:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 910:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
 911:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * Reset all his options.
 912:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    */
 913:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   BZERO(ho, sizeof(*ho));
 914:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 915:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
 916:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * Process all his options.
 917:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    */
 918:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   next = inp;
 919:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   while (l) {
 920:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     orc = CONFACK;       /* Assume success */
 921:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     cip = p = next;      /* Remember begining of CI */
 922:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (l < 2 ||         /* Not enough data for CI header or */
 923:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         p[1] < 2 ||      /*  CI length too small or */
 924:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         p[1] > l) {      /*  CI length too big? */
 925:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       IPCPDEBUG((LOG_INFO, "ipcp_reqci: bad CI length!\n"));
 926:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       orc = CONFREJ;     /* Reject bad CI */
 927:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       cilen = l;         /* Reject till end of packet */
 928:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       l = 0;             /* Don't loop again */
 929:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       goto endswitch;
 930:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     }
 931:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETCHAR(citype, p);  /* Parse CI type */
 932:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     GETCHAR(cilen, p);   /* Parse CI length */
 933:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     l -= cilen;          /* Adjust remaining length */
 934:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     next += cilen;       /* Step to next CI */
 935:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 936:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     switch (citype) {      /* Check CI type */
 937:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #ifdef OLD_CI_ADDRS /* Need to save space... */
 938:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       case CI_ADDRS:
 939:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         IPCPDEBUG((LOG_INFO, "ipcp_reqci: received ADDRS\n"));
 940:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (!ao->neg_addr ||
 941:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             cilen != CILEN_ADDRS) {  /* Check CI length */
 942:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           orc = CONFREJ;    /* Reject CI */
 943:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           break;
 944:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
 945:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 946:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         /*
 947:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****          * If he has no address, or if we both have his address but
 948:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****          * disagree about it, then NAK it with our idea.
 949:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****          * In particular, if we don't know his address, but he does,
 950:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****          * then accept it.
 951:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****          */
 952:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         GETLONG(tl, p);    /* Parse source address (his) */
 953:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         ciaddr1 = htonl(tl);
 954:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         IPCPDEBUG((LOG_INFO, "his addr %s\n", inet_ntoa(ciaddr1)));
 955:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (ciaddr1 != wo->hisaddr
 956:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             && (ciaddr1 == 0 || !wo->accept_remote)) {
 957:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           orc = CONFNAK;
 958:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           if (!reject_if_disagree) {
 959:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             DECPTR(sizeof(u32_t), p);
 960:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             tl = ntohl(wo->hisaddr);
 961:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             PUTLONG(tl, p);
 962:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           }
 963:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         } else if (ciaddr1 == 0 && wo->hisaddr == 0) {
 964:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           /*
 965:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****            * If neither we nor he knows his address, reject the option.
 966:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****            */
 967:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           orc = CONFREJ;
 968:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           wo->req_addr = 0;  /* don't NAK with 0.0.0.0 later */
 969:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           break;
 970:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
 971:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 972:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         /*
 973:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****          * If he doesn't know our address, or if we both have our address
 974:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****          * but disagree about it, then NAK it with our idea.
 975:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****          */
 976:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         GETLONG(tl, p);    /* Parse desination address (ours) */
 977:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         ciaddr2 = htonl(tl);
 978:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         IPCPDEBUG((LOG_INFO, "our addr %s\n", inet_ntoa(ciaddr2)));
 979:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (ciaddr2 != wo->ouraddr) {
 980:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           if (ciaddr2 == 0 || !wo->accept_local) {
 981:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             orc = CONFNAK;
 982:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             if (!reject_if_disagree) {
 983:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****               DECPTR(sizeof(u32_t), p);
 984:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****               tl = ntohl(wo->ouraddr);
 985:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****               PUTLONG(tl, p);
 986:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             }
 987:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           } else {
 988:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             go->ouraddr = ciaddr2;  /* accept peer's idea */
 989:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           }
 990:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
 991:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 992:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         ho->neg_addr = 1;
 993:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         ho->old_addrs = 1;
 994:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         ho->hisaddr = ciaddr1;
 995:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         ho->ouraddr = ciaddr2;
 996:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         break;
 997:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #endif
 998:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
 999:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       case CI_ADDR:
1000:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (!ao->neg_addr) {
1001:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           IPCPDEBUG((LOG_INFO, "ipcp_reqci: Reject ADDR not allowed\n"));
1002:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           orc = CONFREJ;        /* Reject CI */
1003:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           break;
1004:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         } else if (cilen != CILEN_ADDR) {  /* Check CI length */
1005:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           IPCPDEBUG((LOG_INFO, "ipcp_reqci: Reject ADDR bad len\n"));
1006:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           orc = CONFREJ;        /* Reject CI */
1007:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           break;
1008:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
1009:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1010:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         /*
1011:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****          * If he has no address, or if we both have his address but
1012:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****          * disagree about it, then NAK it with our idea.
1013:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****          * In particular, if we don't know his address, but he does,
1014:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****          * then accept it.
1015:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****          */
1016:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         GETLONG(tl, p);  /* Parse source address (his) */
1017:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         ciaddr1 = htonl(tl);
1018:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (ciaddr1 != wo->hisaddr
1019:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             && (ciaddr1 == 0 || !wo->accept_remote)) {
1020:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           orc = CONFNAK;
1021:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           if (!reject_if_disagree) {
1022:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             DECPTR(sizeof(u32_t), p);
1023:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             tl = ntohl(wo->hisaddr);
1024:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             PUTLONG(tl, p);
1025:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           }
1026:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           IPCPDEBUG((LOG_INFO, "ipcp_reqci: Nak ADDR %s\n", inet_ntoa(ciaddr1)));
1027:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         } else if (ciaddr1 == 0 && wo->hisaddr == 0) {
1028:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           /*
1029:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****            * Don't ACK an address of 0.0.0.0 - reject it instead.
1030:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****            */
1031:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           IPCPDEBUG((LOG_INFO, "ipcp_reqci: Reject ADDR %s\n", inet_ntoa(ciaddr1)));
1032:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           orc = CONFREJ;
1033:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           wo->req_addr = 0;  /* don't NAK with 0.0.0.0 later */
1034:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           break;
1035:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
1036:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1037:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         ho->neg_addr = 1;
1038:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         ho->hisaddr = ciaddr1;
1039:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         IPCPDEBUG((LOG_INFO, "ipcp_reqci: ADDR %s\n", inet_ntoa(ciaddr1)));
1040:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         break;
1041:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1042:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       case CI_MS_DNS1:
1043:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       case CI_MS_DNS2:
1044:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         /* Microsoft primary or secondary DNS request */
1045:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         d = citype == CI_MS_DNS2;
1046:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1047:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         /* If we do not have a DNS address then we cannot send it */
1048:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (ao->dnsaddr[d] == 0 ||
1049:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             cilen != CILEN_ADDR) {  /* Check CI length */
1050:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           IPCPDEBUG((LOG_INFO, "ipcp_reqci: Rejecting DNS%d Request\n", d+1));
1051:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           orc = CONFREJ;        /* Reject CI */
1052:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           break;
1053:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
1054:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         GETLONG(tl, p);
1055:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (htonl(tl) != ao->dnsaddr[d]) {
1056:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           IPCPDEBUG((LOG_INFO, "ipcp_reqci: Naking DNS%d Request %d\n",
1057:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****                 d+1, inet_ntoa(tl)));
1058:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           DECPTR(sizeof(u32_t), p);
1059:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           tl = ntohl(ao->dnsaddr[d]);
1060:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           PUTLONG(tl, p);
1061:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           orc = CONFNAK;
1062:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
1063:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         IPCPDEBUG((LOG_INFO, "ipcp_reqci: received DNS%d Request\n", d+1));
1064:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         break;
1065:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1066:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       case CI_MS_WINS1:
1067:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       case CI_MS_WINS2:
1068:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         /* Microsoft primary or secondary WINS request */
1069:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         d = citype == CI_MS_WINS2;
1070:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         IPCPDEBUG((LOG_INFO, "ipcp_reqci: received WINS%d Request\n", d+1));
1071:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1072:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         /* If we do not have a DNS address then we cannot send it */
1073:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (ao->winsaddr[d] == 0 ||
1074:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           cilen != CILEN_ADDR) {  /* Check CI length */
1075:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           orc = CONFREJ;      /* Reject CI */
1076:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           break;
1077:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
1078:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         GETLONG(tl, p);
1079:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (htonl(tl) != ao->winsaddr[d]) {
1080:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           DECPTR(sizeof(u32_t), p);
1081:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           tl = ntohl(ao->winsaddr[d]);
1082:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           PUTLONG(tl, p);
1083:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           orc = CONFNAK;
1084:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
1085:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         break;
1086:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1087:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       case CI_COMPRESSTYPE:
1088:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (!ao->neg_vj) {
1089:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           IPCPDEBUG((LOG_INFO, "ipcp_reqci: Rejecting COMPRESSTYPE not allowed\n"));
1090:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           orc = CONFREJ;
1091:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           break;
1092:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         } else if (cilen != CILEN_VJ && cilen != CILEN_COMPRESS) {
1093:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           IPCPDEBUG((LOG_INFO, "ipcp_reqci: Rejecting COMPRESSTYPE len=%d\n", cilen));
1094:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           orc = CONFREJ;
1095:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           break;
1096:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
1097:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         GETSHORT(cishort, p);
1098:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1099:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (!(cishort == IPCP_VJ_COMP ||
1100:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             (cishort == IPCP_VJ_COMP_OLD && cilen == CILEN_COMPRESS))) {
1101:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           IPCPDEBUG((LOG_INFO, "ipcp_reqci: Rejecting COMPRESSTYPE %d\n", cishort));
1102:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           orc = CONFREJ;
1103:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           break;
1104:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
1105:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1106:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         ho->neg_vj = 1;
1107:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         ho->vj_protocol = cishort;
1108:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (cilen == CILEN_VJ) {
1109:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           GETCHAR(maxslotindex, p);
1110:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           if (maxslotindex > ao->maxslotindex) {
1111:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             IPCPDEBUG((LOG_INFO, "ipcp_reqci: Naking VJ max slot %d\n", maxslotindex));
1112:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             orc = CONFNAK;
1113:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             if (!reject_if_disagree) {
1114:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****               DECPTR(1, p);
1115:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****               PUTCHAR(ao->maxslotindex, p);
1116:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             }
1117:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           }
1118:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           GETCHAR(cflag, p);
1119:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           if (cflag && !ao->cflag) {
1120:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             IPCPDEBUG((LOG_INFO, "ipcp_reqci: Naking VJ cflag %d\n", cflag));
1121:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             orc = CONFNAK;
1122:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             if (!reject_if_disagree) {
1123:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****               DECPTR(1, p);
1124:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****               PUTCHAR(wo->cflag, p);
1125:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****             }
1126:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           }
1127:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           ho->maxslotindex = maxslotindex;
1128:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           ho->cflag = cflag;
1129:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         } else {
1130:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           ho->old_vj = 1;
1131:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           ho->maxslotindex = MAX_SLOTS - 1;
1132:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           ho->cflag = 1;
1133:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
1134:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         IPCPDEBUG((LOG_INFO,
1135:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****               "ipcp_reqci: received COMPRESSTYPE p=%d old=%d maxslot=%d cflag=%d\n",
1136:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****               ho->vj_protocol, ho->old_vj, ho->maxslotindex, ho->cflag));
1137:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         break;
1138:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1139:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       default:
1140:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         IPCPDEBUG((LOG_INFO, "ipcp_reqci: Rejecting unknown CI type %d\n", citype));
1141:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         orc = CONFREJ;
1142:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         break;
1143:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     }
1144:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1145:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** endswitch:
1146:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (orc == CONFACK &&    /* Good CI */
1147:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         rc != CONFACK) {     /*  but prior CI wasnt? */
1148:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       continue;              /* Don't send this one */
1149:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     }
1150:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1151:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (orc == CONFNAK) {    /* Nak this CI? */
1152:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       if (reject_if_disagree) {  /* Getting fed up with sending NAKs? */
1153:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         IPCPDEBUG((LOG_INFO, "ipcp_reqci: Rejecting too many naks\n"));
1154:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         orc = CONFREJ;       /* Get tough if so */
1155:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       } else {
1156:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (rc == CONFREJ) { /* Rejecting prior CI? */
1157:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           continue;          /* Don't send this one */
1158:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
1159:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         if (rc == CONFACK) { /* Ack'd all prior CIs? */
1160:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           rc = CONFNAK;      /* Not anymore... */
1161:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****           ucp = inp;         /* Backup */
1162:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         }
1163:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       }
1164:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     }
1165:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1166:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (orc == CONFREJ &&    /* Reject this CI */
1167:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         rc != CONFREJ) {  /*  but no prior ones? */
1168:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       rc = CONFREJ;
1169:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       ucp = inp;        /* Backup */
1170:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     }
1171:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1172:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     /* Need to move CI? */
1173:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (ucp != cip) {
1174:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       BCOPY(cip, ucp, cilen);  /* Move it */
1175:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     }
1176:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1177:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     /* Update output pointer */
1178:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     INCPTR(cilen, ucp);
1179:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
1180:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1181:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
1182:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * If we aren't rejecting this packet, and we want to negotiate
1183:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * their address, and they didn't send their address, then we
1184:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * send a NAK with a CI_ADDR option appended.  We assume the
1185:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * input buffer is long enough that we can append the extra
1186:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * option safely.
1187:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    */
1188:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (rc != CONFREJ && !ho->neg_addr &&
1189:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       wo->req_addr && !reject_if_disagree) {
1190:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     IPCPDEBUG((LOG_INFO, "ipcp_reqci: Requesting peer address\n"));
1191:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (rc == CONFACK) {
1192:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       rc = CONFNAK;
1193:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       ucp = inp;        /* reset pointer */
1194:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       wo->req_addr = 0;    /* don't ask again */
1195:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     }
1196:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     PUTCHAR(CI_ADDR, ucp);
1197:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     PUTCHAR(CILEN_ADDR, ucp);
1198:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     tl = ntohl(wo->hisaddr);
1199:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     PUTLONG(tl, ucp);
1200:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
1201:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1202:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   *len = (int)(ucp - inp);    /* Compute output length */
1203:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   IPCPDEBUG((LOG_INFO, "ipcp_reqci: returning Configure-%s\n", CODENAME(rc)));
1204:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   return (rc);      /* Return final code */
1205:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
1206:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1207:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1208:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #if 0
1209:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
1210:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ip_check_options - check that any IP-related options are OK,
1211:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * and assign appropriate defaults.
1212:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
1213:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void
1214:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ip_check_options(u_long localAddr)
1215:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
1216:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *wo = &ipcp_wantoptions[0];
1217:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1218:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
1219:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * Load our default IP address but allow the remote host to give us
1220:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * a new address.
1221:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    */
1222:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (wo->ouraddr == 0 && !ppp_settings.disable_defaultip) {
1223:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     wo->accept_local = 1;  /* don't insist on this default value */
1224:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     wo->ouraddr = htonl(localAddr);
1225:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
1226:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
1227:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** #endif
1228:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1229:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1230:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
1231:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_up - IPCP has come UP.
1232:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  *
1233:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * Configure the IP network interface appropriately and bring it up.
1234:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
1235:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void
1236:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_up(fsm *f)
1237:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
1238:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u32_t mask;
1239:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *ho = &ipcp_hisoptions[f->unit];
1240:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *go = &ipcp_gotoptions[f->unit];
1241:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_options *wo = &ipcp_wantoptions[f->unit];
1242:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1243:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   np_up(f->unit, PPP_IP);
1244:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   IPCPDEBUG((LOG_INFO, "ipcp: up\n"));
1245:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1246:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
1247:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * We must have a non-zero IP address for both ends of the link.
1248:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    */
1249:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (!ho->neg_addr) {
1250:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     ho->hisaddr = wo->hisaddr;
1251:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
1252:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1253:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (ho->hisaddr == 0) {
1254:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     IPCPDEBUG((LOG_ERR, "Could not determine remote IP address\n"));
1255:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     ipcp_close(f->unit, "Could not determine remote IP address");
1256:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     return;
1257:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
1258:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (go->ouraddr == 0) {
1259:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     IPCPDEBUG((LOG_ERR, "Could not determine local IP address\n"));
1260:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     ipcp_close(f->unit, "Could not determine local IP address");
1261:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     return;
1262:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
1263:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1264:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (ppp_settings.usepeerdns && (go->dnsaddr[0] || go->dnsaddr[1])) {
1265:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     /*pppGotDNSAddrs(go->dnsaddr[0], go->dnsaddr[1]);*/
1266:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
1267:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1268:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
1269:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * Check that the peer is allowed to use the IP address it wants.
1270:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    */
1271:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (!auth_ip_addr(f->unit, ho->hisaddr)) {
1272:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     IPCPDEBUG((LOG_ERR, "Peer is not authorized to use remote address %s\n",
1273:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****         inet_ntoa(ho->hisaddr)));
1274:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     ipcp_close(f->unit, "Unauthorized remote IP address");
1275:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     return;
1276:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
1277:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1278:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /* set tcp compression */
1279:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   sifvjcomp(f->unit, ho->neg_vj, ho->cflag, ho->maxslotindex);
1280:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1281:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /*
1282:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    * Set IP addresses and (if specified) netmask.
1283:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****    */
1284:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   mask = GetMask(go->ouraddr);
1285:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1286:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (!sifaddr(f->unit, go->ouraddr, ho->hisaddr, mask, go->dnsaddr[0], go->dnsaddr[1])) {
1287:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     IPCPDEBUG((LOG_WARNING, "sifaddr failed\n"));
1288:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     ipcp_close(f->unit, "Interface configuration failed");
1289:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     return;
1290:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
1291:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1292:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /* bring the interface up for IP */
1293:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (!sifup(f->unit)) {
1294:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     IPCPDEBUG((LOG_WARNING, "sifup failed\n"));
1295:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     ipcp_close(f->unit, "Interface configuration failed");
1296:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     return;
1297:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
1298:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1299:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   sifnpmode(f->unit, PPP_IP, NPMODE_PASS);
1300:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1301:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   /* assign a default route through the interface if required */
1302:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (ipcp_wantoptions[f->unit].default_route) {
1303:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     if (sifdefaultroute(f->unit, go->ouraddr, ho->hisaddr)) {
1304:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****       default_route_set[f->unit] = 1;
1305:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     }
1306:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
1307:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1308:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   IPCPDEBUG((LOG_NOTICE, "local  IP address %s\n", inet_ntoa(go->ouraddr)));
1309:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   IPCPDEBUG((LOG_NOTICE, "remote IP address %s\n", inet_ntoa(ho->hisaddr)));
1310:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (go->dnsaddr[0]) {
1311:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     IPCPDEBUG((LOG_NOTICE, "primary   DNS address %s\n", inet_ntoa(go->dnsaddr[0])));
1312:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
1313:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (go->dnsaddr[1]) {
1314:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     IPCPDEBUG((LOG_NOTICE, "secondary DNS address %s\n", inet_ntoa(go->dnsaddr[1])));
1315:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
1316:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
1317:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1318:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1319:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
1320:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_down - IPCP has gone DOWN.
1321:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  *
1322:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * Take the IP network interface down, clear its addresses
1323:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * and delete routes through it.
1324:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
1325:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void
1326:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_down(fsm *f)
1327:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
1328:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   IPCPDEBUG((LOG_INFO, "ipcp: down\n"));
1329:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   np_down(f->unit, PPP_IP);
1330:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   sifvjcomp(f->unit, 0, 0, 0);
1331:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1332:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   sifdown(f->unit);
1333:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ipcp_clear_addrs(f->unit);
1334:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
1335:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1336:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1337:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
1338:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_clear_addrs() - clear the interface addresses, routes, etc.
1339:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
1340:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void
1341:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_clear_addrs(int unit)
1342:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
1343:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   u32_t ouraddr, hisaddr;
1344:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1345:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   ouraddr = ipcp_gotoptions[unit].ouraddr;
1346:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   hisaddr = ipcp_hisoptions[unit].hisaddr;
1347:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   if (default_route_set[unit]) {
1348:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     cifdefaultroute(unit, ouraddr, hisaddr);
1349:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****     default_route_set[unit] = 0;
1350:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   }
1351:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   cifaddr(unit, ouraddr, hisaddr);
1352:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
1353:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1354:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** 
1355:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** /*
1356:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  * ipcp_finished - possibly shut down the lower layers.
1357:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****  */
1358:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** static void
1359:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** ipcp_finished(fsm *f)
1360:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** {
 603              		.loc 1 1360 0
 604 02dc 00B5     		push	{lr}
 605              	.LCFI9:
 606              	.LVL44:
1361:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c ****   np_finished(f->unit, PPP_IP);
 607              		.loc 1 1361 0
 608 02de 0068     		ldr	r0, [r0]
 609              	.LVL45:
 610 02e0 2121     		mov	r1, #33
 611 02e2 FFF7FEFF 		bl	np_finished
1362:rtos/common/ethernet/lwIP_132/src/netif/ppp/ipcp.c **** }
 612              		.loc 1 1362 0
 613              		@ sp needed for prologue
 614 02e6 01BC     		pop	{r0}
 615 02e8 0047     		bx	r0
 616              	.LFE307:
 618              		.section	.rodata.str1.4,"aMS",%progbits,1
 619              		.align	2
 620              	.LC19:
 621 0000 69706370 		.ascii	"ipcp: down\012\000"
 621      3A20646F 
 621      776E0A00 
 622              		.text
 623 02ea C046     		.align	2
 624              		.code	16
 625              		.thumb_func
 627              	ipcp_down:
 628              	.LFB305:
 629              		.loc 1 1327 0
 630 02ec 70B5     		push	{r4, r5, r6, lr}
 631              	.LCFI10:
 632              	.LVL46:
 633 02ee 041C     		mov	r4, r0
 634              		.loc 1 1328 0
 635 02f0 1749     		ldr	r1, .L59
 636 02f2 0520     		mov	r0, #5
 637              	.LVL47:
 638 02f4 FFF7FEFF 		bl	ppp_trace
 639              		.loc 1 1329 0
 640 02f8 2068     		ldr	r0, [r4]
 641 02fa 2121     		mov	r1, #33
 642 02fc FFF7FEFF 		bl	np_down
 643              		.loc 1 1330 0
 644 0300 2068     		ldr	r0, [r4]
 645 0302 0021     		mov	r1, #0
 646 0304 0022     		mov	r2, #0
 647 0306 0023     		mov	r3, #0
 648 0308 FFF7FEFF 		bl	sifvjcomp
 649              		.loc 1 1332 0
 650 030c 2068     		ldr	r0, [r4]
 651 030e FFF7FEFF 		bl	sifdown
 652              		.loc 1 1333 0
 653 0312 2468     		ldr	r4, [r4]
 654              	.LVL48:
 655              	.LBB4:
 656              	.LBB5:
 657              		.loc 1 1345 0
 658 0314 0F4A     		ldr	r2, .L59+4
 659 0316 A100     		lsl	r1, r4, #2
 660 0318 4B1C     		add	r3, r1, #1
 661 031a DB00     		lsl	r3, r3, #3
 662 031c 9E58     		ldr	r6, [r3, r2]
 663              	.LVL49:
 664              		.loc 1 1346 0
 665 031e 0E4B     		ldr	r3, .L59+8
 666 0320 6201     		lsl	r2, r4, #5
 667 0322 9B18     		add	r3, r3, r2
 668 0324 DD68     		ldr	r5, [r3, #12]
 669              	.LVL50:
 670              		.loc 1 1347 0
 671 0326 0D4B     		ldr	r3, .L59+12
 672 0328 CB58     		ldr	r3, [r1, r3]
 673 032a 002B     		cmp	r3, #0
 674 032c 08D0     		beq	.L57
 675              		.loc 1 1348 0
 676 032e 201C     		mov	r0, r4
 677 0330 311C     		mov	r1, r6
 678 0332 2A1C     		mov	r2, r5
 679 0334 FFF7FEFF 		bl	cifdefaultroute
 680              		.loc 1 1349 0
 681 0338 0849     		ldr	r1, .L59+12
 682 033a A200     		lsl	r2, r4, #2
 683 033c 0023     		mov	r3, #0
 684 033e 5350     		str	r3, [r2, r1]
 685              	.L57:
 686              		.loc 1 1351 0
 687 0340 201C     		mov	r0, r4
 688 0342 311C     		mov	r1, r6
 689 0344 2A1C     		mov	r2, r5
 690 0346 FFF7FEFF 		bl	cifaddr
 691              	.LBE5:
 692              	.LBE4:
 693              		.loc 1 1334 0
 694              		@ sp needed for prologue
 695              	.LVL51:
 696              	.LVL52:
 697 034a 70BC     		pop	{r4, r5, r6}
 698 034c 01BC     		pop	{r0}
 699 034e 0047     		bx	r0
 700              	.L60:
 701              		.align	2
 702              	.L59:
 703 0350 00000000 		.word	.LC19
 704 0354 00000000 		.word	ipcp_gotoptions
 705 0358 00000000 		.word	ipcp_hisoptions
 706 035c 04000000 		.word	default_route_set
 707              	.LFE305:
 709              		.section	.rodata.str1.4
 710              		.align	2
 711              	.LC25:
 712 000c 69706370 		.ascii	"ipcp: up\012\000"
 712      3A207570 
 712      0A00
 713 0016 0000     		.align	2
 714              	.LC28:
 715 0018 436F756C 		.ascii	"Could not determine remote IP address\012\000"
 715      64206E6F 
 715      74206465 
 715      7465726D 
 715      696E6520 
 716 003f 00       		.align	2
 717              	.LC30:
 718 0040 436F756C 		.ascii	"Could not determine remote IP address\000"
 718      64206E6F 
 718      74206465 
 718      7465726D 
 718      696E6520 
 719 0066 0000     		.align	2
 720              	.LC33:
 721 0068 436F756C 		.ascii	"Could not determine local IP address\012\000"
 721      64206E6F 
 721      74206465 
 721      7465726D 
 721      696E6520 
 722 008e 0000     		.align	2
 723              	.LC35:
 724 0090 436F756C 		.ascii	"Could not determine local IP address\000"
 724      64206E6F 
 724      74206465 
 724      7465726D 
 724      696E6520 
 725 00b5 000000   		.align	2
 726              	.LC37:
 727 00b8 4E554C4C 		.ascii	"NULL\000"
 727      00
 728 00bd 000000   		.align	2
 729              	.LC39:
 730 00c0 50656572 		.ascii	"Peer is not authorized to use remote address %s\012"
 730      20697320 
 730      6E6F7420 
 730      61757468 
 730      6F72697A 
 731 00f0 00       		.ascii	"\000"
 732 00f1 000000   		.align	2
 733              	.LC41:
 734 00f4 556E6175 		.ascii	"Unauthorized remote IP address\000"
 734      74686F72 
 734      697A6564 
 734      2072656D 
 734      6F746520 
 735 0113 00       		.align	2
 736              	.LC43:
 737 0114 73696661 		.ascii	"sifaddr failed\012\000"
 737      64647220 
 737      6661696C 
 737      65640A00 
 738              		.align	2
 739              	.LC45:
 740 0124 496E7465 		.ascii	"Interface configuration failed\000"
 740      72666163 
 740      6520636F 
 740      6E666967 
 740      75726174 
 741 0143 00       		.align	2
 742              	.LC47:
 743 0144 73696675 		.ascii	"sifup failed\012\000"
 743      70206661 
 743      696C6564 
 743      0A00
 744 0152 0000     		.align	2
 745              	.LC50:
 746 0154 6C6F6361 		.ascii	"local  IP address %s\012\000"
 746      6C202049 
 746      50206164 
 746      64726573 
 746      73202573 
 747 016a 0000     		.align	2
 748              	.LC52:
 749 016c 72656D6F 		.ascii	"remote IP address %s\012\000"
 749      74652049 
 749      50206164 
 749      64726573 
 749      73202573 
 750 0182 0000     		.align	2
 751              	.LC54:
 752 0184 7072696D 		.ascii	"primary   DNS address %s\012\000"
 752      61727920 
 752      2020444E 
 752      53206164 
 752      64726573 
 753 019e 0000     		.align	2
 754              	.LC56:
 755 01a0 7365636F 		.ascii	"secondary DNS address %s\012\000"
 755      6E646172 
 755      7920444E 
 755      53206164 
 755      64726573 
 756              		.text
 757              		.align	2
 758              		.code	16
 759              		.thumb_func
 761              	ipcp_up:
 762              	.LFB304:
 763              		.loc 1 1237 0
 764 0360 F0B5     		push	{r4, r5, r6, r7, lr}
 765              	.LCFI11:
 766              	.LVL53:
 767 0362 82B0     		sub	sp, sp, #8
 768              	.LCFI12:
 769 0364 061C     		mov	r6, r0
 770              		.loc 1 1239 0
 771 0366 0068     		ldr	r0, [r0]
 772              	.LVL54:
 773 0368 4401     		lsl	r4, r0, #5
 774 036a 654B     		ldr	r3, .L82
 775 036c 1D19     		add	r5, r3, r4
 776              	.LVL55:
 777              		.loc 1 1243 0
 778 036e 2121     		mov	r1, #33
 779 0370 FFF7FEFF 		bl	np_up
 780              		.loc 1 1244 0
 781 0374 6349     		ldr	r1, .L82+4
 782 0376 0520     		mov	r0, #5
 783 0378 FFF7FEFF 		bl	ppp_trace
 784              		.loc 1 1249 0
 785 037c 2B78     		ldrb	r3, [r5]
 786 037e DB07     		lsl	r3, r3, #31
 787 0380 DB0F     		lsr	r3, r3, #31
 788 0382 1B06     		lsl	r3, r3, #24
 789 0384 002B     		cmp	r3, #0
 790 0386 03D1     		bne	.L62
 791              		.loc 1 1250 0
 792 0388 5F4B     		ldr	r3, .L82+8
 793 038a 1B19     		add	r3, r3, r4
 794 038c DB68     		ldr	r3, [r3, #12]
 795 038e EB60     		str	r3, [r5, #12]
 796              	.L62:
 797              		.loc 1 1253 0
 798 0390 E968     		ldr	r1, [r5, #12]
 799 0392 0029     		cmp	r1, #0
 800 0394 08D1     		bne	.L63
 801              		.loc 1 1254 0
 802 0396 5D49     		ldr	r1, .L82+12
 803 0398 0120     		mov	r0, #1
 804 039a FFF7FEFF 		bl	ppp_trace
 805              		.loc 1 1255 0
 806 039e 3068     		ldr	r0, [r6]
 807 03a0 5B49     		ldr	r1, .L82+16
 808 03a2 FFF701FF 		bl	ipcp_close
 809 03a6 A6E0     		b	.L81
 810              	.L63:
 811              		.loc 1 1240 0
 812 03a8 5A4B     		ldr	r3, .L82+20
 813 03aa 1F19     		add	r7, r3, r4
 814              	.LVL56:
 815              		.loc 1 1258 0
 816 03ac BB68     		ldr	r3, [r7, #8]
 817 03ae 002B     		cmp	r3, #0
 818 03b0 08D1     		bne	.L65
 819              		.loc 1 1259 0
 820 03b2 5949     		ldr	r1, .L82+24
 821 03b4 0120     		mov	r0, #1
 822 03b6 FFF7FEFF 		bl	ppp_trace
 823              		.loc 1 1260 0
 824 03ba 3068     		ldr	r0, [r6]
 825 03bc 5749     		ldr	r1, .L82+28
 826 03be FFF7F3FE 		bl	ipcp_close
 827 03c2 98E0     		b	.L81
 828              	.L65:
 829              		.loc 1 1271 0
 830 03c4 3068     		ldr	r0, [r6]
 831 03c6 FFF7FEFF 		bl	auth_ip_addr
 832 03ca 0028     		cmp	r0, #0
 833 03cc 12D1     		bne	.L66
 834              		.loc 1 1272 0
 835 03ce 281C     		mov	r0, r5
 836 03d0 0C30     		add	r0, r0, #12
 837 03d2 0028     		cmp	r0, #0
 838 03d4 01D1     		bne	.L67
 839 03d6 524A     		ldr	r2, .L82+32
 840 03d8 03E0     		b	.L68
 841              	.L67:
 842 03da 0068     		ldr	r0, [r0]
 843 03dc FFF7FEFF 		bl	inet_ntoa
 844 03e0 021C     		mov	r2, r0
 845              	.L68:
 846 03e2 5049     		ldr	r1, .L82+36
 847 03e4 0120     		mov	r0, #1
 848 03e6 FFF7FEFF 		bl	ppp_trace
 849              		.loc 1 1274 0
 850 03ea 3068     		ldr	r0, [r6]
 851 03ec 4E49     		ldr	r1, .L82+40
 852 03ee FFF7DBFE 		bl	ipcp_close
 853 03f2 80E0     		b	.L81
 854              	.L66:
 855              		.loc 1 1279 0
 856 03f4 3068     		ldr	r0, [r6]
 857 03f6 2978     		ldrb	r1, [r5]
 858 03f8 8906     		lsl	r1, r1, #26
 859 03fa C90F     		lsr	r1, r1, #31
 860 03fc 6A79     		ldrb	r2, [r5, #5]
 861 03fe 2B79     		ldrb	r3, [r5, #4]
 862 0400 FFF7FEFF 		bl	sifvjcomp
 863              		.loc 1 1284 0
 864 0404 B868     		ldr	r0, [r7, #8]
 865 0406 FFF7FEFF 		bl	GetMask
 866 040a 031C     		mov	r3, r0
 867              	.LVL57:
 868              		.loc 1 1286 0
 869 040c 3068     		ldr	r0, [r6]
 870 040e B968     		ldr	r1, [r7, #8]
 871 0410 EA68     		ldr	r2, [r5, #12]
 872 0412 3C69     		ldr	r4, [r7, #16]
 873 0414 0094     		str	r4, [sp]
 874 0416 7C69     		ldr	r4, [r7, #20]
 875 0418 0194     		str	r4, [sp, #4]
 876 041a FFF7FEFF 		bl	sifaddr
 877              	.LVL58:
 878 041e 0028     		cmp	r0, #0
 879 0420 08D1     		bne	.L69
 880              		.loc 1 1287 0
 881 0422 4249     		ldr	r1, .L82+44
 882 0424 0320     		mov	r0, #3
 883 0426 FFF7FEFF 		bl	ppp_trace
 884              		.loc 1 1288 0
 885 042a 3068     		ldr	r0, [r6]
 886 042c 4049     		ldr	r1, .L82+48
 887 042e FFF7BBFE 		bl	ipcp_close
 888 0432 60E0     		b	.L81
 889              	.L69:
 890              		.loc 1 1293 0
 891 0434 3068     		ldr	r0, [r6]
 892 0436 FFF7FEFF 		bl	sifup
 893 043a 0028     		cmp	r0, #0
 894 043c 08D1     		bne	.L70
 895              		.loc 1 1294 0
 896 043e 3D49     		ldr	r1, .L82+52
 897 0440 0320     		mov	r0, #3
 898 0442 FFF7FEFF 		bl	ppp_trace
 899              		.loc 1 1295 0
 900 0446 3068     		ldr	r0, [r6]
 901 0448 3949     		ldr	r1, .L82+48
 902 044a FFF7ADFE 		bl	ipcp_close
 903 044e 52E0     		b	.L81
 904              	.L70:
 905              		.loc 1 1299 0
 906 0450 3068     		ldr	r0, [r6]
 907 0452 2121     		mov	r1, #33
 908 0454 0022     		mov	r2, #0
 909 0456 FFF7FEFF 		bl	sifnpmode
 910              		.loc 1 1302 0
 911 045a 3068     		ldr	r0, [r6]
 912 045c 2A4A     		ldr	r2, .L82+8
 913 045e 4301     		lsl	r3, r0, #5
 914 0460 D35C     		ldrb	r3, [r2, r3]
 915 0462 1A07     		lsl	r2, r3, #28
 916 0464 0AD5     		bpl	.L71
 917              		.loc 1 1303 0
 918 0466 B968     		ldr	r1, [r7, #8]
 919 0468 EA68     		ldr	r2, [r5, #12]
 920 046a FFF7FEFF 		bl	sifdefaultroute
 921 046e 0028     		cmp	r0, #0
 922 0470 04D0     		beq	.L71
 923              		.loc 1 1304 0
 924 0472 314B     		ldr	r3, .L82+56
 925 0474 3268     		ldr	r2, [r6]
 926 0476 9200     		lsl	r2, r2, #2
 927 0478 0121     		mov	r1, #1
 928 047a D150     		str	r1, [r2, r3]
 929              	.L71:
 930              		.loc 1 1308 0
 931 047c 381C     		mov	r0, r7
 932 047e 0830     		add	r0, r0, #8
 933 0480 0028     		cmp	r0, #0
 934 0482 01D1     		bne	.L72
 935 0484 264A     		ldr	r2, .L82+32
 936 0486 03E0     		b	.L73
 937              	.L72:
 938 0488 0068     		ldr	r0, [r0]
 939 048a FFF7FEFF 		bl	inet_ntoa
 940 048e 021C     		mov	r2, r0
 941              	.L73:
 942 0490 2A49     		ldr	r1, .L82+60
 943 0492 0220     		mov	r0, #2
 944 0494 FFF7FEFF 		bl	ppp_trace
 945              		.loc 1 1309 0
 946 0498 281C     		mov	r0, r5
 947 049a 0C30     		add	r0, r0, #12
 948 049c 0028     		cmp	r0, #0
 949 049e 01D1     		bne	.L74
 950 04a0 1F4A     		ldr	r2, .L82+32
 951 04a2 03E0     		b	.L75
 952              	.L74:
 953 04a4 0068     		ldr	r0, [r0]
 954 04a6 FFF7FEFF 		bl	inet_ntoa
 955 04aa 021C     		mov	r2, r0
 956              	.L75:
 957 04ac 2449     		ldr	r1, .L82+64
 958 04ae 0220     		mov	r0, #2
 959 04b0 FFF7FEFF 		bl	ppp_trace
 960              		.loc 1 1310 0
 961 04b4 3B69     		ldr	r3, [r7, #16]
 962 04b6 002B     		cmp	r3, #0
 963 04b8 0CD0     		beq	.L76
 964              		.loc 1 1311 0
 965 04ba 3B1C     		mov	r3, r7
 966 04bc 1033     		add	r3, r3, #16
 967 04be 01D1     		bne	.L77
 968 04c0 174A     		ldr	r2, .L82+32
 969 04c2 03E0     		b	.L78
 970              	.L77:
 971 04c4 3869     		ldr	r0, [r7, #16]
 972 04c6 FFF7FEFF 		bl	inet_ntoa
 973 04ca 021C     		mov	r2, r0
 974              	.L78:
 975 04cc 1D49     		ldr	r1, .L82+68
 976 04ce 0220     		mov	r0, #2
 977 04d0 FFF7FEFF 		bl	ppp_trace
 978              	.L76:
 979              		.loc 1 1313 0
 980 04d4 7B69     		ldr	r3, [r7, #20]
 981 04d6 002B     		cmp	r3, #0
 982 04d8 0DD0     		beq	.L81
 983              		.loc 1 1314 0
 984 04da 381C     		mov	r0, r7
 985 04dc 1430     		add	r0, r0, #20
 986 04de 0028     		cmp	r0, #0
 987 04e0 01D1     		bne	.L79
 988 04e2 0F4A     		ldr	r2, .L82+32
 989 04e4 03E0     		b	.L80
 990              	.L79:
 991 04e6 0068     		ldr	r0, [r0]
 992 04e8 FFF7FEFF 		bl	inet_ntoa
 993 04ec 021C     		mov	r2, r0
 994              	.L80:
 995 04ee 1649     		ldr	r1, .L82+72
 996 04f0 0220     		mov	r0, #2
 997 04f2 FFF7FEFF 		bl	ppp_trace
 998              	.L81:
 999              		.loc 1 1316 0
 1000 04f6 02B0     		add	sp, sp, #8
 1001              		@ sp needed for prologue
 1002              	.LVL59:
 1003              	.LVL60:
 1004              	.LVL61:
 1005 04f8 F0BC     		pop	{r4, r5, r6, r7}
 1006 04fa 01BC     		pop	{r0}
 1007 04fc 0047     		bx	r0
 1008              	.L83:
 1009 04fe C046     		.align	2
 1010              	.L82:
 1011 0500 00000000 		.word	ipcp_hisoptions
 1012 0504 0C000000 		.word	.LC25
 1013 0508 00000000 		.word	ipcp_wantoptions
 1014 050c 18000000 		.word	.LC28
 1015 0510 40000000 		.word	.LC30
 1016 0514 00000000 		.word	ipcp_gotoptions
 1017 0518 68000000 		.word	.LC33
 1018 051c 90000000 		.word	.LC35
 1019 0520 B8000000 		.word	.LC37
 1020 0524 C0000000 		.word	.LC39
 1021 0528 F4000000 		.word	.LC41
 1022 052c 14010000 		.word	.LC43
 1023 0530 24010000 		.word	.LC45
 1024 0534 44010000 		.word	.LC47
 1025 0538 04000000 		.word	default_route_set
 1026 053c 54010000 		.word	.LC50
 1027 0540 6C010000 		.word	.LC52
 1028 0544 84010000 		.word	.LC54
 1029 0548 A0010000 		.word	.LC56
 1030              	.LFE304:
 1032              		.section	.rodata.str1.4
 1033 01ba 0000     		.align	2
 1034              	.LC59:
 1035 01bc 69706370 		.ascii	"ipcp_rejci: received bad Reject!\012\000"
 1035      5F72656A 
 1035      63693A20 
 1035      72656365 
 1035      69766564 
 1036              		.text
 1037              		.align	2
 1038              		.code	16
 1039              		.thumb_func
 1041              	ipcp_rejci:
 1042              	.LFB302:
 1043              		.loc 1 767 0
 1044 054c F0B5     		push	{r4, r5, r6, r7, lr}
 1045              	.LCFI13:
 1046 054e 5F46     		mov	r7, fp
 1047 0550 5646     		mov	r6, sl
 1048 0552 4D46     		mov	r5, r9
 1049 0554 4446     		mov	r4, r8
 1050 0556 F0B4     		push	{r4, r5, r6, r7}
 1051              	.LCFI14:
 1052              	.LVL62:
 1053 0558 8AB0     		sub	sp, sp, #40
 1054              	.LCFI15:
 1055 055a 0190     		str	r0, [sp, #4]
 1056 055c 0C1C     		mov	r4, r1
 1057 055e 0092     		str	r2, [sp]
 1058              		.loc 1 768 0
 1059 0560 0368     		ldr	r3, [r0]
 1060 0562 5B01     		lsl	r3, r3, #5
 1061 0564 8F4A     		ldr	r2, .L105
 1062              	.LVL63:
 1063 0566 D518     		add	r5, r2, r3
 1064              	.LVL64:
 1065              		.loc 1 774 0
 1066 0568 02A9     		add	r1, sp, #8
 1067              	.LVL65:
 1068 056a 0B1C     		mov	r3, r1
 1069 056c 2A1C     		mov	r2, r5
 1070 056e C1CA     		ldmia	r2!, {r0, r6, r7}
 1071 0570 C1C3     		stmia	r3!, {r0, r6, r7}
 1072              	.LVL66:
 1073 0572 C1CA     		ldmia	r2!, {r0, r6, r7}
 1074 0574 C1C3     		stmia	r3!, {r0, r6, r7}
 1075 0576 41CA     		ldmia	r2!, {r0, r6}
 1076 0578 41C3     		stmia	r3!, {r0, r6}
 1077 057a 0A78     		ldrb	r2, [r1]
 1078              	.LVL67:
 1079 057c D307     		lsl	r3, r2, #31
 1080 057e DB0F     		lsr	r3, r3, #31
 1081 0580 1B06     		lsl	r3, r3, #24
 1082 0582 180E     		lsr	r0, r3, #24
 1083 0584 9206     		lsl	r2, r2, #26
 1084 0586 D20F     		lsr	r2, r2, #31
 1085 0588 9046     		mov	r8, r2
 1086 058a 4B78     		ldrb	r3, [r1, #1]
 1087 058c 9A07     		lsl	r2, r3, #30
 1088 058e D20F     		lsr	r2, r2, #31
 1089 0590 9246     		mov	sl, r2
 1090 0592 5B07     		lsl	r3, r3, #29
 1091 0594 DB0F     		lsr	r3, r3, #31
 1092 0596 9B46     		mov	fp, r3
 1093              		.loc 1 847 0
 1094 0598 2B78     		ldrb	r3, [r5]
 1095              	.LVL68:
 1096 059a DB07     		lsl	r3, r3, #31
 1097 059c DB0F     		lsr	r3, r3, #31
 1098 059e 1B06     		lsl	r3, r3, #24
 1099 05a0 002B     		cmp	r3, #0
 1100 05a2 48D0     		beq	.L85
 1101 05a4 2B78     		ldrb	r3, [r5]
 1102 05a6 9B07     		lsl	r3, r3, #30
 1103 05a8 D90F     		lsr	r1, r3, #31
 1104 05aa 0029     		cmp	r1, #0
 1105 05ac 01D1     		bne	.L86
 1106 05ae 0622     		mov	r2, #6
 1107              	.LVL69:
 1108 05b0 00E0     		b	.L87
 1109              	.LVL70:
 1110              	.L86:
 1111 05b2 0A22     		mov	r2, #10
 1112              	.LVL71:
 1113              	.L87:
 1114 05b4 171C     		mov	r7, r2
 1115 05b6 009B     		ldr	r3, [sp]
 1116 05b8 9342     		cmp	r3, r2
 1117 05ba 3CDB     		blt	.L85
 1118              	.LVL72:
 1119 05bc 6378     		ldrb	r3, [r4, #1]
 1120 05be 9342     		cmp	r3, r2
 1121 05c0 39D1     		bne	.L85
 1122 05c2 2278     		ldrb	r2, [r4]
 1123              	.LVL73:
 1124 05c4 0029     		cmp	r1, #0
 1125 05c6 01D1     		bne	.L88
 1126 05c8 0323     		mov	r3, #3
 1127 05ca 00E0     		b	.L89
 1128              	.L88:
 1129 05cc 0123     		mov	r3, #1
 1130              	.L89:
 1131 05ce 9A42     		cmp	r2, r3
 1132 05d0 31D1     		bne	.L85
 1133              	.LBB6:
 1134 05d2 009E     		ldr	r6, [sp]
 1135 05d4 F61B     		sub	r6, r6, r7
 1136 05d6 0096     		str	r6, [sp]
 1137              	.LVL74:
 1138 05d8 A378     		ldrb	r3, [r4, #2]
 1139              	.LVL75:
 1140 05da 1B02     		lsl	r3, r3, #8
 1141              	.LVL76:
 1142 05dc E078     		ldrb	r0, [r4, #3]
 1143 05de 1843     		orr	r0, r0, r3
 1144              	.LVL77:
 1145 05e0 0002     		lsl	r0, r0, #8
 1146              	.LVL78:
 1147 05e2 2379     		ldrb	r3, [r4, #4]
 1148 05e4 1843     		orr	r0, r0, r3
 1149              	.LVL79:
 1150 05e6 0534     		add	r4, r4, #5
 1151              	.LVL80:
 1152 05e8 0002     		lsl	r0, r0, #8
 1153              	.LVL81:
 1154 05ea 2378     		ldrb	r3, [r4]
 1155 05ec 1843     		orr	r0, r0, r3
 1156              	.LVL82:
 1157 05ee FFF7FEFF 		bl	htonl
 1158 05f2 AB68     		ldr	r3, [r5, #8]
 1159 05f4 9842     		cmp	r0, r3
 1160 05f6 00D0     		beq	.LCB1132
 1161 05f8 C6E0     		b	.L90	@long jump
 1162              	.LCB1132:
 1163              	.LVL83:
 1164 05fa 0134     		add	r4, r4, #1
 1165              	.LVL84:
 1166 05fc 2B78     		ldrb	r3, [r5]
 1167 05fe 9F07     		lsl	r7, r3, #30
 1168 0600 02D4     		bmi	.L91
 1169 0602 0020     		mov	r0, #0
 1170              	.LVL85:
 1171 0604 8146     		mov	r9, r0
 1172 0606 17E0     		b	.L92
 1173              	.LVL86:
 1174              	.L91:
 1175 0608 2378     		ldrb	r3, [r4]
 1176              	.LVL87:
 1177 060a 621C     		add	r2, r4, #1
 1178              	.LVL88:
 1179 060c 1B02     		lsl	r3, r3, #8
 1180              	.LVL89:
 1181 060e 1078     		ldrb	r0, [r2]
 1182              	.LVL90:
 1183 0610 1843     		orr	r0, r0, r3
 1184              	.LVL91:
 1185 0612 0132     		add	r2, r2, #1
 1186              	.LVL92:
 1187 0614 0002     		lsl	r0, r0, #8
 1188              	.LVL93:
 1189 0616 1378     		ldrb	r3, [r2]
 1190 0618 1843     		orr	r0, r0, r3
 1191              	.LVL94:
 1192 061a 541C     		add	r4, r2, #1
 1193              	.LVL95:
 1194 061c 0002     		lsl	r0, r0, #8
 1195              	.LVL96:
 1196 061e 2378     		ldrb	r3, [r4]
 1197 0620 1843     		orr	r0, r0, r3
 1198              	.LVL97:
 1199 0622 FFF7FEFF 		bl	htonl
 1200 0626 EB68     		ldr	r3, [r5, #12]
 1201 0628 9842     		cmp	r0, r3
 1202 062a 00D0     		beq	.LCB1179
 1203 062c ACE0     		b	.L90	@long jump
 1204              	.LCB1179:
 1205              	.LVL98:
 1206 062e 0134     		add	r4, r4, #1
 1207              	.LVL99:
 1208 0630 0021     		mov	r1, #0
 1209 0632 8946     		mov	r9, r1
 1210 0634 00E0     		b	.L92
 1211              	.LVL100:
 1212              	.L85:
 1213 0636 8146     		mov	r9, r0
 1214              	.LVL101:
 1215              	.L92:
 1216              	.LBE6:
 1217              		.loc 1 850 0
 1218 0638 2B78     		ldrb	r3, [r5]
 1219 063a 9A06     		lsl	r2, r3, #26
 1220 063c 2ED5     		bpl	.L97
 1221              	.LVL102:
 1222 063e 6278     		ldrb	r2, [r4, #1]
 1223 0640 2B78     		ldrb	r3, [r5]
 1224 0642 5B06     		lsl	r3, r3, #25
 1225 0644 D80F     		lsr	r0, r3, #31
 1226              	.LVL103:
 1227 0646 0028     		cmp	r0, #0
 1228 0648 01D1     		bne	.L94
 1229 064a 0623     		mov	r3, #6
 1230 064c 00E0     		b	.L95
 1231              	.L94:
 1232 064e 0423     		mov	r3, #4
 1233              	.L95:
 1234 0650 9A42     		cmp	r2, r3
 1235 0652 23D1     		bne	.L97
 1236 0654 009B     		ldr	r3, [sp]
 1237 0656 9342     		cmp	r3, r2
 1238 0658 20DB     		blt	.L97
 1239              	.LVL104:
 1240 065a 2378     		ldrb	r3, [r4]
 1241 065c 022B     		cmp	r3, #2
 1242 065e 1DD1     		bne	.L97
 1243 0660 009E     		ldr	r6, [sp]
 1244 0662 B61A     		sub	r6, r6, r2
 1245 0664 0096     		str	r6, [sp]
 1246              	.LVL105:
 1247 0666 A378     		ldrb	r3, [r4, #2]
 1248              	.LVL106:
 1249 0668 0334     		add	r4, r4, #3
 1250              	.LVL107:
 1251 066a 1B02     		lsl	r3, r3, #8
 1252              	.LVL108:
 1253 066c 2278     		ldrb	r2, [r4]
 1254 066e 6988     		ldrh	r1, [r5, #2]
 1255 0670 1343     		orr	r3, r3, r2
 1256              	.LVL109:
 1257 0672 9942     		cmp	r1, r3
 1258 0674 00D0     		beq	.LCB1253
 1259 0676 87E0     		b	.L90	@long jump
 1260              	.LCB1253:
 1261 0678 0134     		add	r4, r4, #1
 1262              	.LVL110:
 1263 067a 0028     		cmp	r0, #0
 1264 067c 02D0     		beq	.L96
 1265 067e 0027     		mov	r7, #0
 1266 0680 B846     		mov	r8, r7
 1267 0682 0BE0     		b	.L97
 1268              	.L96:
 1269 0684 2A79     		ldrb	r2, [r5, #4]
 1270 0686 2378     		ldrb	r3, [r4]
 1271 0688 9A42     		cmp	r2, r3
 1272 068a 7DD1     		bne	.L90
 1273 068c 611C     		add	r1, r4, #1
 1274              	.LVL111:
 1275 068e 6A79     		ldrb	r2, [r5, #5]
 1276 0690 0B78     		ldrb	r3, [r1]
 1277 0692 9A42     		cmp	r2, r3
 1278 0694 78D1     		bne	.L90
 1279 0696 4C1C     		add	r4, r1, #1
 1280              	.LVL112:
 1281 0698 0020     		mov	r0, #0
 1282 069a 8046     		mov	r8, r0
 1283              	.LVL113:
 1284              	.L97:
 1285              		.loc 1 853 0
 1286 069c 6B78     		ldrb	r3, [r5, #1]
 1287 069e 9907     		lsl	r1, r3, #30
 1288 06a0 1ED5     		bpl	.L99
 1289 06a2 6378     		ldrb	r3, [r4, #1]
 1290 06a4 062B     		cmp	r3, #6
 1291 06a6 1BD1     		bne	.L99
 1292 06a8 009A     		ldr	r2, [sp]
 1293 06aa 052A     		cmp	r2, #5
 1294 06ac 18DD     		ble	.L99
 1295              	.LVL114:
 1296 06ae 2378     		ldrb	r3, [r4]
 1297 06b0 812B     		cmp	r3, #129
 1298 06b2 15D1     		bne	.L99
 1299              	.LBB7:
 1300 06b4 A378     		ldrb	r3, [r4, #2]
 1301              	.LVL115:
 1302 06b6 1B02     		lsl	r3, r3, #8
 1303              	.LVL116:
 1304 06b8 E078     		ldrb	r0, [r4, #3]
 1305              	.LVL117:
 1306 06ba 1843     		orr	r0, r0, r3
 1307              	.LVL118:
 1308 06bc 0002     		lsl	r0, r0, #8
 1309              	.LVL119:
 1310 06be 2379     		ldrb	r3, [r4, #4]
 1311 06c0 1843     		orr	r0, r0, r3
 1312              	.LVL120:
 1313 06c2 0534     		add	r4, r4, #5
 1314              	.LVL121:
 1315 06c4 0002     		lsl	r0, r0, #8
 1316              	.LVL122:
 1317 06c6 2378     		ldrb	r3, [r4]
 1318 06c8 1843     		orr	r0, r0, r3
 1319              	.LVL123:
 1320 06ca FFF7FEFF 		bl	htonl
 1321 06ce 2B69     		ldr	r3, [r5, #16]
 1322 06d0 9842     		cmp	r0, r3
 1323 06d2 59D1     		bne	.L90
 1324              	.LVL124:
 1325 06d4 009B     		ldr	r3, [sp]
 1326 06d6 063B     		sub	r3, r3, #6
 1327 06d8 0093     		str	r3, [sp]
 1328              	.LVL125:
 1329 06da 0134     		add	r4, r4, #1
 1330              	.LVL126:
 1331 06dc 0026     		mov	r6, #0
 1332 06de B246     		mov	sl, r6
 1333              	.LVL127:
 1334              	.L99:
 1335              	.LBE7:
 1336              		.loc 1 855 0
 1337 06e0 6B78     		ldrb	r3, [r5, #1]
 1338 06e2 5F07     		lsl	r7, r3, #29
 1339 06e4 1DD5     		bpl	.L100
 1340 06e6 6378     		ldrb	r3, [r4, #1]
 1341 06e8 062B     		cmp	r3, #6
 1342 06ea 1AD1     		bne	.L100
 1343 06ec 0098     		ldr	r0, [sp]
 1344              	.LVL128:
 1345 06ee 0528     		cmp	r0, #5
 1346 06f0 17DD     		ble	.L100
 1347              	.LVL129:
 1348 06f2 2378     		ldrb	r3, [r4]
 1349 06f4 832B     		cmp	r3, #131
 1350 06f6 14D1     		bne	.L100
 1351              	.LBB8:
 1352 06f8 A378     		ldrb	r3, [r4, #2]
 1353              	.LVL130:
 1354 06fa 1B02     		lsl	r3, r3, #8
 1355              	.LVL131:
 1356 06fc E078     		ldrb	r0, [r4, #3]
 1357 06fe 1843     		orr	r0, r0, r3
 1358              	.LVL132:
 1359 0700 221D     		add	r2, r4, #4
 1360              	.LVL133:
 1361 0702 0002     		lsl	r0, r0, #8
 1362              	.LVL134:
 1363 0704 1378     		ldrb	r3, [r2]
 1364 0706 1843     		orr	r0, r0, r3
 1365              	.LVL135:
 1366 0708 0002     		lsl	r0, r0, #8
 1367              	.LVL136:
 1368 070a 5378     		ldrb	r3, [r2, #1]
 1369 070c 1843     		orr	r0, r0, r3
 1370              	.LVL137:
 1371 070e FFF7FEFF 		bl	htonl
 1372              	.LVL138:
 1373 0712 6B69     		ldr	r3, [r5, #20]
 1374 0714 9842     		cmp	r0, r3
 1375 0716 37D1     		bne	.L90
 1376              	.LVL139:
 1377 0718 0099     		ldr	r1, [sp]
 1378 071a 0639     		sub	r1, r1, #6
 1379 071c 0091     		str	r1, [sp]
 1380              	.LVL140:
 1381 071e 0027     		mov	r7, #0
 1382 0720 00E0     		b	.L101
 1383              	.LVL141:
 1384              	.L100:
 1385 0722 5F46     		mov	r7, fp
 1386              	.L101:
 1387              	.LBE8:
 1388              		.loc 1 860 0
 1389 0724 009A     		ldr	r2, [sp]
 1390 0726 002A     		cmp	r2, #0
 1391 0728 2ED1     		bne	.L90
 1392              	.LVL142:
 1393              		.loc 1 866 0
 1394 072a 019C     		ldr	r4, [sp, #4]
 1395              	.LVL143:
 1396 072c A368     		ldr	r3, [r4, #8]
 1397 072e 092B     		cmp	r3, #9
 1398 0730 01D1     		bne	.L102
 1399              	.LVL144:
 1400 0732 0120     		mov	r0, #1
 1401              	.LVL145:
 1402 0734 2DE0     		b	.L103
 1403              	.LVL146:
 1404              	.L102:
 1405              		.loc 1 867 0
 1406 0736 02A8     		add	r0, sp, #8
 1407              	.LVL147:
 1408 0738 0124     		mov	r4, #1
 1409 073a 0378     		ldrb	r3, [r0]
 1410 073c A343     		bic	r3, r3, r4
 1411 073e 4A46     		mov	r2, r9
 1412 0740 2240     		and	r2, r2, r4
 1413 0742 1343     		orr	r3, r3, r2
 1414 0744 0370     		strb	r3, [r0]
 1415 0746 4146     		mov	r1, r8
 1416 0748 2140     		and	r1, r1, r4
 1417 074a 0378     		ldrb	r3, [r0]
 1418 074c 2022     		mov	r2, #32
 1419 074e 9343     		bic	r3, r3, r2
 1420 0750 4901     		lsl	r1, r1, #5
 1421 0752 0B43     		orr	r3, r3, r1
 1422 0754 0370     		strb	r3, [r0]
 1423 0756 5146     		mov	r1, sl
 1424 0758 2140     		and	r1, r1, r4
 1425 075a 4378     		ldrb	r3, [r0, #1]
 1426 075c 0222     		mov	r2, #2
 1427 075e 9343     		bic	r3, r3, r2
 1428 0760 4900     		lsl	r1, r1, #1
 1429 0762 0B43     		orr	r3, r3, r1
 1430 0764 4370     		strb	r3, [r0, #1]
 1431 0766 391C     		mov	r1, r7
 1432 0768 2140     		and	r1, r1, r4
 1433 076a 4378     		ldrb	r3, [r0, #1]
 1434 076c 0422     		mov	r2, #4
 1435 076e 9343     		bic	r3, r3, r2
 1436 0770 8900     		lsl	r1, r1, #2
 1437 0772 0B43     		orr	r3, r3, r1
 1438 0774 4370     		strb	r3, [r0, #1]
 1439 0776 2B1C     		mov	r3, r5
 1440 0778 C2C8     		ldmia	r0!, {r1, r6, r7}
 1441 077a C2C3     		stmia	r3!, {r1, r6, r7}
 1442              	.LVL148:
 1443 077c 54C8     		ldmia	r0!, {r2, r4, r6}
 1444 077e 54C3     		stmia	r3!, {r2, r4, r6}
 1445 0780 82C8     		ldmia	r0!, {r1, r7}
 1446 0782 82C3     		stmia	r3!, {r1, r7}
 1447 0784 0120     		mov	r0, #1
 1448 0786 04E0     		b	.L103
 1449              	.LVL149:
 1450              	.L90:
 1451              		.loc 1 872 0
 1452 0788 0749     		ldr	r1, .L105+4
 1453 078a 0520     		mov	r0, #5
 1454              	.LVL150:
 1455 078c FFF7FEFF 		bl	ppp_trace
 1456 0790 0020     		mov	r0, #0
 1457              	.LVL151:
 1458              	.L103:
 1459              		.loc 1 874 0
 1460 0792 0AB0     		add	sp, sp, #40
 1461              		@ sp needed for prologue
 1462              	.LVL152:
 1463              	.LVL153:
 1464 0794 3CBC     		pop	{r2, r3, r4, r5}
 1465 0796 9046     		mov	r8, r2
 1466 0798 9946     		mov	r9, r3
 1467 079a A246     		mov	sl, r4
 1468 079c AB46     		mov	fp, r5
 1469 079e F0BC     		pop	{r4, r5, r6, r7}
 1470 07a0 02BC     		pop	{r1}
 1471 07a2 0847     		bx	r1
 1472              	.L106:
 1473              		.align	2
 1474              	.L105:
 1475 07a4 00000000 		.word	ipcp_gotoptions
 1476 07a8 BC010000 		.word	.LC59
 1477              	.LFE302:
 1479              		.section	.rodata.str1.4
 1480 01de 0000     		.align	2
 1481              	.LC62:
 1482 01e0 6C6F6361 		.ascii	"local IP address %s\012\000"
 1482      6C204950 
 1482      20616464 
 1482      72657373 
 1482      2025730A 
 1483 01f5 000000   		.align	2
 1484              	.LC65:
 1485 01f8 7072696D 		.ascii	"primary DNS address %s\012\000"
 1485      61727920 
 1485      444E5320 
 1485      61646472 
 1485      65737320 
 1486              		.align	2
 1487              	.LC68:
 1488 0210 69706370 		.ascii	"ipcp_nakci: received bad Nak!\012\000"
 1488      5F6E616B 
 1488      63693A20 
 1488      72656365 
 1488      69766564 
 1489              		.text
 1490              		.align	2
 1491              		.code	16
 1492              		.thumb_func
 1494              	ipcp_nakci:
 1495              	.LFB301:
 1496              		.loc 1 562 0
 1497 07ac F0B5     		push	{r4, r5, r6, r7, lr}
 1498              	.LCFI16:
 1499 07ae 5F46     		mov	r7, fp
 1500 07b0 5646     		mov	r6, sl
 1501 07b2 4D46     		mov	r5, r9
 1502 07b4 4446     		mov	r4, r8
 1503 07b6 F0B4     		push	{r4, r5, r6, r7}
 1504              	.LCFI17:
 1505              	.LVL154:
 1506 07b8 A4B0     		sub	sp, sp, #144
 1507              	.LCFI18:
 1508 07ba 0190     		str	r0, [sp, #4]
 1509 07bc 0C1C     		mov	r4, r1
 1510 07be 9046     		mov	r8, r2
 1511              		.loc 1 563 0
 1512 07c0 0368     		ldr	r3, [r0]
 1513 07c2 5B01     		lsl	r3, r3, #5
 1514 07c4 C94A     		ldr	r2, .L161
 1515              	.LVL155:
 1516 07c6 D218     		add	r2, r2, r3
 1517 07c8 9146     		mov	r9, r2
 1518              	.LVL156:
 1519              		.loc 1 571 0
 1520 07ca 0023     		mov	r3, #0
 1521 07cc 1993     		str	r3, [sp, #100]
 1522 07ce 1AAA     		add	r2, sp, #104
 1523 07d0 1360     		str	r3, [r2]
 1524 07d2 1BAA     		add	r2, sp, #108
 1525 07d4 1360     		str	r3, [r2]
 1526 07d6 1CAA     		add	r2, sp, #112
 1527 07d8 1360     		str	r3, [r2]
 1528 07da 1DAA     		add	r2, sp, #116
 1529 07dc 1360     		str	r3, [r2]
 1530 07de 1EAA     		add	r2, sp, #120
 1531 07e0 1360     		str	r3, [r2]
 1532 07e2 1FAA     		add	r2, sp, #124
 1533 07e4 1360     		str	r3, [r2]
 1534 07e6 20AA     		add	r2, sp, #128
 1535 07e8 1360     		str	r3, [r2]
 1536              		.loc 1 572 0
 1537 07ea 11AB     		add	r3, sp, #68
 1538 07ec 1A1C     		mov	r2, r3
 1539 07ee 4946     		mov	r1, r9
 1540              	.LVL157:
 1541 07f0 61C9     		ldmia	r1!, {r0, r5, r6}
 1542 07f2 61C2     		stmia	r2!, {r0, r5, r6}
 1543              	.LVL158:
 1544 07f4 61C9     		ldmia	r1!, {r0, r5, r6}
 1545 07f6 61C2     		stmia	r2!, {r0, r5, r6}
 1546 07f8 21C9     		ldmia	r1!, {r0, r5}
 1547 07fa 21C2     		stmia	r2!, {r0, r5}
 1548 07fc 9E68     		ldr	r6, [r3, #8]
 1549 07fe 0A96     		str	r6, [sp, #40]
 1550 0800 D868     		ldr	r0, [r3, #12]
 1551 0802 0B90     		str	r0, [sp, #44]
 1552 0804 1978     		ldrb	r1, [r3]
 1553              	.LVL159:
 1554 0806 4A06     		lsl	r2, r1, #25
 1555 0808 D20F     		lsr	r2, r2, #31
 1556 080a 0C92     		str	r2, [sp, #48]
 1557 080c 1F79     		ldrb	r7, [r3, #4]
 1558 080e 5A79     		ldrb	r2, [r3, #5]
 1559 0810 9246     		mov	sl, r2
 1560 0812 8A06     		lsl	r2, r1, #26
 1561 0814 D60F     		lsr	r6, r2, #31
 1562 0816 5D88     		ldrh	r5, [r3, #2]
 1563 0818 1869     		ldr	r0, [r3, #16]
 1564 081a 0D90     		str	r0, [sp, #52]
 1565 081c 5B69     		ldr	r3, [r3, #20]
 1566 081e 0E93     		str	r3, [sp, #56]
 1567 0820 CB07     		lsl	r3, r1, #31
 1568 0822 DB0F     		lsr	r3, r3, #31
 1569 0824 1B06     		lsl	r3, r3, #24
 1570 0826 1B0E     		lsr	r3, r3, #24
 1571 0828 0F93     		str	r3, [sp, #60]
 1572 082a 8907     		lsl	r1, r1, #30
 1573 082c C90F     		lsr	r1, r1, #31
 1574 082e 1091     		str	r1, [sp, #64]
 1575              		.loc 1 628 0
 1576 0830 4946     		mov	r1, r9
 1577              	.LVL160:
 1578 0832 0B78     		ldrb	r3, [r1]
 1579 0834 DB07     		lsl	r3, r3, #31
 1580 0836 DB0F     		lsr	r3, r3, #31
 1581 0838 1B06     		lsl	r3, r3, #24
 1582 083a 002B     		cmp	r3, #0
 1583 083c 74D0     		beq	.L108
 1584 083e 0B78     		ldrb	r3, [r1]
 1585 0840 9B07     		lsl	r3, r3, #30
 1586 0842 D90F     		lsr	r1, r3, #31
 1587 0844 0029     		cmp	r1, #0
 1588 0846 01D1     		bne	.L109
 1589 0848 0622     		mov	r2, #6
 1590              	.LVL161:
 1591 084a 00E0     		b	.L110
 1592              	.LVL162:
 1593              	.L109:
 1594 084c 0A22     		mov	r2, #10
 1595              	.LVL163:
 1596              	.L110:
 1597 084e 101C     		mov	r0, r2
 1598 0850 9045     		cmp	r8, r2
 1599 0852 69DB     		blt	.L108
 1600 0854 6378     		ldrb	r3, [r4, #1]
 1601 0856 9342     		cmp	r3, r2
 1602 0858 66D1     		bne	.L108
 1603 085a 2278     		ldrb	r2, [r4]
 1604              	.LVL164:
 1605 085c 0029     		cmp	r1, #0
 1606 085e 01D1     		bne	.L111
 1607 0860 0323     		mov	r3, #3
 1608 0862 00E0     		b	.L112
 1609              	.L111:
 1610 0864 0123     		mov	r3, #1
 1611              	.L112:
 1612 0866 9A42     		cmp	r2, r3
 1613 0868 5ED1     		bne	.L108
 1614 086a 4246     		mov	r2, r8
 1615 086c 121A     		sub	r2, r2, r0
 1616 086e 9046     		mov	r8, r2
 1617 0870 A378     		ldrb	r3, [r4, #2]
 1618              	.LVL165:
 1619 0872 1B02     		lsl	r3, r3, #8
 1620              	.LVL166:
 1621 0874 E078     		ldrb	r0, [r4, #3]
 1622 0876 1843     		orr	r0, r0, r3
 1623              	.LVL167:
 1624 0878 0002     		lsl	r0, r0, #8
 1625              	.LVL168:
 1626 087a 2379     		ldrb	r3, [r4, #4]
 1627 087c 1843     		orr	r0, r0, r3
 1628              	.LVL169:
 1629 087e 631D     		add	r3, r4, #5
 1630              	.LVL170:
 1631 0880 0002     		lsl	r0, r0, #8
 1632              	.LVL171:
 1633 0882 0634     		add	r4, r4, #6
 1634              	.LVL172:
 1635 0884 1B78     		ldrb	r3, [r3]
 1636 0886 1843     		orr	r0, r0, r3
 1637              	.LVL173:
 1638 0888 FFF7FEFF 		bl	htonl
 1639 088c 2390     		str	r0, [sp, #140]
 1640              	.LVL174:
 1641 088e 4846     		mov	r0, r9
 1642              	.LVL175:
 1643 0890 0378     		ldrb	r3, [r0]
 1644 0892 9907     		lsl	r1, r3, #30
 1645 0894 16D5     		bpl	.L113
 1646 0896 2278     		ldrb	r2, [r4]
 1647              	.LVL176:
 1648 0898 631C     		add	r3, r4, #1
 1649              	.LVL177:
 1650 089a 1202     		lsl	r2, r2, #8
 1651              	.LVL178:
 1652 089c 1878     		ldrb	r0, [r3]
 1653 089e 1043     		orr	r0, r0, r2
 1654              	.LVL179:
 1655 08a0 0133     		add	r3, r3, #1
 1656              	.LVL180:
 1657 08a2 0002     		lsl	r0, r0, #8
 1658              	.LVL181:
 1659 08a4 1A78     		ldrb	r2, [r3]
 1660 08a6 1043     		orr	r0, r0, r2
 1661              	.LVL182:
 1662 08a8 0133     		add	r3, r3, #1
 1663              	.LVL183:
 1664 08aa 0002     		lsl	r0, r0, #8
 1665              	.LVL184:
 1666 08ac 5C1C     		add	r4, r3, #1
 1667              	.LVL185:
 1668 08ae 1B78     		ldrb	r3, [r3]
 1669 08b0 1843     		orr	r0, r0, r3
 1670              	.LVL186:
 1671 08b2 FFF7FEFF 		bl	htonl
 1672 08b6 2290     		str	r0, [sp, #136]
 1673              	.LVL187:
 1674 08b8 19A9     		add	r1, sp, #100
 1675 08ba 0B78     		ldrb	r3, [r1]
 1676 08bc 0222     		mov	r2, #2
 1677 08be 1343     		orr	r3, r3, r2
 1678 08c0 0B70     		strb	r3, [r1]
 1679 08c2 01E0     		b	.L114
 1680              	.LVL188:
 1681              	.L113:
 1682 08c4 0023     		mov	r3, #0
 1683 08c6 2293     		str	r3, [sp, #136]
 1684              	.LVL189:
 1685              	.L114:
 1686 08c8 19A9     		add	r1, sp, #100
 1687 08ca 0B78     		ldrb	r3, [r1]
 1688 08cc 0122     		mov	r2, #1
 1689 08ce 1343     		orr	r3, r3, r2
 1690 08d0 0B70     		strb	r3, [r1]
 1691 08d2 239A     		ldr	r2, [sp, #140]
 1692 08d4 9346     		mov	fp, r2
 1693 08d6 4846     		mov	r0, r9
 1694 08d8 0378     		ldrb	r3, [r0]
 1695 08da DB09     		lsr	r3, r3, #7
 1696 08dc 002B     		cmp	r3, #0
 1697 08de 01D0     		beq	.L156
 1698              	.LVL190:
 1699 08e0 002A     		cmp	r2, #0
 1700 08e2 02D1     		bne	.L115
 1701              	.L156:
 1702 08e4 0A99     		ldr	r1, [sp, #40]
 1703 08e6 8B46     		mov	fp, r1
 1704 08e8 07E0     		b	.L117
 1705              	.L115:
 1706 08ea 2398     		ldr	r0, [sp, #140]
 1707 08ec FFF7FEFF 		bl	inet_ntoa
 1708 08f0 021C     		mov	r2, r0
 1709 08f2 7F49     		ldr	r1, .L161+4
 1710 08f4 0520     		mov	r0, #5
 1711 08f6 FFF7FEFF 		bl	ppp_trace
 1712              	.L117:
 1713 08fa 229A     		ldr	r2, [sp, #136]
 1714 08fc 0992     		str	r2, [sp, #36]
 1715 08fe 4846     		mov	r0, r9
 1716 0900 4378     		ldrb	r3, [r0, #1]
 1717 0902 DB07     		lsl	r3, r3, #31
 1718 0904 DB0F     		lsr	r3, r3, #31
 1719 0906 1B06     		lsl	r3, r3, #24
 1720 0908 002B     		cmp	r3, #0
 1721 090a 01D0     		beq	.L157
 1722              	.LVL191:
 1723 090c 002A     		cmp	r2, #0
 1724 090e 02D1     		bne	.L118
 1725              	.L157:
 1726 0910 0B99     		ldr	r1, [sp, #44]
 1727 0912 0991     		str	r1, [sp, #36]
 1728 0914 0CE0     		b	.L120
 1729              	.L118:
 1730 0916 2298     		ldr	r0, [sp, #136]
 1731 0918 FFF7FEFF 		bl	inet_ntoa
 1732 091c 021C     		mov	r2, r0
 1733 091e 7549     		ldr	r1, .L161+8
 1734 0920 0520     		mov	r0, #5
 1735 0922 FFF7FEFF 		bl	ppp_trace
 1736 0926 03E0     		b	.L120
 1737              	.LVL192:
 1738              	.L108:
 1739 0928 0B9A     		ldr	r2, [sp, #44]
 1740              	.LVL193:
 1741 092a 0992     		str	r2, [sp, #36]
 1742 092c 0A9B     		ldr	r3, [sp, #40]
 1743 092e 9B46     		mov	fp, r3
 1744              	.LVL194:
 1745              	.L120:
 1746              		.loc 1 647 0
 1747 0930 4846     		mov	r0, r9
 1748 0932 0378     		ldrb	r3, [r0]
 1749 0934 9906     		lsl	r1, r3, #26
 1750 0936 43D5     		bpl	.L121
 1751 0938 6078     		ldrb	r0, [r4, #1]
 1752              	.LVL195:
 1753 093a 0428     		cmp	r0, #4
 1754 093c 01D0     		beq	.L122
 1755 093e 0628     		cmp	r0, #6
 1756 0940 3ED1     		bne	.L121
 1757              	.L122:
 1758 0942 8045     		cmp	r8, r0
 1759 0944 3CDB     		blt	.L121
 1760 0946 2378     		ldrb	r3, [r4]
 1761 0948 022B     		cmp	r3, #2
 1762 094a 39D1     		bne	.L121
 1763 094c 4346     		mov	r3, r8
 1764 094e 1B1A     		sub	r3, r3, r0
 1765              	.LVL196:
 1766 0950 9846     		mov	r8, r3
 1767 0952 A378     		ldrb	r3, [r4, #2]
 1768              	.LVL197:
 1769 0954 1B02     		lsl	r3, r3, #8
 1770              	.LVL198:
 1771 0956 E278     		ldrb	r2, [r4, #3]
 1772 0958 1343     		orr	r3, r3, r2
 1773              	.LVL199:
 1774 095a 0093     		str	r3, [sp]
 1775 095c 0434     		add	r4, r4, #4
 1776 095e 19A9     		add	r1, sp, #100
 1777 0960 0B78     		ldrb	r3, [r1]
 1778              	.LVL200:
 1779 0962 2022     		mov	r2, #32
 1780 0964 1343     		orr	r3, r3, r2
 1781 0966 0B70     		strb	r3, [r1]
 1782 0968 0628     		cmp	r0, #6
 1783 096a 1BD1     		bne	.L123
 1784              	.LVL201:
 1785 096c 2278     		ldrb	r2, [r4]
 1786              	.LVL202:
 1787 096e 631C     		add	r3, r4, #1
 1788              	.LVL203:
 1789 0970 1978     		ldrb	r1, [r3]
 1790              	.LVL204:
 1791 0972 5C1C     		add	r4, r3, #1
 1792              	.LVL205:
 1793 0974 0098     		ldr	r0, [sp]
 1794              	.LVL206:
 1795 0976 2D28     		cmp	r0, #45
 1796 0978 2AD1     		bne	.L124
 1797              	.LVL207:
 1798 097a 4846     		mov	r0, r9
 1799 097c 0379     		ldrb	r3, [r0, #4]
 1800 097e 9342     		cmp	r3, r2
 1801 0980 01D9     		bls	.L125
 1802 0982 0792     		str	r2, [sp, #28]
 1803 0984 00E0     		b	.L126
 1804              	.L125:
 1805 0986 0797     		str	r7, [sp, #28]
 1806              	.L126:
 1807 0988 0029     		cmp	r1, #0
 1808 098a 04D1     		bne	.L127
 1809 098c 0495     		str	r5, [sp, #16]
 1810 098e 0596     		str	r6, [sp, #20]
 1811 0990 0691     		str	r1, [sp, #24]
 1812              	.LVL208:
 1813 0992 0891     		str	r1, [sp, #32]
 1814 0994 24E0     		b	.L128
 1815              	.LVL209:
 1816              	.L127:
 1817 0996 0495     		str	r5, [sp, #16]
 1818 0998 0596     		str	r6, [sp, #20]
 1819 099a 5246     		mov	r2, sl
 1820              	.LVL210:
 1821 099c 0692     		str	r2, [sp, #24]
 1822 099e 0020     		mov	r0, #0
 1823 09a0 0890     		str	r0, [sp, #32]
 1824 09a2 1DE0     		b	.L128
 1825              	.LVL211:
 1826              	.L123:
 1827 09a4 0099     		ldr	r1, [sp]
 1828 09a6 2D29     		cmp	r1, #45
 1829 09a8 01D0     		beq	.L158
 1830              	.LVL212:
 1831 09aa 3729     		cmp	r1, #55
 1832 09ac 10D1     		bne	.L124
 1833              	.L158:
 1834 09ae 009A     		ldr	r2, [sp]
 1835 09b0 0492     		str	r2, [sp, #16]
 1836 09b2 0596     		str	r6, [sp, #20]
 1837 09b4 5346     		mov	r3, sl
 1838 09b6 0693     		str	r3, [sp, #24]
 1839 09b8 0797     		str	r7, [sp, #28]
 1840 09ba 0120     		mov	r0, #1
 1841              	.LVL213:
 1842 09bc 0890     		str	r0, [sp, #32]
 1843 09be 0FE0     		b	.L128
 1844              	.LVL214:
 1845              	.L121:
 1846 09c0 0495     		str	r5, [sp, #16]
 1847 09c2 0596     		str	r6, [sp, #20]
 1848 09c4 5146     		mov	r1, sl
 1849 09c6 0691     		str	r1, [sp, #24]
 1850 09c8 0797     		str	r7, [sp, #28]
 1851 09ca 0C98     		ldr	r0, [sp, #48]
 1852              	.LVL215:
 1853 09cc 0890     		str	r0, [sp, #32]
 1854 09ce 07E0     		b	.L128
 1855              	.LVL216:
 1856              	.L124:
 1857 09d0 0495     		str	r5, [sp, #16]
 1858 09d2 5146     		mov	r1, sl
 1859              	.LVL217:
 1860 09d4 0691     		str	r1, [sp, #24]
 1861 09d6 0797     		str	r7, [sp, #28]
 1862 09d8 0C98     		ldr	r0, [sp, #48]
 1863              	.LVL218:
 1864 09da 0890     		str	r0, [sp, #32]
 1865 09dc 0021     		mov	r1, #0
 1866 09de 0591     		str	r1, [sp, #20]
 1867              	.LVL219:
 1868              	.L128:
 1869              		.loc 1 672 0
 1870 09e0 4A46     		mov	r2, r9
 1871              	.LVL220:
 1872 09e2 5378     		ldrb	r3, [r2, #1]
 1873 09e4 9D07     		lsl	r5, r3, #30
 1874 09e6 28D5     		bpl	.L130
 1875 09e8 6378     		ldrb	r3, [r4, #1]
 1876 09ea 062B     		cmp	r3, #6
 1877 09ec 25D1     		bne	.L130
 1878 09ee 4646     		mov	r6, r8
 1879 09f0 052E     		cmp	r6, #5
 1880 09f2 22DD     		ble	.L130
 1881 09f4 2378     		ldrb	r3, [r4]
 1882 09f6 812B     		cmp	r3, #129
 1883 09f8 1FD1     		bne	.L130
 1884 09fa 0620     		mov	r0, #6
 1885 09fc 4042     		neg	r0, r0
 1886 09fe 8044     		add	r8, r8, r0
 1887 0a00 A378     		ldrb	r3, [r4, #2]
 1888              	.LVL221:
 1889 0a02 1B02     		lsl	r3, r3, #8
 1890              	.LVL222:
 1891 0a04 E078     		ldrb	r0, [r4, #3]
 1892 0a06 1843     		orr	r0, r0, r3
 1893              	.LVL223:
 1894 0a08 0002     		lsl	r0, r0, #8
 1895              	.LVL224:
 1896 0a0a 2379     		ldrb	r3, [r4, #4]
 1897 0a0c 1843     		orr	r0, r0, r3
 1898              	.LVL225:
 1899 0a0e 631D     		add	r3, r4, #5
 1900              	.LVL226:
 1901 0a10 0002     		lsl	r0, r0, #8
 1902              	.LVL227:
 1903 0a12 0634     		add	r4, r4, #6
 1904              	.LVL228:
 1905 0a14 1B78     		ldrb	r3, [r3]
 1906 0a16 1843     		orr	r0, r0, r3
 1907              	.LVL229:
 1908 0a18 FFF7FEFF 		bl	htonl
 1909              	.LVL230:
 1910 0a1c 2190     		str	r0, [sp, #132]
 1911              	.LVL231:
 1912 0a1e 19A9     		add	r1, sp, #100
 1913 0a20 4B78     		ldrb	r3, [r1, #1]
 1914 0a22 0222     		mov	r2, #2
 1915 0a24 1343     		orr	r3, r3, r2
 1916 0a26 4B70     		strb	r3, [r1, #1]
 1917 0a28 0390     		str	r0, [sp, #12]
 1918 0a2a FFF7FEFF 		bl	inet_ntoa
 1919              	.LVL232:
 1920 0a2e 021C     		mov	r2, r0
 1921 0a30 3149     		ldr	r1, .L161+12
 1922 0a32 0520     		mov	r0, #5
 1923 0a34 FFF7FEFF 		bl	ppp_trace
 1924 0a38 01E0     		b	.L131
 1925              	.LVL233:
 1926              	.L130:
 1927 0a3a 0D99     		ldr	r1, [sp, #52]
 1928              	.LVL234:
 1929 0a3c 0391     		str	r1, [sp, #12]
 1930              	.LVL235:
 1931              	.L131:
 1932              		.loc 1 677 0
 1933 0a3e 4A46     		mov	r2, r9
 1934 0a40 5378     		ldrb	r3, [r2, #1]
 1935 0a42 5D07     		lsl	r5, r3, #29
 1936 0a44 28D5     		bpl	.L132
 1937 0a46 6378     		ldrb	r3, [r4, #1]
 1938 0a48 062B     		cmp	r3, #6
 1939 0a4a 25D1     		bne	.L132
 1940 0a4c 4646     		mov	r6, r8
 1941 0a4e 052E     		cmp	r6, #5
 1942 0a50 22DD     		ble	.L132
 1943 0a52 2378     		ldrb	r3, [r4]
 1944 0a54 832B     		cmp	r3, #131
 1945 0a56 1FD1     		bne	.L132
 1946 0a58 0620     		mov	r0, #6
 1947 0a5a 4042     		neg	r0, r0
 1948 0a5c 8044     		add	r8, r8, r0
 1949 0a5e A378     		ldrb	r3, [r4, #2]
 1950              	.LVL236:
 1951 0a60 1B02     		lsl	r3, r3, #8
 1952              	.LVL237:
 1953 0a62 E078     		ldrb	r0, [r4, #3]
 1954 0a64 1843     		orr	r0, r0, r3
 1955              	.LVL238:
 1956 0a66 0002     		lsl	r0, r0, #8
 1957              	.LVL239:
 1958 0a68 2379     		ldrb	r3, [r4, #4]
 1959 0a6a 1843     		orr	r0, r0, r3
 1960              	.LVL240:
 1961 0a6c 631D     		add	r3, r4, #5
 1962              	.LVL241:
 1963 0a6e 0002     		lsl	r0, r0, #8
 1964              	.LVL242:
 1965 0a70 0634     		add	r4, r4, #6
 1966              	.LVL243:
 1967 0a72 1B78     		ldrb	r3, [r3]
 1968 0a74 1843     		orr	r0, r0, r3
 1969              	.LVL244:
 1970 0a76 FFF7FEFF 		bl	htonl
 1971 0a7a 2190     		str	r0, [sp, #132]
 1972 0a7c 19A9     		add	r1, sp, #100
 1973 0a7e 4B78     		ldrb	r3, [r1, #1]
 1974 0a80 0422     		mov	r2, #4
 1975 0a82 1343     		orr	r3, r3, r2
 1976 0a84 4B70     		strb	r3, [r1, #1]
 1977 0a86 0290     		str	r0, [sp, #8]
 1978 0a88 FFF7FEFF 		bl	inet_ntoa
 1979 0a8c 021C     		mov	r2, r0
 1980 0a8e 1B49     		ldr	r1, .L161+16
 1981 0a90 0520     		mov	r0, #5
 1982 0a92 FFF7FEFF 		bl	ppp_trace
 1983 0a96 01E0     		b	.L133
 1984              	.L132:
 1985 0a98 0E99     		ldr	r1, [sp, #56]
 1986 0a9a 0291     		str	r1, [sp, #8]
 1987              	.L133:
 1988              		.loc 1 688 0
 1989 0a9c 4246     		mov	r2, r8
 1990 0a9e 022A     		cmp	r2, #2
 1991 0aa0 02DC     		bgt	.L134
 1992 0aa2 109D     		ldr	r5, [sp, #64]
 1993 0aa4 0F9E     		ldr	r6, [sp, #60]
 1994 0aa6 C7E0     		b	.L135
 1995              	.L134:
 1996              		.loc 1 689 0
 1997 0aa8 2078     		ldrb	r0, [r4]
 1998              	.LVL245:
 1999 0aaa 611C     		add	r1, r4, #1
 2000              	.LVL246:
 2001              		.loc 1 690 0
 2002 0aac 0C78     		ldrb	r4, [r1]
 2003              	.LVL247:
 2004              		.loc 1 691 0
 2005 0aae 4346     		mov	r3, r8
 2006 0ab0 1B1B     		sub	r3, r3, r4
 2007 0ab2 9846     		mov	r8, r3
 2008 0ab4 00D5     		bpl	.LCB2122
 2009 0ab6 02E1     		b	.L136	@long jump
 2010              	.LCB2122:
 2011              		.loc 1 690 0
 2012 0ab8 4F1C     		add	r7, r1, #1
 2013              	.LVL248:
 2014 0aba 109D     		ldr	r5, [sp, #64]
 2015 0abc 0F9E     		ldr	r6, [sp, #60]
 2016              		.loc 1 698 0
 2017 0abe 6421     		mov	r1, #100
 2018 0ac0 6944     		add	r1, r1, sp
 2019 0ac2 8A46     		mov	sl, r1
 2020 0ac4 0AE0     		b	.L137
 2021              	.LVL249:
 2022              	.L152:
 2023              		.loc 1 694 0
 2024 0ac6 A31E     		sub	r3, r4, #2
 2025              	.LVL250:
 2026 0ac8 FB18     		add	r3, r7, r3
 2027              	.LVL251:
 2028              		.loc 1 689 0
 2029 0aca 1878     		ldrb	r0, [r3]
 2030              	.LVL252:
 2031 0acc 591C     		add	r1, r3, #1
 2032              	.LVL253:
 2033              		.loc 1 690 0
 2034 0ace 0C78     		ldrb	r4, [r1]
 2035              	.LVL254:
 2036              		.loc 1 691 0
 2037 0ad0 4246     		mov	r2, r8
 2038 0ad2 121B     		sub	r2, r2, r4
 2039 0ad4 9046     		mov	r8, r2
 2040 0ad6 00D5     		bpl	.LCB2156
 2041 0ad8 F1E0     		b	.L136	@long jump
 2042              	.LCB2156:
 2043              		.loc 1 690 0
 2044 0ada 4F1C     		add	r7, r1, #1
 2045              	.LVL255:
 2046              	.L137:
 2047              		.loc 1 696 0
 2048 0adc 0228     		cmp	r0, #2
 2049 0ade 0FD0     		beq	.L140
 2050 0ae0 0328     		cmp	r0, #3
 2051 0ae2 72D0     		beq	.L141
 2052 0ae4 0128     		cmp	r0, #1
 2053 0ae6 00D0     		beq	.LCB2166
 2054 0ae8 A2E0     		b	.L138	@long jump
 2055              	.LCB2166:
 2056 0aea 1EE0     		b	.L160
 2057              	.L162:
 2058              		.align	2
 2059              	.L161:
 2060 0aec 00000000 		.word	ipcp_gotoptions
 2061 0af0 E0010000 		.word	.LC62
 2062 0af4 6C010000 		.word	.LC52
 2063 0af8 F8010000 		.word	.LC65
 2064 0afc A0010000 		.word	.LC56
 2065              	.L140:
 2066              		.loc 1 698 0
 2067 0b00 4846     		mov	r0, r9
 2068              	.LVL256:
 2069 0b02 0378     		ldrb	r3, [r0]
 2070              	.LVL257:
 2071 0b04 9906     		lsl	r1, r3, #26
 2072 0b06 00D5     		bpl	.LCB2191
 2073 0b08 D9E0     		b	.L136	@long jump
 2074              	.LCB2191:
 2075              	.LVL258:
 2076 0b0a 5246     		mov	r2, sl
 2077 0b0c 1378     		ldrb	r3, [r2]
 2078 0b0e 9806     		lsl	r0, r3, #26
 2079 0b10 00D5     		bpl	.LCB2202
 2080 0b12 D4E0     		b	.L136	@long jump
 2081              	.LCB2202:
 2082 0b14 062C     		cmp	r4, #6
 2083 0b16 02D0     		beq	.L159
 2084 0b18 042C     		cmp	r4, #4
 2085 0b1a 00D0     		beq	.LCB2206
 2086 0b1c CFE0     		b	.L136	@long jump
 2087              	.LCB2206:
 2088              	.L159:
 2089              		.loc 1 702 0
 2090 0b1e 5146     		mov	r1, sl
 2091 0b20 0B78     		ldrb	r3, [r1]
 2092 0b22 2022     		mov	r2, #32
 2093 0b24 1343     		orr	r3, r3, r2
 2094 0b26 0B70     		strb	r3, [r1]
 2095 0b28 82E0     		b	.L138
 2096              	.LVL259:
 2097              	.L160:
 2098              		.loc 1 705 0
 2099 0b2a 4D46     		mov	r5, r9
 2100 0b2c 2B78     		ldrb	r3, [r5]
 2101              	.LVL260:
 2102 0b2e DB07     		lsl	r3, r3, #31
 2103 0b30 DB0F     		lsr	r3, r3, #31
 2104 0b32 1B06     		lsl	r3, r3, #24
 2105 0b34 002B     		cmp	r3, #0
 2106 0b36 03D0     		beq	.L143
 2107              	.LVL261:
 2108 0b38 2B78     		ldrb	r3, [r5]
 2109 0b3a 9E07     		lsl	r6, r3, #30
 2110 0b3c 00D5     		bpl	.LCB2241
 2111 0b3e BEE0     		b	.L136	@long jump
 2112              	.LCB2241:
 2113              	.L143:
 2114 0b40 5046     		mov	r0, sl
 2115              	.LVL262:
 2116 0b42 0378     		ldrb	r3, [r0]
 2117 0b44 9907     		lsl	r1, r3, #30
 2118 0b46 00D5     		bpl	.LCB2252
 2119 0b48 B9E0     		b	.L136	@long jump
 2120              	.LCB2252:
 2121 0b4a 0A2C     		cmp	r4, #10
 2122 0b4c 00D0     		beq	.LCB2254
 2123 0b4e B6E0     		b	.L136	@long jump
 2124              	.LCB2254:
 2125              		.loc 1 711 0
 2126 0b50 3A78     		ldrb	r2, [r7]
 2127              	.LVL263:
 2128 0b52 7B1C     		add	r3, r7, #1
 2129              	.LVL264:
 2130 0b54 1202     		lsl	r2, r2, #8
 2131              	.LVL265:
 2132 0b56 1878     		ldrb	r0, [r3]
 2133 0b58 1043     		orr	r0, r0, r2
 2134              	.LVL266:
 2135 0b5a 0133     		add	r3, r3, #1
 2136              	.LVL267:
 2137 0b5c 0002     		lsl	r0, r0, #8
 2138              	.LVL268:
 2139 0b5e 1A78     		ldrb	r2, [r3]
 2140 0b60 1043     		orr	r0, r0, r2
 2141              	.LVL269:
 2142 0b62 0133     		add	r3, r3, #1
 2143              	.LVL270:
 2144 0b64 0002     		lsl	r0, r0, #8
 2145              	.LVL271:
 2146 0b66 5E1C     		add	r6, r3, #1
 2147              	.LVL272:
 2148              		.loc 1 712 0
 2149 0b68 1B78     		ldrb	r3, [r3]
 2150 0b6a 1843     		orr	r0, r0, r3
 2151              	.LVL273:
 2152 0b6c FFF7FEFF 		bl	htonl
 2153 0b70 051C     		mov	r5, r0
 2154 0b72 2390     		str	r0, [sp, #140]
 2155              	.LVL274:
 2156              		.loc 1 713 0
 2157 0b74 0028     		cmp	r0, #0
 2158 0b76 04D0     		beq	.L144
 2159 0b78 4A46     		mov	r2, r9
 2160 0b7a 1378     		ldrb	r3, [r2]
 2161 0b7c DB09     		lsr	r3, r3, #7
 2162 0b7e 002B     		cmp	r3, #0
 2163 0b80 00D1     		bne	.L145
 2164              	.L144:
 2165 0b82 5D46     		mov	r5, fp
 2166              	.L145:
 2167              		.loc 1 716 0
 2168 0b84 3378     		ldrb	r3, [r6]
 2169              	.LVL275:
 2170 0b86 721C     		add	r2, r6, #1
 2171              	.LVL276:
 2172 0b88 1B02     		lsl	r3, r3, #8
 2173              	.LVL277:
 2174 0b8a 1078     		ldrb	r0, [r2]
 2175 0b8c 1843     		orr	r0, r0, r3
 2176              	.LVL278:
 2177 0b8e 0132     		add	r2, r2, #1
 2178              	.LVL279:
 2179 0b90 0002     		lsl	r0, r0, #8
 2180              	.LVL280:
 2181 0b92 1378     		ldrb	r3, [r2]
 2182 0b94 1843     		orr	r0, r0, r3
 2183              	.LVL281:
 2184 0b96 0002     		lsl	r0, r0, #8
 2185              	.LVL282:
 2186              		.loc 1 717 0
 2187 0b98 5378     		ldrb	r3, [r2, #1]
 2188 0b9a 1843     		orr	r0, r0, r3
 2189              	.LVL283:
 2190 0b9c FFF7FEFF 		bl	htonl
 2191              	.LVL284:
 2192 0ba0 2290     		str	r0, [sp, #136]
 2193              	.LVL285:
 2194              		.loc 1 718 0
 2195 0ba2 0028     		cmp	r0, #0
 2196 0ba4 06D0     		beq	.L146
 2197 0ba6 4E46     		mov	r6, r9
 2198 0ba8 7378     		ldrb	r3, [r6, #1]
 2199 0baa DB07     		lsl	r3, r3, #31
 2200 0bac DB0F     		lsr	r3, r3, #31
 2201 0bae 1B06     		lsl	r3, r3, #24
 2202 0bb0 002B     		cmp	r3, #0
 2203 0bb2 00D1     		bne	.L147
 2204              	.L146:
 2205 0bb4 0998     		ldr	r0, [sp, #36]
 2206              	.L147:
 2207              		.loc 1 721 0
 2208 0bb6 5146     		mov	r1, sl
 2209 0bb8 0B78     		ldrb	r3, [r1]
 2210 0bba 0222     		mov	r2, #2
 2211 0bbc 1343     		orr	r3, r3, r2
 2212 0bbe 0B70     		strb	r3, [r1]
 2213 0bc0 0990     		str	r0, [sp, #36]
 2214 0bc2 AB46     		mov	fp, r5
 2215 0bc4 0125     		mov	r5, #1
 2216 0bc6 0126     		mov	r6, #1
 2217 0bc8 32E0     		b	.L138
 2218              	.LVL286:
 2219              	.L141:
 2220              		.loc 1 724 0
 2221 0bca 4D46     		mov	r5, r9
 2222 0bcc 2B78     		ldrb	r3, [r5]
 2223              	.LVL287:
 2224 0bce DB07     		lsl	r3, r3, #31
 2225 0bd0 DB0F     		lsr	r3, r3, #31
 2226 0bd2 1B06     		lsl	r3, r3, #24
 2227 0bd4 002B     		cmp	r3, #0
 2228 0bd6 72D1     		bne	.L136
 2229              	.LVL288:
 2230 0bd8 5046     		mov	r0, sl
 2231              	.LVL289:
 2232 0bda 0378     		ldrb	r3, [r0]
 2233 0bdc DB07     		lsl	r3, r3, #31
 2234 0bde DB0F     		lsr	r3, r3, #31
 2235 0be0 1B06     		lsl	r3, r3, #24
 2236 0be2 002B     		cmp	r3, #0
 2237 0be4 6BD1     		bne	.L136
 2238 0be6 062C     		cmp	r4, #6
 2239 0be8 69D1     		bne	.L136
 2240              		.loc 1 728 0
 2241 0bea 3B78     		ldrb	r3, [r7]
 2242              	.LVL290:
 2243 0bec 7A1C     		add	r2, r7, #1
 2244              	.LVL291:
 2245 0bee 1B02     		lsl	r3, r3, #8
 2246              	.LVL292:
 2247 0bf0 1078     		ldrb	r0, [r2]
 2248 0bf2 1843     		orr	r0, r0, r3
 2249              	.LVL293:
 2250 0bf4 0132     		add	r2, r2, #1
 2251              	.LVL294:
 2252 0bf6 0002     		lsl	r0, r0, #8
 2253              	.LVL295:
 2254 0bf8 1378     		ldrb	r3, [r2]
 2255 0bfa 1843     		orr	r0, r0, r3
 2256              	.LVL296:
 2257 0bfc 0002     		lsl	r0, r0, #8
 2258              	.LVL297:
 2259              		.loc 1 729 0
 2260 0bfe 5378     		ldrb	r3, [r2, #1]
 2261 0c00 1843     		orr	r0, r0, r3
 2262              	.LVL298:
 2263 0c02 FFF7FEFF 		bl	htonl
 2264              	.LVL299:
 2265 0c06 2390     		str	r0, [sp, #140]
 2266              	.LVL300:
 2267              		.loc 1 730 0
 2268 0c08 0028     		cmp	r0, #0
 2269 0c0a 03D0     		beq	.L148
 2270 0c0c 2B78     		ldrb	r3, [r5]
 2271 0c0e DB09     		lsr	r3, r3, #7
 2272 0c10 002B     		cmp	r3, #0
 2273 0c12 05D1     		bne	.L149
 2274              	.L148:
 2275              		.loc 1 733 0
 2276 0c14 5946     		mov	r1, fp
 2277 0c16 0029     		cmp	r1, #0
 2278 0c18 01D1     		bne	.L150
 2279 0c1a 5846     		mov	r0, fp
 2280 0c1c 01E0     		b	.L151
 2281              	.L150:
 2282 0c1e 5846     		mov	r0, fp
 2283              	.L149:
 2284 0c20 0126     		mov	r6, #1
 2285              	.L151:
 2286              		.loc 1 736 0
 2287 0c22 5246     		mov	r2, sl
 2288 0c24 1378     		ldrb	r3, [r2]
 2289 0c26 0125     		mov	r5, #1
 2290 0c28 2B43     		orr	r3, r3, r5
 2291 0c2a 1370     		strb	r3, [r2]
 2292 0c2c 8346     		mov	fp, r0
 2293 0c2e 0025     		mov	r5, #0
 2294              	.LVL301:
 2295              	.L138:
 2296              		.loc 1 688 0
 2297 0c30 4046     		mov	r0, r8
 2298              	.LVL302:
 2299 0c32 0228     		cmp	r0, #2
 2300 0c34 00DD     		ble	.LCB2450
 2301 0c36 46E7     		b	.L152	@long jump
 2302              	.LCB2450:
 2303              	.LVL303:
 2304              	.L135:
 2305              		.loc 1 743 0
 2306 0c38 4146     		mov	r1, r8
 2307 0c3a 0029     		cmp	r1, #0
 2308 0c3c 3FD1     		bne	.L136
 2309              		.loc 1 750 0
 2310 0c3e 019A     		ldr	r2, [sp, #4]
 2311 0c40 9368     		ldr	r3, [r2, #8]
 2312              	.LVL304:
 2313 0c42 092B     		cmp	r3, #9
 2314 0c44 01D1     		bne	.L153
 2315              	.LVL305:
 2316 0c46 0120     		mov	r0, #1
 2317 0c48 3EE0     		b	.L154
 2318              	.L153:
 2319              		.loc 1 751 0
 2320 0c4a 11AA     		add	r2, sp, #68
 2321 0c4c 5B46     		mov	r3, fp
 2322 0c4e 9360     		str	r3, [r2, #8]
 2323 0c50 099C     		ldr	r4, [sp, #36]
 2324              	.LVL306:
 2325 0c52 D460     		str	r4, [r2, #12]
 2326 0c54 1378     		ldrb	r3, [r2]
 2327 0c56 4021     		mov	r1, #64
 2328 0c58 8B43     		bic	r3, r3, r1
 2329 0c5a 0898     		ldr	r0, [sp, #32]
 2330 0c5c 8101     		lsl	r1, r0, #6
 2331 0c5e 0B43     		orr	r3, r3, r1
 2332 0c60 1370     		strb	r3, [r2]
 2333 0c62 6946     		mov	r1, sp
 2334 0c64 1C23     		mov	r3, #28
 2335 0c66 595C     		ldrb	r1, [r3, r1]
 2336 0c68 1171     		strb	r1, [r2, #4]
 2337 0c6a 6B46     		mov	r3, sp
 2338 0c6c 1824     		mov	r4, #24
 2339 0c6e E35C     		ldrb	r3, [r4, r3]
 2340 0c70 5371     		strb	r3, [r2, #5]
 2341 0c72 0120     		mov	r0, #1
 2342 0c74 1378     		ldrb	r3, [r2]
 2343 0c76 2021     		mov	r1, #32
 2344 0c78 8B43     		bic	r3, r3, r1
 2345 0c7a 059C     		ldr	r4, [sp, #20]
 2346 0c7c 6101     		lsl	r1, r4, #5
 2347 0c7e 0B43     		orr	r3, r3, r1
 2348 0c80 1370     		strb	r3, [r2]
 2349 0c82 6946     		mov	r1, sp
 2350 0c84 1023     		mov	r3, #16
 2351 0c86 595A     		ldrh	r1, [r3, r1]
 2352 0c88 5180     		strh	r1, [r2, #2]
 2353 0c8a 039B     		ldr	r3, [sp, #12]
 2354 0c8c 1361     		str	r3, [r2, #16]
 2355 0c8e 029C     		ldr	r4, [sp, #8]
 2356 0c90 5461     		str	r4, [r2, #20]
 2357 0c92 1378     		ldrb	r3, [r2]
 2358 0c94 8343     		bic	r3, r3, r0
 2359 0c96 311C     		mov	r1, r6
 2360 0c98 0140     		and	r1, r1, r0
 2361 0c9a 0B43     		orr	r3, r3, r1
 2362 0c9c 1370     		strb	r3, [r2]
 2363 0c9e 2840     		and	r0, r0, r5
 2364 0ca0 1378     		ldrb	r3, [r2]
 2365 0ca2 0221     		mov	r1, #2
 2366 0ca4 8B43     		bic	r3, r3, r1
 2367 0ca6 4000     		lsl	r0, r0, #1
 2368 0ca8 0343     		orr	r3, r3, r0
 2369 0caa 1370     		strb	r3, [r2]
 2370 0cac 4B46     		mov	r3, r9
 2371 0cae 61CA     		ldmia	r2!, {r0, r5, r6}
 2372 0cb0 61C3     		stmia	r3!, {r0, r5, r6}
 2373              	.LVL307:
 2374 0cb2 32CA     		ldmia	r2!, {r1, r4, r5}
 2375 0cb4 32C3     		stmia	r3!, {r1, r4, r5}
 2376 0cb6 41CA     		ldmia	r2!, {r0, r6}
 2377 0cb8 41C3     		stmia	r3!, {r0, r6}
 2378 0cba 0120     		mov	r0, #1
 2379 0cbc 04E0     		b	.L154
 2380              	.LVL308:
 2381              	.L136:
 2382              		.loc 1 757 0
 2383 0cbe 0749     		ldr	r1, .L163
 2384 0cc0 0520     		mov	r0, #5
 2385              	.LVL309:
 2386 0cc2 FFF7FEFF 		bl	ppp_trace
 2387              	.LVL310:
 2388 0cc6 0020     		mov	r0, #0
 2389              	.LVL311:
 2390              	.L154:
 2391              		.loc 1 759 0
 2392 0cc8 24B0     		add	sp, sp, #144
 2393              		@ sp needed for prologue
 2394              	.LVL312:
 2395              	.LVL313:
 2396              	.LVL314:
 2397              	.LVL315:
 2398 0cca 3CBC     		pop	{r2, r3, r4, r5}
 2399 0ccc 9046     		mov	r8, r2
 2400 0cce 9946     		mov	r9, r3
 2401 0cd0 A246     		mov	sl, r4
 2402 0cd2 AB46     		mov	fp, r5
 2403 0cd4 F0BC     		pop	{r4, r5, r6, r7}
 2404 0cd6 02BC     		pop	{r1}
 2405 0cd8 0847     		bx	r1
 2406              	.L164:
 2407 0cda C046     		.align	2
 2408              	.L163:
 2409 0cdc 10020000 		.word	.LC68
 2410              	.LFE301:
 2412              		.section	.rodata.str1.4
 2413 022f 00       		.align	2
 2414              	.LC71:
 2415 0230 69706370 		.ascii	"ipcp_ackci: received bad Ack!\012\000"
 2415      5F61636B 
 2415      63693A20 
 2415      72656365 
 2415      69766564 
 2416              		.text
 2417              		.align	2
 2418              		.code	16
 2419              		.thumb_func
 2421              	ipcp_ackci:
 2422              	.LFB300:
 2423              		.loc 1 442 0
 2424 0ce0 70B5     		push	{r4, r5, r6, lr}
 2425              	.LCFI19:
 2426              	.LVL316:
 2427 0ce2 151C     		mov	r5, r2
 2428              		.loc 1 443 0
 2429 0ce4 0368     		ldr	r3, [r0]
 2430 0ce6 5B01     		lsl	r3, r3, #5
 2431 0ce8 5F4A     		ldr	r2, .L179
 2432              	.LVL317:
 2433 0cea D418     		add	r4, r2, r3
 2434              	.LVL318:
 2435              		.loc 1 528 0
 2436 0cec 2378     		ldrb	r3, [r4]
 2437 0cee DB07     		lsl	r3, r3, #31
 2438 0cf0 DB0F     		lsr	r3, r3, #31
 2439 0cf2 1B06     		lsl	r3, r3, #24
 2440 0cf4 002B     		cmp	r3, #0
 2441 0cf6 43D0     		beq	.L166
 2442              	.LBB9:
 2443 0cf8 2378     		ldrb	r3, [r4]
 2444 0cfa 9B07     		lsl	r3, r3, #30
 2445 0cfc DA0F     		lsr	r2, r3, #31
 2446 0cfe 002A     		cmp	r2, #0
 2447 0d00 01D1     		bne	.L167
 2448 0d02 0620     		mov	r0, #6
 2449              	.LVL319:
 2450 0d04 00E0     		b	.L168
 2451              	.LVL320:
 2452              	.L167:
 2453 0d06 0A20     		mov	r0, #10
 2454              	.LVL321:
 2455              	.L168:
 2456 0d08 2D1A     		sub	r5, r5, r0
 2457 0d0a 00D5     		bpl	.LCB2632
 2458 0d0c A4E0     		b	.L169	@long jump
 2459              	.LCB2632:
 2460 0d0e 0E78     		ldrb	r6, [r1]
 2461 0d10 0131     		add	r1, r1, #1
 2462              	.LVL322:
 2463 0d12 0B78     		ldrb	r3, [r1]
 2464 0d14 9842     		cmp	r0, r3
 2465 0d16 00D0     		beq	.LCB2641
 2466 0d18 9EE0     		b	.L169	@long jump
 2467              	.LCB2641:
 2468 0d1a 002A     		cmp	r2, #0
 2469 0d1c 01D1     		bne	.L170
 2470 0d1e 0323     		mov	r3, #3
 2471 0d20 00E0     		b	.L171
 2472              	.L170:
 2473 0d22 0123     		mov	r3, #1
 2474              	.L171:
 2475 0d24 9E42     		cmp	r6, r3
 2476 0d26 00D0     		beq	.LCB2655
 2477 0d28 96E0     		b	.L169	@long jump
 2478              	.LCB2655:
 2479 0d2a 4B1C     		add	r3, r1, #1
 2480              	.LVL323:
 2481 0d2c 1A78     		ldrb	r2, [r3]
 2482              	.LVL324:
 2483 0d2e 0133     		add	r3, r3, #1
 2484              	.LVL325:
 2485 0d30 1202     		lsl	r2, r2, #8
 2486              	.LVL326:
 2487 0d32 1878     		ldrb	r0, [r3]
 2488              	.LVL327:
 2489 0d34 1043     		orr	r0, r0, r2
 2490              	.LVL328:
 2491 0d36 0133     		add	r3, r3, #1
 2492              	.LVL329:
 2493 0d38 0002     		lsl	r0, r0, #8
 2494              	.LVL330:
 2495 0d3a 1A78     		ldrb	r2, [r3]
 2496 0d3c 1043     		orr	r0, r0, r2
 2497              	.LVL331:
 2498 0d3e 5E1C     		add	r6, r3, #1
 2499              	.LVL332:
 2500 0d40 0002     		lsl	r0, r0, #8
 2501              	.LVL333:
 2502 0d42 3378     		ldrb	r3, [r6]
 2503 0d44 1843     		orr	r0, r0, r3
 2504              	.LVL334:
 2505 0d46 FFF7FEFF 		bl	htonl
 2506 0d4a A368     		ldr	r3, [r4, #8]
 2507 0d4c 9842     		cmp	r0, r3
 2508 0d4e 00D0     		beq	.LCB2685
 2509 0d50 82E0     		b	.L169	@long jump
 2510              	.LCB2685:
 2511              	.LVL335:
 2512 0d52 711C     		add	r1, r6, #1
 2513              	.LVL336:
 2514 0d54 2378     		ldrb	r3, [r4]
 2515 0d56 9A07     		lsl	r2, r3, #30
 2516 0d58 12D5     		bpl	.L166
 2517 0d5a 0B78     		ldrb	r3, [r1]
 2518              	.LVL337:
 2519 0d5c 4A1C     		add	r2, r1, #1
 2520              	.LVL338:
 2521 0d5e 1B02     		lsl	r3, r3, #8
 2522              	.LVL339:
 2523 0d60 1078     		ldrb	r0, [r2]
 2524              	.LVL340:
 2525 0d62 1843     		orr	r0, r0, r3
 2526              	.LVL341:
 2527 0d64 0132     		add	r2, r2, #1
 2528              	.LVL342:
 2529 0d66 0002     		lsl	r0, r0, #8
 2530              	.LVL343:
 2531 0d68 1378     		ldrb	r3, [r2]
 2532 0d6a 1843     		orr	r0, r0, r3
 2533              	.LVL344:
 2534 0d6c 561C     		add	r6, r2, #1
 2535              	.LVL345:
 2536 0d6e 0002     		lsl	r0, r0, #8
 2537              	.LVL346:
 2538 0d70 3378     		ldrb	r3, [r6]
 2539 0d72 1843     		orr	r0, r0, r3
 2540              	.LVL347:
 2541 0d74 FFF7FEFF 		bl	htonl
 2542 0d78 E368     		ldr	r3, [r4, #12]
 2543 0d7a 9842     		cmp	r0, r3
 2544 0d7c 6CD1     		bne	.L169
 2545              	.LVL348:
 2546 0d7e 711C     		add	r1, r6, #1
 2547              	.LVL349:
 2548              	.L166:
 2549              	.LBE9:
 2550              		.loc 1 531 0
 2551 0d80 2378     		ldrb	r3, [r4]
 2552 0d82 9A06     		lsl	r2, r3, #26
 2553 0d84 26D5     		bpl	.L172
 2554              	.LBB10:
 2555 0d86 2378     		ldrb	r3, [r4]
 2556 0d88 5B06     		lsl	r3, r3, #25
 2557 0d8a DE0F     		lsr	r6, r3, #31
 2558 0d8c 002E     		cmp	r6, #0
 2559 0d8e 01D1     		bne	.L173
 2560 0d90 0620     		mov	r0, #6
 2561              	.LVL350:
 2562 0d92 00E0     		b	.L174
 2563              	.LVL351:
 2564              	.L173:
 2565 0d94 0420     		mov	r0, #4
 2566              	.LVL352:
 2567              	.L174:
 2568 0d96 2D1A     		sub	r5, r5, r0
 2569 0d98 5ED4     		bmi	.L169
 2570 0d9a 4A1C     		add	r2, r1, #1
 2571              	.LVL353:
 2572 0d9c 1378     		ldrb	r3, [r2]
 2573 0d9e 9842     		cmp	r0, r3
 2574 0da0 5AD1     		bne	.L169
 2575 0da2 0B78     		ldrb	r3, [r1]
 2576 0da4 022B     		cmp	r3, #2
 2577 0da6 57D1     		bne	.L169
 2578              	.LVL354:
 2579 0da8 0132     		add	r2, r2, #1
 2580              	.LVL355:
 2581 0daa 1378     		ldrb	r3, [r2]
 2582              	.LVL356:
 2583 0dac 501C     		add	r0, r2, #1
 2584              	.LVL357:
 2585 0dae 1B02     		lsl	r3, r3, #8
 2586              	.LVL358:
 2587 0db0 0278     		ldrb	r2, [r0]
 2588 0db2 6188     		ldrh	r1, [r4, #2]
 2589 0db4 1343     		orr	r3, r3, r2
 2590              	.LVL359:
 2591 0db6 9942     		cmp	r1, r3
 2592 0db8 4ED1     		bne	.L169
 2593 0dba 411C     		add	r1, r0, #1
 2594              	.LVL360:
 2595 0dbc 002E     		cmp	r6, #0
 2596 0dbe 09D1     		bne	.L172
 2597 0dc0 2279     		ldrb	r2, [r4, #4]
 2598 0dc2 0B78     		ldrb	r3, [r1]
 2599 0dc4 9A42     		cmp	r2, r3
 2600 0dc6 47D1     		bne	.L169
 2601 0dc8 0131     		add	r1, r1, #1
 2602              	.LVL361:
 2603 0dca 6279     		ldrb	r2, [r4, #5]
 2604 0dcc 0B78     		ldrb	r3, [r1]
 2605 0dce 9A42     		cmp	r2, r3
 2606 0dd0 42D1     		bne	.L169
 2607 0dd2 0131     		add	r1, r1, #1
 2608              	.LVL362:
 2609              	.L172:
 2610              	.LBE10:
 2611              		.loc 1 534 0
 2612 0dd4 6378     		ldrb	r3, [r4, #1]
 2613 0dd6 9A07     		lsl	r2, r3, #30
 2614 0dd8 1CD5     		bpl	.L175
 2615              	.LBB11:
 2616 0dda 063D     		sub	r5, r5, #6
 2617 0ddc 3CD4     		bmi	.L169
 2618 0dde 481C     		add	r0, r1, #1
 2619              	.LVL363:
 2620 0de0 0378     		ldrb	r3, [r0]
 2621 0de2 062B     		cmp	r3, #6
 2622 0de4 38D1     		bne	.L169
 2623 0de6 0B78     		ldrb	r3, [r1]
 2624 0de8 812B     		cmp	r3, #129
 2625 0dea 35D1     		bne	.L169
 2626              	.LVL364:
 2627 0dec 431C     		add	r3, r0, #1
 2628              	.LVL365:
 2629 0dee 1A78     		ldrb	r2, [r3]
 2630              	.LVL366:
 2631 0df0 0133     		add	r3, r3, #1
 2632              	.LVL367:
 2633 0df2 1202     		lsl	r2, r2, #8
 2634              	.LVL368:
 2635 0df4 1878     		ldrb	r0, [r3]
 2636 0df6 1043     		orr	r0, r0, r2
 2637              	.LVL369:
 2638 0df8 0133     		add	r3, r3, #1
 2639              	.LVL370:
 2640 0dfa 0002     		lsl	r0, r0, #8
 2641              	.LVL371:
 2642 0dfc 1A78     		ldrb	r2, [r3]
 2643 0dfe 1043     		orr	r0, r0, r2
 2644              	.LVL372:
 2645 0e00 5E1C     		add	r6, r3, #1
 2646              	.LVL373:
 2647 0e02 0002     		lsl	r0, r0, #8
 2648              	.LVL374:
 2649 0e04 3378     		ldrb	r3, [r6]
 2650 0e06 1843     		orr	r0, r0, r3
 2651              	.LVL375:
 2652 0e08 FFF7FEFF 		bl	htonl
 2653 0e0c 2369     		ldr	r3, [r4, #16]
 2654 0e0e 9842     		cmp	r0, r3
 2655 0e10 22D1     		bne	.L169
 2656              	.LVL376:
 2657 0e12 711C     		add	r1, r6, #1
 2658              	.LVL377:
 2659              	.L175:
 2660              	.LBE11:
 2661              		.loc 1 536 0
 2662 0e14 6378     		ldrb	r3, [r4, #1]
 2663 0e16 5A07     		lsl	r2, r3, #29
 2664 0e18 1AD5     		bpl	.L176
 2665              	.LBB12:
 2666 0e1a 063D     		sub	r5, r5, #6
 2667 0e1c 1CD4     		bmi	.L169
 2668 0e1e 481C     		add	r0, r1, #1
 2669              	.LVL378:
 2670 0e20 0378     		ldrb	r3, [r0]
 2671 0e22 062B     		cmp	r3, #6
 2672 0e24 18D1     		bne	.L169
 2673 0e26 0B78     		ldrb	r3, [r1]
 2674 0e28 832B     		cmp	r3, #131
 2675 0e2a 15D1     		bne	.L169
 2676              	.LVL379:
 2677 0e2c 431C     		add	r3, r0, #1
 2678              	.LVL380:
 2679 0e2e 1A78     		ldrb	r2, [r3]
 2680              	.LVL381:
 2681 0e30 0133     		add	r3, r3, #1
 2682              	.LVL382:
 2683 0e32 1202     		lsl	r2, r2, #8
 2684              	.LVL383:
 2685 0e34 1878     		ldrb	r0, [r3]
 2686 0e36 1043     		orr	r0, r0, r2
 2687              	.LVL384:
 2688 0e38 0133     		add	r3, r3, #1
 2689              	.LVL385:
 2690 0e3a 0002     		lsl	r0, r0, #8
 2691              	.LVL386:
 2692 0e3c 1A78     		ldrb	r2, [r3]
 2693 0e3e 1043     		orr	r0, r0, r2
 2694              	.LVL387:
 2695 0e40 0002     		lsl	r0, r0, #8
 2696              	.LVL388:
 2697 0e42 5B78     		ldrb	r3, [r3, #1]
 2698              	.LVL389:
 2699 0e44 1843     		orr	r0, r0, r3
 2700              	.LVL390:
 2701 0e46 FFF7FEFF 		bl	htonl
 2702 0e4a 6369     		ldr	r3, [r4, #20]
 2703 0e4c 9842     		cmp	r0, r3
 2704 0e4e 03D1     		bne	.L169
 2705              	.LVL391:
 2706              	.L176:
 2707              	.LBE12:
 2708              		.loc 1 541 0
 2709 0e50 002D     		cmp	r5, #0
 2710 0e52 01D1     		bne	.L169
 2711              		.loc 1 542 0
 2712 0e54 0120     		mov	r0, #1
 2713              	.LVL392:
 2714 0e56 04E0     		b	.L177
 2715              	.LVL393:
 2716              	.L169:
 2717              		.loc 1 547 0
 2718 0e58 0449     		ldr	r1, .L179+4
 2719 0e5a 0520     		mov	r0, #5
 2720              	.LVL394:
 2721 0e5c FFF7FEFF 		bl	ppp_trace
 2722              	.LVL395:
 2723 0e60 0020     		mov	r0, #0
 2724              	.LVL396:
 2725              	.L177:
 2726              		.loc 1 549 0
 2727              		@ sp needed for prologue
 2728              	.LVL397:
 2729              	.LVL398:
 2730              	.LVL399:
 2731 0e62 70BC     		pop	{r4, r5, r6}
 2732 0e64 02BC     		pop	{r1}
 2733 0e66 0847     		bx	r1
 2734              	.L180:
 2735              		.align	2
 2736              	.L179:
 2737 0e68 00000000 		.word	ipcp_gotoptions
 2738 0e6c 30020000 		.word	.LC71
 2739              	.LFE300:
 2741              		.align	2
 2742              		.code	16
 2743              		.thumb_func
 2745              	ipcp_addci:
 2746              	.LFB299:
 2747              		.loc 1 365 0
 2748 0e70 F0B5     		push	{r4, r5, r6, r7, lr}
 2749              	.LCFI20:
 2750 0e72 4746     		mov	r7, r8
 2751 0e74 80B4     		push	{r7}
 2752              	.LCFI21:
 2753              	.LVL400:
 2754 0e76 0C1C     		mov	r4, r1
 2755 0e78 9046     		mov	r8, r2
 2756              		.loc 1 366 0
 2757 0e7a 0368     		ldr	r3, [r0]
 2758 0e7c 5B01     		lsl	r3, r3, #5
 2759 0e7e 574A     		ldr	r2, .L199
 2760              	.LVL401:
 2761 0e80 D518     		add	r5, r2, r3
 2762              	.LVL402:
 2763              		.loc 1 367 0
 2764 0e82 4246     		mov	r2, r8
 2765 0e84 1668     		ldr	r6, [r2]
 2766              	.LVL403:
 2767              		.loc 1 419 0
 2768 0e86 2B78     		ldrb	r3, [r5]
 2769 0e88 DB07     		lsl	r3, r3, #31
 2770 0e8a DB0F     		lsr	r3, r3, #31
 2771 0e8c 1B06     		lsl	r3, r3, #24
 2772 0e8e 002B     		cmp	r3, #0
 2773 0e90 37D0     		beq	.L182
 2774              	.LVL404:
 2775              	.LBB13:
 2776 0e92 2B78     		ldrb	r3, [r5]
 2777 0e94 9B07     		lsl	r3, r3, #30
 2778 0e96 DB0F     		lsr	r3, r3, #31
 2779 0e98 002B     		cmp	r3, #0
 2780 0e9a 01D1     		bne	.L183
 2781 0e9c 0627     		mov	r7, #6
 2782              	.LVL405:
 2783 0e9e 00E0     		b	.L184
 2784              	.LVL406:
 2785              	.L183:
 2786 0ea0 0A27     		mov	r7, #10
 2787              	.LVL407:
 2788              	.L184:
 2789 0ea2 B742     		cmp	r7, r6
 2790 0ea4 29DC     		bgt	.L185
 2791              	.LBB14:
 2792 0ea6 002B     		cmp	r3, #0
 2793 0ea8 01D1     		bne	.L186
 2794 0eaa 0323     		mov	r3, #3
 2795 0eac 00E0     		b	.L187
 2796              	.L186:
 2797 0eae 0123     		mov	r3, #1
 2798              	.L187:
 2799 0eb0 2370     		strb	r3, [r4]
 2800 0eb2 0134     		add	r4, r4, #1
 2801              	.LVL408:
 2802 0eb4 2770     		strb	r7, [r4]
 2803 0eb6 0134     		add	r4, r4, #1
 2804              	.LVL409:
 2805 0eb8 A868     		ldr	r0, [r5, #8]
 2806              	.LVL410:
 2807 0eba FFF7FEFF 		bl	ntohl
 2808 0ebe 030E     		lsr	r3, r0, #24
 2809              	.LVL411:
 2810 0ec0 2370     		strb	r3, [r4]
 2811 0ec2 0134     		add	r4, r4, #1
 2812              	.LVL412:
 2813 0ec4 030C     		lsr	r3, r0, #16
 2814 0ec6 2370     		strb	r3, [r4]
 2815 0ec8 0134     		add	r4, r4, #1
 2816              	.LVL413:
 2817 0eca 030A     		lsr	r3, r0, #8
 2818 0ecc 2370     		strb	r3, [r4]
 2819 0ece 0134     		add	r4, r4, #1
 2820              	.LVL414:
 2821 0ed0 2070     		strb	r0, [r4]
 2822 0ed2 0134     		add	r4, r4, #1
 2823              	.LVL415:
 2824 0ed4 2B78     		ldrb	r3, [r5]
 2825 0ed6 9A07     		lsl	r2, r3, #30
 2826 0ed8 0DD5     		bpl	.L188
 2827 0eda E868     		ldr	r0, [r5, #12]
 2828              	.LVL416:
 2829 0edc FFF7FEFF 		bl	ntohl
 2830 0ee0 030E     		lsr	r3, r0, #24
 2831              	.LVL417:
 2832 0ee2 2370     		strb	r3, [r4]
 2833 0ee4 631C     		add	r3, r4, #1
 2834              	.LVL418:
 2835 0ee6 020C     		lsr	r2, r0, #16
 2836 0ee8 1A70     		strb	r2, [r3]
 2837 0eea 0133     		add	r3, r3, #1
 2838              	.LVL419:
 2839 0eec 020A     		lsr	r2, r0, #8
 2840 0eee 1A70     		strb	r2, [r3]
 2841 0ef0 0133     		add	r3, r3, #1
 2842              	.LVL420:
 2843 0ef2 1870     		strb	r0, [r3]
 2844 0ef4 5C1C     		add	r4, r3, #1
 2845              	.LVL421:
 2846              	.L188:
 2847 0ef6 F61B     		sub	r6, r6, r7
 2848 0ef8 03E0     		b	.L182
 2849              	.LVL422:
 2850              	.L185:
 2851              	.LBE14:
 2852 0efa 2B78     		ldrb	r3, [r5]
 2853 0efc 0122     		mov	r2, #1
 2854 0efe 9343     		bic	r3, r3, r2
 2855 0f00 2B70     		strb	r3, [r5]
 2856              	.LVL423:
 2857              	.L182:
 2858              	.LBE13:
 2859              		.loc 1 422 0
 2860 0f02 2B78     		ldrb	r3, [r5]
 2861 0f04 9A06     		lsl	r2, r3, #26
 2862 0f06 22D5     		bpl	.L189
 2863              	.LBB15:
 2864 0f08 2B78     		ldrb	r3, [r5]
 2865 0f0a 5A06     		lsl	r2, r3, #25
 2866 0f0c 01D4     		bmi	.L190
 2867 0f0e 0620     		mov	r0, #6
 2868              	.LVL424:
 2869 0f10 00E0     		b	.L191
 2870              	.LVL425:
 2871              	.L190:
 2872 0f12 0420     		mov	r0, #4
 2873              	.LVL426:
 2874              	.L191:
 2875 0f14 B042     		cmp	r0, r6
 2876 0f16 16DC     		bgt	.L192
 2877 0f18 0223     		mov	r3, #2
 2878 0f1a 2370     		strb	r3, [r4]
 2879 0f1c 621C     		add	r2, r4, #1
 2880              	.LVL427:
 2881 0f1e 1070     		strb	r0, [r2]
 2882 0f20 0132     		add	r2, r2, #1
 2883              	.LVL428:
 2884 0f22 6B88     		ldrh	r3, [r5, #2]
 2885 0f24 1B0A     		lsr	r3, r3, #8
 2886 0f26 1370     		strb	r3, [r2]
 2887 0f28 0132     		add	r2, r2, #1
 2888              	.LVL429:
 2889 0f2a 6B88     		ldrh	r3, [r5, #2]
 2890 0f2c 1370     		strb	r3, [r2]
 2891 0f2e 541C     		add	r4, r2, #1
 2892              	.LVL430:
 2893 0f30 2B78     		ldrb	r3, [r5]
 2894 0f32 5A06     		lsl	r2, r3, #25
 2895 0f34 05D4     		bmi	.L193
 2896 0f36 2B79     		ldrb	r3, [r5, #4]
 2897 0f38 2370     		strb	r3, [r4]
 2898 0f3a 621C     		add	r2, r4, #1
 2899              	.LVL431:
 2900 0f3c 6B79     		ldrb	r3, [r5, #5]
 2901 0f3e 1370     		strb	r3, [r2]
 2902 0f40 541C     		add	r4, r2, #1
 2903              	.LVL432:
 2904              	.L193:
 2905 0f42 361A     		sub	r6, r6, r0
 2906 0f44 03E0     		b	.L189
 2907              	.LVL433:
 2908              	.L192:
 2909 0f46 2B78     		ldrb	r3, [r5]
 2910 0f48 2022     		mov	r2, #32
 2911 0f4a 9343     		bic	r3, r3, r2
 2912 0f4c 2B70     		strb	r3, [r5]
 2913              	.LVL434:
 2914              	.L189:
 2915              	.LBE15:
 2916              		.loc 1 425 0
 2917 0f4e 6B78     		ldrb	r3, [r5, #1]
 2918 0f50 9A07     		lsl	r2, r3, #30
 2919 0f52 1CD5     		bpl	.L194
 2920 0f54 052E     		cmp	r6, #5
 2921 0f56 16DD     		ble	.L195
 2922              	.LBB16:
 2923 0f58 7F23     		mov	r3, #127
 2924 0f5a 5B42     		neg	r3, r3
 2925 0f5c 2370     		strb	r3, [r4]
 2926 0f5e 0134     		add	r4, r4, #1
 2927              	.LVL435:
 2928 0f60 0623     		mov	r3, #6
 2929 0f62 2370     		strb	r3, [r4]
 2930 0f64 0134     		add	r4, r4, #1
 2931              	.LVL436:
 2932 0f66 2869     		ldr	r0, [r5, #16]
 2933              	.LVL437:
 2934 0f68 FFF7FEFF 		bl	ntohl
 2935 0f6c 030E     		lsr	r3, r0, #24
 2936              	.LVL438:
 2937 0f6e 2370     		strb	r3, [r4]
 2938 0f70 0134     		add	r4, r4, #1
 2939              	.LVL439:
 2940 0f72 030C     		lsr	r3, r0, #16
 2941 0f74 2370     		strb	r3, [r4]
 2942 0f76 0134     		add	r4, r4, #1
 2943              	.LVL440:
 2944 0f78 030A     		lsr	r3, r0, #8
 2945 0f7a 2370     		strb	r3, [r4]
 2946 0f7c 0134     		add	r4, r4, #1
 2947              	.LVL441:
 2948 0f7e 2070     		strb	r0, [r4]
 2949 0f80 0134     		add	r4, r4, #1
 2950              	.LVL442:
 2951 0f82 063E     		sub	r6, r6, #6
 2952 0f84 03E0     		b	.L194
 2953              	.LVL443:
 2954              	.L195:
 2955              	.LBE16:
 2956 0f86 6B78     		ldrb	r3, [r5, #1]
 2957 0f88 0222     		mov	r2, #2
 2958 0f8a 9343     		bic	r3, r3, r2
 2959 0f8c 6B70     		strb	r3, [r5, #1]
 2960              	.LVL444:
 2961              	.L194:
 2962              		.loc 1 427 0
 2963 0f8e 6B78     		ldrb	r3, [r5, #1]
 2964 0f90 5A07     		lsl	r2, r3, #29
 2965 0f92 1AD5     		bpl	.L196
 2966 0f94 052E     		cmp	r6, #5
 2967 0f96 14DD     		ble	.L197
 2968              	.LBB17:
 2969 0f98 7D23     		mov	r3, #125
 2970 0f9a 5B42     		neg	r3, r3
 2971 0f9c 2370     		strb	r3, [r4]
 2972 0f9e 0134     		add	r4, r4, #1
 2973              	.LVL445:
 2974 0fa0 0623     		mov	r3, #6
 2975 0fa2 2370     		strb	r3, [r4]
 2976 0fa4 0134     		add	r4, r4, #1
 2977              	.LVL446:
 2978 0fa6 6869     		ldr	r0, [r5, #20]
 2979              	.LVL447:
 2980 0fa8 FFF7FEFF 		bl	ntohl
 2981 0fac 030E     		lsr	r3, r0, #24
 2982              	.LVL448:
 2983 0fae 2370     		strb	r3, [r4]
 2984 0fb0 0134     		add	r4, r4, #1
 2985              	.LVL449:
 2986 0fb2 030C     		lsr	r3, r0, #16
 2987 0fb4 2370     		strb	r3, [r4]
 2988 0fb6 0134     		add	r4, r4, #1
 2989              	.LVL450:
 2990 0fb8 030A     		lsr	r3, r0, #8
 2991 0fba 2370     		strb	r3, [r4]
 2992 0fbc 6070     		strb	r0, [r4, #1]
 2993 0fbe 063E     		sub	r6, r6, #6
 2994 0fc0 03E0     		b	.L196
 2995              	.LVL451:
 2996              	.L197:
 2997              	.LBE17:
 2998 0fc2 6B78     		ldrb	r3, [r5, #1]
 2999 0fc4 0422     		mov	r2, #4
 3000 0fc6 9343     		bic	r3, r3, r2
 3001 0fc8 6B70     		strb	r3, [r5, #1]
 3002              	.LVL452:
 3003              	.L196:
 3004              		.loc 1 429 0
 3005 0fca 4246     		mov	r2, r8
 3006 0fcc 1368     		ldr	r3, [r2]
 3007 0fce 9B1B     		sub	r3, r3, r6
 3008 0fd0 1360     		str	r3, [r2]
 3009              		.loc 1 430 0
 3010              		@ sp needed for prologue
 3011              	.LVL453:
 3012              	.LVL454:
 3013              	.LVL455:
 3014              	.LVL456:
 3015              	.LVL457:
 3016 0fd2 04BC     		pop	{r2}
 3017 0fd4 9046     		mov	r8, r2
 3018 0fd6 F0BC     		pop	{r4, r5, r6, r7}
 3019 0fd8 01BC     		pop	{r0}
 3020 0fda 0047     		bx	r0
 3021              	.L200:
 3022              		.align	2
 3023              	.L199:
 3024 0fdc 00000000 		.word	ipcp_gotoptions
 3025              	.LFE299:
 3027              		.section	.rodata.str1.4
 3028 024f 00       		.align	2
 3029              	.LC78:
 3030 0250 69706370 		.ascii	"ipcp_reqci: bad CI length!\012\000"
 3030      5F726571 
 3030      63693A20 
 3030      62616420 
 3030      4349206C 
 3031              		.align	2
 3032              	.LC80:
 3033 026c 69706370 		.ascii	"ipcp_reqci: Reject ADDR not allowed\012\000"
 3033      5F726571 
 3033      63693A20 
 3033      52656A65 
 3033      63742041 
 3034 0291 000000   		.align	2
 3035              	.LC82:
 3036 0294 69706370 		.ascii	"ipcp_reqci: Reject ADDR bad len\012\000"
 3036      5F726571 
 3036      63693A20 
 3036      52656A65 
 3036      63742041 
 3037 02b5 000000   		.align	2
 3038              	.LC84:
 3039 02b8 69706370 		.ascii	"ipcp_reqci: Nak ADDR %s\012\000"
 3039      5F726571 
 3039      63693A20 
 3039      4E616B20 
 3039      41444452 
 3040 02d1 000000   		.align	2
 3041              	.LC86:
 3042 02d4 69706370 		.ascii	"ipcp_reqci: Reject ADDR %s\012\000"
 3042      5F726571 
 3042      63693A20 
 3042      52656A65 
 3042      63742041 
 3043              		.align	2
 3044              	.LC88:
 3045 02f0 69706370 		.ascii	"ipcp_reqci: ADDR %s\012\000"
 3045      5F726571 
 3045      63693A20 
 3045      41444452 
 3045      2025730A 
 3046 0305 000000   		.align	2
 3047              	.LC90:
 3048 0308 69706370 		.ascii	"ipcp_reqci: Rejecting DNS%d Request\012\000"
 3048      5F726571 
 3048      63693A20 
 3048      52656A65 
 3048      6374696E 
 3049 032d 000000   		.align	2
 3050              	.LC92:
 3051 0330 69706370 		.ascii	"ipcp_reqci: Naking DNS%d Request %d\012\000"
 3051      5F726571 
 3051      63693A20 
 3051      4E616B69 
 3051      6E672044 
 3052 0355 000000   		.align	2
 3053              	.LC94:
 3054 0358 69706370 		.ascii	"ipcp_reqci: received DNS%d Request\012\000"
 3054      5F726571 
 3054      63693A20 
 3054      72656365 
 3054      69766564 
 3055              		.align	2
 3056              	.LC96:
 3057 037c 69706370 		.ascii	"ipcp_reqci: received WINS%d Request\012\000"
 3057      5F726571 
 3057      63693A20 
 3057      72656365 
 3057      69766564 
 3058 03a1 000000   		.align	2
 3059              	.LC98:
 3060 03a4 69706370 		.ascii	"ipcp_reqci: Rejecting COMPRESSTYPE not allowed\012\000"
 3060      5F726571 
 3060      63693A20 
 3060      52656A65 
 3060      6374696E 
 3061              		.align	2
 3062              	.LC100:
 3063 03d4 69706370 		.ascii	"ipcp_reqci: Rejecting COMPRESSTYPE len=%d\012\000"
 3063      5F726571 
 3063      63693A20 
 3063      52656A65 
 3063      6374696E 
 3064 03ff 00       		.align	2
 3065              	.LC102:
 3066 0400 69706370 		.ascii	"ipcp_reqci: Rejecting COMPRESSTYPE %d\012\000"
 3066      5F726571 
 3066      63693A20 
 3066      52656A65 
 3066      6374696E 
 3067 0427 00       		.align	2
 3068              	.LC104:
 3069 0428 69706370 		.ascii	"ipcp_reqci: Naking VJ max slot %d\012\000"
 3069      5F726571 
 3069      63693A20 
 3069      4E616B69 
 3069      6E672056 
 3070 044b 00       		.align	2
 3071              	.LC106:
 3072 044c 69706370 		.ascii	"ipcp_reqci: Naking VJ cflag %d\012\000"
 3072      5F726571 
 3072      63693A20 
 3072      4E616B69 
 3072      6E672056 
 3073              		.align	2
 3074              	.LC108:
 3075 046c 69706370 		.ascii	"ipcp_reqci: received COMPRESSTYPE p=%d old=%d maxsl"
 3075      5F726571 
 3075      63693A20 
 3075      72656365 
 3075      69766564 
 3076 049f 6F743D25 		.ascii	"ot=%d cflag=%d\012\000"
 3076      64206366 
 3076      6C61673D 
 3076      25640A00 
 3077 04af 00       		.align	2
 3078              	.LC110:
 3079 04b0 69706370 		.ascii	"ipcp_reqci: Rejecting unknown CI type %d\012\000"
 3079      5F726571 
 3079      63693A20 
 3079      52656A65 
 3079      6374696E 
 3080 04da 0000     		.align	2
 3081              	.LC112:
 3082 04dc 69706370 		.ascii	"ipcp_reqci: Rejecting too many naks\012\000"
 3082      5F726571 
 3082      63693A20 
 3082      52656A65 
 3082      6374696E 
 3083 0501 000000   		.align	2
 3084              	.LC114:
 3085 0504 69706370 		.ascii	"ipcp_reqci: Requesting peer address\012\000"
 3085      5F726571 
 3085      63693A20 
 3085      52657175 
 3085      65737469 
 3086 0529 000000   		.align	2
 3087              	.LC116:
 3088 052c 41434B00 		.ascii	"ACK\000"
 3089              		.align	2
 3090              	.LC118:
 3091 0530 4E414B00 		.ascii	"NAK\000"
 3092              		.align	2
 3093              	.LC120:
 3094 0534 52454A00 		.ascii	"REJ\000"
 3095              		.align	2
 3096              	.LC122:
 3097 0538 69706370 		.ascii	"ipcp_reqci: returning Configure-%s\012\000"
 3097      5F726571 
 3097      63693A20 
 3097      72657475 
 3097      726E696E 
 3098              		.text
 3099              		.align	2
 3100              		.code	16
 3101              		.thumb_func
 3103              	ipcp_reqci:
 3104              	.LFB303:
 3105              		.loc 1 886 0
 3106 0fe0 F0B5     		push	{r4, r5, r6, r7, lr}
 3107              	.LCFI22:
 3108 0fe2 5F46     		mov	r7, fp
 3109 0fe4 5646     		mov	r6, sl
 3110 0fe6 4D46     		mov	r5, r9
 3111 0fe8 4446     		mov	r4, r8
 3112 0fea F0B4     		push	{r4, r5, r6, r7}
 3113              	.LCFI23:
 3114              	.LVL458:
 3115 0fec 95B0     		sub	sp, sp, #84
 3116              	.LCFI24:
 3117 0fee 0891     		str	r1, [sp, #32]
 3118 0ff0 0792     		str	r2, [sp, #28]
 3119 0ff2 0693     		str	r3, [sp, #24]
 3120              		.loc 1 887 0
 3121 0ff4 0168     		ldr	r1, [r0]
 3122              	.LVL459:
 3123 0ff6 4A01     		lsl	r2, r1, #5
 3124              	.LVL460:
 3125 0ff8 D24B     		ldr	r3, .L256
 3126              	.LVL461:
 3127 0ffa 9B18     		add	r3, r3, r2
 3128 0ffc 0993     		str	r3, [sp, #36]
 3129              	.LVL462:
 3130              		.loc 1 888 0
 3131 0ffe D24B     		ldr	r3, .L256+4
 3132 1000 9B18     		add	r3, r3, r2
 3133 1002 0A93     		str	r3, [sp, #40]
 3134              	.LVL463:
 3135              		.loc 1 889 0
 3136 1004 D14B     		ldr	r3, .L256+8
 3137 1006 9B18     		add	r3, r3, r2
 3138 1008 0B93     		str	r3, [sp, #44]
 3139              	.LVL464:
 3140              		.loc 1 904 0
 3141 100a 0798     		ldr	r0, [sp, #28]
 3142              	.LVL465:
 3143 100c 0568     		ldr	r5, [r0]
 3144              	.LVL466:
 3145              		.loc 1 908 0
 3146 100e D04A     		ldr	r2, .L256+12
 3147 1010 8900     		lsl	r1, r1, #2
 3148 1012 0123     		mov	r3, #1
 3149 1014 8B50     		str	r3, [r1, r2]
 3150              		.loc 1 913 0
 3151 1016 0022     		mov	r2, #0
 3152 1018 0A9B     		ldr	r3, [sp, #40]
 3153 101a 04C3     		stmia	r3!, {r2}
 3154 101c 04C3     		stmia	r3!, {r2}
 3155 101e 04C3     		stmia	r3!, {r2}
 3156 1020 04C3     		stmia	r3!, {r2}
 3157 1022 04C3     		stmia	r3!, {r2}
 3158 1024 04C3     		stmia	r3!, {r2}
 3159 1026 04C3     		stmia	r3!, {r2}
 3160 1028 1A60     		str	r2, [r3]
 3161              		.loc 1 919 0
 3162 102a 002D     		cmp	r5, #0
 3163 102c 03D1     		bne	.L202
 3164              	.LVL467:
 3165 102e 0899     		ldr	r1, [sp, #32]
 3166 1030 8846     		mov	r8, r1
 3167              	.LVL468:
 3168 1032 0225     		mov	r5, #2
 3169              	.LVL469:
 3170 1034 3FE2     		b	.L203
 3171              	.LVL470:
 3172              	.L202:
 3173 1036 089E     		ldr	r6, [sp, #32]
 3174              	.LVL471:
 3175 1038 B046     		mov	r8, r6
 3176              	.LVL472:
 3177 103a 0222     		mov	r2, #2
 3178 103c 9346     		mov	fp, r2
 3179              	.LVL473:
 3180              		.loc 1 1166 0
 3181 103e 0596     		str	r6, [sp, #20]
 3182              		.loc 1 1153 0
 3183 1040 C44B     		ldr	r3, .L256+16
 3184              	.LVL474:
 3185 1042 0493     		str	r3, [sp, #16]
 3186              		.loc 1 925 0
 3187 1044 C448     		ldr	r0, .L256+20
 3188 1046 0390     		str	r0, [sp, #12]
 3189              		.loc 1 1070 0
 3190 1048 C449     		ldr	r1, .L256+24
 3191 104a 0291     		str	r1, [sp, #8]
 3192              	.LVL475:
 3193              	.L245:
 3194              		.loc 1 922 0
 3195 104c 012D     		cmp	r5, #1
 3196 104e 06DD     		ble	.L204
 3197 1050 701C     		add	r0, r6, #1
 3198 1052 0278     		ldrb	r2, [r0]
 3199 1054 012A     		cmp	r2, #1
 3200 1056 02D9     		bls	.L204
 3201 1058 141C     		mov	r4, r2
 3202              	.LVL476:
 3203 105a AA42     		cmp	r2, r5
 3204 105c 09DD     		ble	.L205
 3205              	.LVL477:
 3206              	.L204:
 3207              		.loc 1 925 0
 3208 105e 0520     		mov	r0, #5
 3209 1060 0399     		ldr	r1, [sp, #12]
 3210 1062 FFF7FEFF 		bl	ppp_trace
 3211              		.loc 1 927 0
 3212 1066 2B04     		lsl	r3, r5, #16
 3213 1068 1F0C     		lsr	r7, r3, #16
 3214              	.LVL478:
 3215 106a 0C96     		str	r6, [sp, #48]
 3216 106c 0424     		mov	r4, #4
 3217 106e 0025     		mov	r5, #0
 3218 1070 F4E1     		b	.L206
 3219              	.LVL479:
 3220              	.L205:
 3221              		.loc 1 931 0
 3222 1072 3178     		ldrb	r1, [r6]
 3223 1074 0B1C     		mov	r3, r1
 3224              	.LVL480:
 3225              		.loc 1 932 0
 3226 1076 171C     		mov	r7, r2
 3227 1078 0130     		add	r0, r0, #1
 3228 107a 8246     		mov	sl, r0
 3229              		.loc 1 933 0
 3230 107c AD1A     		sub	r5, r5, r2
 3231              		.loc 1 934 0
 3232 107e B218     		add	r2, r6, r2
 3233 1080 0C92     		str	r2, [sp, #48]
 3234              	.LVL481:
 3235              		.loc 1 936 0
 3236 1082 8029     		cmp	r1, #128
 3237 1084 00D1     		bne	.LCB3494
 3238 1086 E9E0     		b	.L210	@long jump
 3239              	.LCB3494:
 3240 1088 8029     		cmp	r1, #128
 3241 108a 06D8     		bhi	.L212
 3242 108c 0229     		cmp	r1, #2
 3243 108e 00D1     		bne	.LCB3498
 3244 1090 2AE1     		b	.L208	@long jump
 3245              	.LCB3498:
 3246 1092 0329     		cmp	r1, #3
 3247 1094 00D0     		beq	.LCB3500
 3248 1096 D4E1     		b	.L207	@long jump
 3249              	.LCB3500:
 3250 1098 08E0     		b	.L255
 3251              	.L212:
 3252 109a 8229     		cmp	r1, #130
 3253 109c 00D1     		bne	.LCB3506
 3254 109e DDE0     		b	.L210	@long jump
 3255              	.LCB3506:
 3256 10a0 8229     		cmp	r1, #130
 3257 10a2 7DD3     		bcc	.L211
 3258 10a4 8329     		cmp	r1, #131
 3259 10a6 00D0     		beq	.LCB3510
 3260 10a8 CBE1     		b	.L207	@long jump
 3261              	.LCB3510:
 3262 10aa 79E0     		b	.L211
 3263              	.L255:
 3264              		.loc 1 1000 0
 3265 10ac 0B98     		ldr	r0, [sp, #44]
 3266 10ae 0378     		ldrb	r3, [r0]
 3267              	.LVL482:
 3268 10b0 DB07     		lsl	r3, r3, #31
 3269 10b2 DB0F     		lsr	r3, r3, #31
 3270 10b4 1B06     		lsl	r3, r3, #24
 3271 10b6 002B     		cmp	r3, #0
 3272 10b8 05D1     		bne	.L213
 3273              	.LVL483:
 3274              		.loc 1 1001 0
 3275 10ba A949     		ldr	r1, .L256+28
 3276 10bc 0520     		mov	r0, #5
 3277 10be FFF7FEFF 		bl	ppp_trace
 3278 10c2 0424     		mov	r4, #4
 3279              	.LVL484:
 3280 10c4 CAE1     		b	.L206
 3281              	.LVL485:
 3282              	.L213:
 3283              		.loc 1 1004 0
 3284 10c6 062C     		cmp	r4, #6
 3285 10c8 05D0     		beq	.L214
 3286              	.LVL486:
 3287              		.loc 1 1005 0
 3288 10ca A649     		ldr	r1, .L256+32
 3289 10cc 0520     		mov	r0, #5
 3290 10ce FFF7FEFF 		bl	ppp_trace
 3291 10d2 0424     		mov	r4, #4
 3292              	.LVL487:
 3293 10d4 C2E1     		b	.L206
 3294              	.LVL488:
 3295              	.L214:
 3296              		.loc 1 1016 0
 3297 10d6 0121     		mov	r1, #1
 3298 10d8 5144     		add	r1, r1, sl
 3299 10da 8946     		mov	r9, r1
 3300              	.LVL489:
 3301 10dc 5246     		mov	r2, sl
 3302 10de 1378     		ldrb	r3, [r2]
 3303 10e0 1B02     		lsl	r3, r3, #8
 3304              	.LVL490:
 3305 10e2 1493     		str	r3, [sp, #80]
 3306 10e4 0878     		ldrb	r0, [r1]
 3307 10e6 1843     		orr	r0, r0, r3
 3308              	.LVL491:
 3309 10e8 0C1C     		mov	r4, r1
 3310              	.LVL492:
 3311 10ea 0134     		add	r4, r4, #1
 3312              	.LVL493:
 3313 10ec 0002     		lsl	r0, r0, #8
 3314              	.LVL494:
 3315 10ee 1490     		str	r0, [sp, #80]
 3316 10f0 2378     		ldrb	r3, [r4]
 3317 10f2 1843     		orr	r0, r0, r3
 3318              	.LVL495:
 3319 10f4 631C     		add	r3, r4, #1
 3320 10f6 0D93     		str	r3, [sp, #52]
 3321              	.LVL496:
 3322 10f8 0002     		lsl	r0, r0, #8
 3323              	.LVL497:
 3324 10fa 1490     		str	r0, [sp, #80]
 3325 10fc 1B78     		ldrb	r3, [r3]
 3326 10fe 1843     		orr	r0, r0, r3
 3327              	.LVL498:
 3328 1100 1490     		str	r0, [sp, #80]
 3329              		.loc 1 1017 0
 3330 1102 FFF7FEFF 		bl	htonl
 3331              	.LVL499:
 3332 1106 1390     		str	r0, [sp, #76]
 3333              		.loc 1 1018 0
 3334 1108 099B     		ldr	r3, [sp, #36]
 3335 110a DA68     		ldr	r2, [r3, #12]
 3336 110c 9042     		cmp	r0, r2
 3337 110e 25D0     		beq	.L215
 3338              	.LVL500:
 3339 1110 0028     		cmp	r0, #0
 3340 1112 05D0     		beq	.L216
 3341 1114 5B78     		ldrb	r3, [r3, #1]
 3342 1116 DB07     		lsl	r3, r3, #31
 3343 1118 DB0F     		lsr	r3, r3, #31
 3344 111a 1B06     		lsl	r3, r3, #24
 3345 111c 002B     		cmp	r3, #0
 3346 111e 2ED1     		bne	.L217
 3347              	.L216:
 3348              		.loc 1 1021 0
 3349 1120 0698     		ldr	r0, [sp, #24]
 3350              	.LVL501:
 3351 1122 0028     		cmp	r0, #0
 3352 1124 10D1     		bne	.L218
 3353              	.LVL502:
 3354              		.loc 1 1023 0
 3355 1126 101C     		mov	r0, r2
 3356 1128 FFF7FEFF 		bl	ntohl
 3357 112c 1490     		str	r0, [sp, #80]
 3358              		.loc 1 1024 0
 3359 112e 000E     		lsr	r0, r0, #24
 3360 1130 5146     		mov	r1, sl
 3361 1132 0870     		strb	r0, [r1]
 3362 1134 149B     		ldr	r3, [sp, #80]
 3363 1136 1B0C     		lsr	r3, r3, #16
 3364 1138 4A46     		mov	r2, r9
 3365 113a 1370     		strb	r3, [r2]
 3366 113c 149B     		ldr	r3, [sp, #80]
 3367 113e 1B0A     		lsr	r3, r3, #8
 3368 1140 2370     		strb	r3, [r4]
 3369 1142 149B     		ldr	r3, [sp, #80]
 3370 1144 0D98     		ldr	r0, [sp, #52]
 3371 1146 0370     		strb	r3, [r0]
 3372              	.L218:
 3373              		.loc 1 1026 0
 3374 1148 1398     		ldr	r0, [sp, #76]
 3375 114a FFF7FEFF 		bl	inet_ntoa
 3376 114e 021C     		mov	r2, r0
 3377 1150 8549     		ldr	r1, .L256+36
 3378 1152 0520     		mov	r0, #5
 3379 1154 FFF7FEFF 		bl	ppp_trace
 3380 1158 0324     		mov	r4, #3
 3381              	.LVL503:
 3382 115a 11E0     		b	.L219
 3383              	.LVL504:
 3384              	.L215:
 3385              		.loc 1 1027 0
 3386 115c 0028     		cmp	r0, #0
 3387 115e 0ED1     		bne	.L217
 3388              		.loc 1 1031 0
 3389 1160 1398     		ldr	r0, [sp, #76]
 3390              	.LVL505:
 3391 1162 FFF7FEFF 		bl	inet_ntoa
 3392 1166 021C     		mov	r2, r0
 3393 1168 8049     		ldr	r1, .L256+40
 3394 116a 0520     		mov	r0, #5
 3395 116c FFF7FEFF 		bl	ppp_trace
 3396              		.loc 1 1033 0
 3397 1170 0999     		ldr	r1, [sp, #36]
 3398 1172 0B78     		ldrb	r3, [r1]
 3399 1174 0422     		mov	r2, #4
 3400 1176 9343     		bic	r3, r3, r2
 3401 1178 0B70     		strb	r3, [r1]
 3402 117a 0424     		mov	r4, #4
 3403              	.LVL506:
 3404 117c 6EE1     		b	.L206
 3405              	.LVL507:
 3406              	.L217:
 3407              		.loc 1 1034 0
 3408 117e 0224     		mov	r4, #2
 3409              	.LVL508:
 3410              	.L219:
 3411              		.loc 1 1037 0
 3412 1180 0A98     		ldr	r0, [sp, #40]
 3413 1182 0378     		ldrb	r3, [r0]
 3414 1184 0122     		mov	r2, #1
 3415 1186 1343     		orr	r3, r3, r2
 3416 1188 0370     		strb	r3, [r0]
 3417              		.loc 1 1038 0
 3418 118a 139B     		ldr	r3, [sp, #76]
 3419 118c C360     		str	r3, [r0, #12]
 3420              		.loc 1 1039 0
 3421 118e 1398     		ldr	r0, [sp, #76]
 3422 1190 FFF7FEFF 		bl	inet_ntoa
 3423 1194 021C     		mov	r2, r0
 3424 1196 7649     		ldr	r1, .L256+44
 3425 1198 0520     		mov	r0, #5
 3426 119a FFF7FEFF 		bl	ppp_trace
 3427 119e 58E1     		b	.L220
 3428              	.LVL509:
 3429              	.L211:
 3430              		.loc 1 1045 0
 3431 11a0 833B     		sub	r3, r3, #131
 3432              	.LVL510:
 3433 11a2 5942     		neg	r1, r3
 3434 11a4 5941     		adc	r1, r1, r3
 3435 11a6 8946     		mov	r9, r1
 3436              		.loc 1 1048 0
 3437 11a8 0B1C     		mov	r3, r1
 3438 11aa 0433     		add	r3, r3, #4
 3439 11ac 9B00     		lsl	r3, r3, #2
 3440 11ae 0B9A     		ldr	r2, [sp, #44]
 3441 11b0 9B58     		ldr	r3, [r3, r2]
 3442 11b2 002B     		cmp	r3, #0
 3443 11b4 01D0     		beq	.L253
 3444              	.LVL511:
 3445 11b6 062F     		cmp	r7, #6
 3446 11b8 07D0     		beq	.L221
 3447              	.L253:
 3448              		.loc 1 1050 0
 3449 11ba 6E49     		ldr	r1, .L256+48
 3450              	.LVL512:
 3451 11bc 4A46     		mov	r2, r9
 3452 11be 0132     		add	r2, r2, #1
 3453 11c0 0520     		mov	r0, #5
 3454 11c2 FFF7FEFF 		bl	ppp_trace
 3455 11c6 0424     		mov	r4, #4
 3456              	.LVL513:
 3457 11c8 48E1     		b	.L206
 3458              	.LVL514:
 3459              	.L221:
 3460              		.loc 1 1054 0
 3461 11ca 5346     		mov	r3, sl
 3462 11cc 0133     		add	r3, r3, #1
 3463 11ce 0E93     		str	r3, [sp, #56]
 3464              	.LVL515:
 3465 11d0 5046     		mov	r0, sl
 3466 11d2 0378     		ldrb	r3, [r0]
 3467 11d4 1B02     		lsl	r3, r3, #8
 3468              	.LVL516:
 3469 11d6 1493     		str	r3, [sp, #80]
 3470 11d8 0E99     		ldr	r1, [sp, #56]
 3471              	.LVL517:
 3472 11da 0878     		ldrb	r0, [r1]
 3473 11dc 1843     		orr	r0, r0, r3
 3474              	.LVL518:
 3475 11de 0C1C     		mov	r4, r1
 3476              	.LVL519:
 3477 11e0 0134     		add	r4, r4, #1
 3478 11e2 0002     		lsl	r0, r0, #8
 3479              	.LVL520:
 3480 11e4 1490     		str	r0, [sp, #80]
 3481 11e6 2378     		ldrb	r3, [r4]
 3482 11e8 1843     		orr	r0, r0, r3
 3483              	.LVL521:
 3484 11ea 621C     		add	r2, r4, #1
 3485 11ec 0F92     		str	r2, [sp, #60]
 3486              	.LVL522:
 3487 11ee 0002     		lsl	r0, r0, #8
 3488              	.LVL523:
 3489 11f0 1490     		str	r0, [sp, #80]
 3490 11f2 1378     		ldrb	r3, [r2]
 3491 11f4 1843     		orr	r0, r0, r3
 3492              	.LVL524:
 3493 11f6 1490     		str	r0, [sp, #80]
 3494              		.loc 1 1055 0
 3495 11f8 FFF7FEFF 		bl	htonl
 3496              	.LVL525:
 3497 11fc 4B46     		mov	r3, r9
 3498 11fe 0433     		add	r3, r3, #4
 3499 1200 9B00     		lsl	r3, r3, #2
 3500 1202 0B99     		ldr	r1, [sp, #44]
 3501 1204 5B58     		ldr	r3, [r3, r1]
 3502 1206 9842     		cmp	r0, r3
 3503 1208 01D1     		bne	.L223
 3504 120a 0224     		mov	r4, #2
 3505              	.LVL526:
 3506 120c 1FE0     		b	.L224
 3507              	.LVL527:
 3508              	.L223:
 3509              		.loc 1 1056 0
 3510 120e 1498     		ldr	r0, [sp, #80]
 3511 1210 FFF7FEFF 		bl	inet_ntoa
 3512 1214 031C     		mov	r3, r0
 3513 1216 5849     		ldr	r1, .L256+52
 3514 1218 4A46     		mov	r2, r9
 3515 121a 0132     		add	r2, r2, #1
 3516 121c 0520     		mov	r0, #5
 3517 121e FFF7FEFF 		bl	ppp_trace
 3518              		.loc 1 1059 0
 3519 1222 4B46     		mov	r3, r9
 3520 1224 0433     		add	r3, r3, #4
 3521 1226 9B00     		lsl	r3, r3, #2
 3522 1228 0B9A     		ldr	r2, [sp, #44]
 3523 122a 9858     		ldr	r0, [r3, r2]
 3524 122c FFF7FEFF 		bl	ntohl
 3525 1230 1490     		str	r0, [sp, #80]
 3526              		.loc 1 1060 0
 3527 1232 000E     		lsr	r0, r0, #24
 3528 1234 5346     		mov	r3, sl
 3529 1236 1870     		strb	r0, [r3]
 3530 1238 149B     		ldr	r3, [sp, #80]
 3531 123a 1B0C     		lsr	r3, r3, #16
 3532 123c 0E98     		ldr	r0, [sp, #56]
 3533 123e 0370     		strb	r3, [r0]
 3534 1240 149B     		ldr	r3, [sp, #80]
 3535 1242 1B0A     		lsr	r3, r3, #8
 3536 1244 2370     		strb	r3, [r4]
 3537 1246 149B     		ldr	r3, [sp, #80]
 3538 1248 0F99     		ldr	r1, [sp, #60]
 3539 124a 0B70     		strb	r3, [r1]
 3540 124c 0324     		mov	r4, #3
 3541              	.LVL528:
 3542              	.L224:
 3543              		.loc 1 1063 0
 3544 124e 4B49     		ldr	r1, .L256+56
 3545 1250 4A46     		mov	r2, r9
 3546 1252 0132     		add	r2, r2, #1
 3547 1254 0520     		mov	r0, #5
 3548 1256 FFF7FEFF 		bl	ppp_trace
 3549 125a FAE0     		b	.L220
 3550              	.LVL529:
 3551              	.L210:
 3552              		.loc 1 1069 0
 3553 125c 823B     		sub	r3, r3, #130
 3554              	.LVL530:
 3555 125e 5C42     		neg	r4, r3
 3556 1260 5C41     		adc	r4, r4, r3
 3557              	.LVL531:
 3558              		.loc 1 1070 0
 3559 1262 621C     		add	r2, r4, #1
 3560 1264 0520     		mov	r0, #5
 3561 1266 0299     		ldr	r1, [sp, #8]
 3562 1268 FFF7FEFF 		bl	ppp_trace
 3563              		.loc 1 1073 0
 3564 126c A31D     		add	r3, r4, #6
 3565 126e 9B00     		lsl	r3, r3, #2
 3566 1270 0B9A     		ldr	r2, [sp, #44]
 3567 1272 9B58     		ldr	r3, [r3, r2]
 3568 1274 002B     		cmp	r3, #0
 3569 1276 00D1     		bne	.LCB3841
 3570 1278 71E1     		b	.L225	@long jump
 3571              	.LCB3841:
 3572              	.LVL532:
 3573 127a 062F     		cmp	r7, #6
 3574 127c 00D0     		beq	.LCB3844
 3575 127e 6EE1     		b	.L225	@long jump
 3576              	.LCB3844:
 3577              		.loc 1 1078 0
 3578 1280 5346     		mov	r3, sl
 3579 1282 0133     		add	r3, r3, #1
 3580 1284 1093     		str	r3, [sp, #64]
 3581              	.LVL533:
 3582 1286 5046     		mov	r0, sl
 3583 1288 0378     		ldrb	r3, [r0]
 3584 128a 1B02     		lsl	r3, r3, #8
 3585              	.LVL534:
 3586 128c 1493     		str	r3, [sp, #80]
 3587 128e 1099     		ldr	r1, [sp, #64]
 3588 1290 0878     		ldrb	r0, [r1]
 3589 1292 1843     		orr	r0, r0, r3
 3590              	.LVL535:
 3591 1294 0131     		add	r1, r1, #1
 3592 1296 8946     		mov	r9, r1
 3593              	.LVL536:
 3594 1298 0002     		lsl	r0, r0, #8
 3595              	.LVL537:
 3596 129a 1490     		str	r0, [sp, #80]
 3597 129c 0B78     		ldrb	r3, [r1]
 3598 129e 1843     		orr	r0, r0, r3
 3599              	.LVL538:
 3600 12a0 0131     		add	r1, r1, #1
 3601 12a2 1191     		str	r1, [sp, #68]
 3602              	.LVL539:
 3603 12a4 0002     		lsl	r0, r0, #8
 3604              	.LVL540:
 3605 12a6 1490     		str	r0, [sp, #80]
 3606 12a8 0B78     		ldrb	r3, [r1]
 3607 12aa 1843     		orr	r0, r0, r3
 3608              	.LVL541:
 3609 12ac 1490     		str	r0, [sp, #80]
 3610              		.loc 1 1079 0
 3611 12ae FFF7FEFF 		bl	htonl
 3612              	.LVL542:
 3613 12b2 A31D     		add	r3, r4, #6
 3614 12b4 9B00     		lsl	r3, r3, #2
 3615 12b6 0B99     		ldr	r1, [sp, #44]
 3616 12b8 5A58     		ldr	r2, [r3, r1]
 3617 12ba 9042     		cmp	r0, r2
 3618 12bc 00D1     		bne	.LCB3884
 3619 12be C7E0     		b	.L226	@long jump
 3620              	.LCB3884:
 3621              		.loc 1 1081 0
 3622 12c0 101C     		mov	r0, r2
 3623 12c2 FFF7FEFF 		bl	ntohl
 3624 12c6 1490     		str	r0, [sp, #80]
 3625              		.loc 1 1082 0
 3626 12c8 000E     		lsr	r0, r0, #24
 3627 12ca 5246     		mov	r2, sl
 3628 12cc 1070     		strb	r0, [r2]
 3629 12ce 149B     		ldr	r3, [sp, #80]
 3630 12d0 1B0C     		lsr	r3, r3, #16
 3631 12d2 1098     		ldr	r0, [sp, #64]
 3632 12d4 0370     		strb	r3, [r0]
 3633 12d6 149B     		ldr	r3, [sp, #80]
 3634 12d8 1B0A     		lsr	r3, r3, #8
 3635 12da 4946     		mov	r1, r9
 3636 12dc 0B70     		strb	r3, [r1]
 3637 12de 149B     		ldr	r3, [sp, #80]
 3638 12e0 119A     		ldr	r2, [sp, #68]
 3639 12e2 1370     		strb	r3, [r2]
 3640 12e4 0324     		mov	r4, #3
 3641              	.LVL543:
 3642 12e6 B9E0     		b	.L206
 3643              	.LVL544:
 3644              	.L208:
 3645              		.loc 1 1088 0
 3646 12e8 0B98     		ldr	r0, [sp, #44]
 3647 12ea 0378     		ldrb	r3, [r0]
 3648              	.LVL545:
 3649 12ec 9906     		lsl	r1, r3, #26
 3650 12ee 05D4     		bmi	.L227
 3651              	.LVL546:
 3652              		.loc 1 1089 0
 3653 12f0 2349     		ldr	r1, .L256+60
 3654 12f2 0520     		mov	r0, #5
 3655 12f4 FFF7FEFF 		bl	ppp_trace
 3656 12f8 0424     		mov	r4, #4
 3657              	.LVL547:
 3658 12fa AFE0     		b	.L206
 3659              	.LVL548:
 3660              	.L227:
 3661              		.loc 1 1092 0
 3662 12fc 231F     		sub	r3, r4, #4
 3663 12fe 191C     		mov	r1, r3
 3664 1300 4A1E     		sub	r2, r1, #1
 3665 1302 9141     		sbc	r1, r1, r2
 3666 1304 062C     		cmp	r4, #6
 3667 1306 08D0     		beq	.L228
 3668              	.LVL549:
 3669 1308 0029     		cmp	r1, #0
 3670 130a 06D0     		beq	.L228
 3671              		.loc 1 1093 0
 3672 130c 1D49     		ldr	r1, .L256+64
 3673 130e 0520     		mov	r0, #5
 3674 1310 221C     		mov	r2, r4
 3675              	.LVL550:
 3676 1312 FFF7FEFF 		bl	ppp_trace
 3677 1316 0424     		mov	r4, #4
 3678              	.LVL551:
 3679 1318 A0E0     		b	.L206
 3680              	.LVL552:
 3681              	.L228:
 3682              		.loc 1 1097 0
 3683 131a 5246     		mov	r2, sl
 3684 131c 1378     		ldrb	r3, [r2]
 3685              	.LVL553:
 3686 131e 5046     		mov	r0, sl
 3687 1320 0130     		add	r0, r0, #1
 3688              	.LVL554:
 3689 1322 1B02     		lsl	r3, r3, #8
 3690              	.LVL555:
 3691 1324 0278     		ldrb	r2, [r0]
 3692 1326 1C1C     		mov	r4, r3
 3693              	.LVL556:
 3694 1328 1443     		orr	r4, r4, r2
 3695              	.LVL557:
 3696              		.loc 1 1099 0
 3697 132a 2D2C     		cmp	r4, #45
 3698 132c 2ED0     		beq	.L229
 3699 132e 0029     		cmp	r1, #0
 3700 1330 01D1     		bne	.L254
 3701 1332 372C     		cmp	r4, #55
 3702 1334 2AD0     		beq	.L229
 3703              	.L254:
 3704              		.loc 1 1101 0
 3705 1336 1449     		ldr	r1, .L256+68
 3706 1338 0520     		mov	r0, #5
 3707              	.LVL558:
 3708 133a 221C     		mov	r2, r4
 3709 133c FFF7FEFF 		bl	ppp_trace
 3710 1340 0424     		mov	r4, #4
 3711              	.LVL559:
 3712 1342 8BE0     		b	.L206
 3713              	.L257:
 3714              		.align	2
 3715              	.L256:
 3716 1344 00000000 		.word	ipcp_wantoptions
 3717 1348 00000000 		.word	ipcp_hisoptions
 3718 134c 00000000 		.word	ipcp_allowoptions
 3719 1350 00000000 		.word	cis_received
 3720 1354 DC040000 		.word	.LC112
 3721 1358 50020000 		.word	.LC78
 3722 135c 7C030000 		.word	.LC96
 3723 1360 6C020000 		.word	.LC80
 3724 1364 94020000 		.word	.LC82
 3725 1368 B8020000 		.word	.LC84
 3726 136c D4020000 		.word	.LC86
 3727 1370 F0020000 		.word	.LC88
 3728 1374 08030000 		.word	.LC90
 3729 1378 30030000 		.word	.LC92
 3730 137c 58030000 		.word	.LC94
 3731 1380 A4030000 		.word	.LC98
 3732 1384 D4030000 		.word	.LC100
 3733 1388 00040000 		.word	.LC102
 3734              	.LVL560:
 3735              	.L229:
 3736              		.loc 1 1106 0
 3737 138c 0A99     		ldr	r1, [sp, #40]
 3738 138e 0B78     		ldrb	r3, [r1]
 3739 1390 2022     		mov	r2, #32
 3740 1392 1343     		orr	r3, r3, r2
 3741 1394 0B70     		strb	r3, [r1]
 3742              		.loc 1 1107 0
 3743 1396 0A9A     		ldr	r2, [sp, #40]
 3744 1398 5480     		strh	r4, [r2, #2]
 3745              		.loc 1 1108 0
 3746 139a 062F     		cmp	r7, #6
 3747 139c 36D1     		bne	.L231
 3748              		.loc 1 1097 0
 3749 139e 441C     		add	r4, r0, #1
 3750              	.LVL561:
 3751              		.loc 1 1109 0
 3752 13a0 2378     		ldrb	r3, [r4]
 3753 13a2 9946     		mov	r9, r3
 3754              	.LVL562:
 3755 13a4 601C     		add	r0, r4, #1
 3756 13a6 1290     		str	r0, [sp, #72]
 3757              	.LVL563:
 3758              		.loc 1 1110 0
 3759 13a8 0B99     		ldr	r1, [sp, #44]
 3760 13aa 0B79     		ldrb	r3, [r1, #4]
 3761 13ac 4B45     		cmp	r3, r9
 3762 13ae 01D3     		bcc	.L232
 3763 13b0 0224     		mov	r4, #2
 3764              	.LVL564:
 3765 13b2 0DE0     		b	.L233
 3766              	.LVL565:
 3767              	.L232:
 3768              		.loc 1 1111 0
 3769 13b4 6D49     		ldr	r1, .L258
 3770 13b6 0520     		mov	r0, #5
 3771 13b8 4A46     		mov	r2, r9
 3772 13ba FFF7FEFF 		bl	ppp_trace
 3773              		.loc 1 1113 0
 3774 13be 069A     		ldr	r2, [sp, #24]
 3775 13c0 002A     		cmp	r2, #0
 3776 13c2 01D0     		beq	.L234
 3777              	.LVL566:
 3778 13c4 0324     		mov	r4, #3
 3779              	.LVL567:
 3780 13c6 03E0     		b	.L233
 3781              	.LVL568:
 3782              	.L234:
 3783              		.loc 1 1115 0
 3784 13c8 0B98     		ldr	r0, [sp, #44]
 3785 13ca 0379     		ldrb	r3, [r0, #4]
 3786 13cc 2370     		strb	r3, [r4]
 3787 13ce 0324     		mov	r4, #3
 3788              	.LVL569:
 3789              	.L233:
 3790              		.loc 1 1118 0
 3791 13d0 1299     		ldr	r1, [sp, #72]
 3792 13d2 0978     		ldrb	r1, [r1]
 3793 13d4 8A46     		mov	sl, r1
 3794              	.LVL570:
 3795              		.loc 1 1119 0
 3796 13d6 0029     		cmp	r1, #0
 3797 13d8 12D0     		beq	.L235
 3798              	.LVL571:
 3799 13da 0B9A     		ldr	r2, [sp, #44]
 3800 13dc 5379     		ldrb	r3, [r2, #5]
 3801 13de 002B     		cmp	r3, #0
 3802 13e0 0ED1     		bne	.L235
 3803              		.loc 1 1120 0
 3804 13e2 6349     		ldr	r1, .L258+4
 3805 13e4 0520     		mov	r0, #5
 3806 13e6 5246     		mov	r2, sl
 3807 13e8 FFF7FEFF 		bl	ppp_trace
 3808              		.loc 1 1122 0
 3809 13ec 069B     		ldr	r3, [sp, #24]
 3810 13ee 002B     		cmp	r3, #0
 3811 13f0 01D0     		beq	.L236
 3812 13f2 0324     		mov	r4, #3
 3813 13f4 04E0     		b	.L235
 3814              	.L236:
 3815              		.loc 1 1124 0
 3816 13f6 0998     		ldr	r0, [sp, #36]
 3817 13f8 4379     		ldrb	r3, [r0, #5]
 3818 13fa 1299     		ldr	r1, [sp, #72]
 3819 13fc 0B70     		strb	r3, [r1]
 3820 13fe 0324     		mov	r4, #3
 3821              	.L235:
 3822              		.loc 1 1127 0
 3823 1400 4B46     		mov	r3, r9
 3824              	.LVL572:
 3825 1402 0A9A     		ldr	r2, [sp, #40]
 3826 1404 1371     		strb	r3, [r2, #4]
 3827              		.loc 1 1128 0
 3828 1406 5046     		mov	r0, sl
 3829              	.LVL573:
 3830 1408 5071     		strb	r0, [r2, #5]
 3831 140a 09E0     		b	.L237
 3832              	.LVL574:
 3833              	.L231:
 3834              		.loc 1 1130 0
 3835 140c 0A99     		ldr	r1, [sp, #40]
 3836 140e 0B78     		ldrb	r3, [r1]
 3837 1410 4022     		mov	r2, #64
 3838 1412 1343     		orr	r3, r3, r2
 3839 1414 0B70     		strb	r3, [r1]
 3840              		.loc 1 1131 0
 3841 1416 0F23     		mov	r3, #15
 3842 1418 0B71     		strb	r3, [r1, #4]
 3843              		.loc 1 1132 0
 3844 141a 0123     		mov	r3, #1
 3845 141c 4B71     		strb	r3, [r1, #5]
 3846 141e 0224     		mov	r4, #2
 3847              	.LVL575:
 3848              	.L237:
 3849              		.loc 1 1134 0
 3850 1420 5449     		ldr	r1, .L258+8
 3851 1422 0A9B     		ldr	r3, [sp, #40]
 3852 1424 5A88     		ldrh	r2, [r3, #2]
 3853 1426 1B78     		ldrb	r3, [r3]
 3854 1428 5B06     		lsl	r3, r3, #25
 3855 142a DB0F     		lsr	r3, r3, #31
 3856 142c 9C46     		mov	ip, r3
 3857 142e 0A9B     		ldr	r3, [sp, #40]
 3858 1430 1879     		ldrb	r0, [r3, #4]
 3859              	.LVL576:
 3860 1432 0090     		str	r0, [sp]
 3861 1434 5879     		ldrb	r0, [r3, #5]
 3862 1436 0190     		str	r0, [sp, #4]
 3863 1438 0520     		mov	r0, #5
 3864 143a 6346     		mov	r3, ip
 3865 143c FFF7FEFF 		bl	ppp_trace
 3866 1440 07E0     		b	.L220
 3867              	.LVL577:
 3868              	.L207:
 3869              		.loc 1 1140 0
 3870 1442 4D49     		ldr	r1, .L258+12
 3871 1444 0520     		mov	r0, #5
 3872 1446 1A1C     		mov	r2, r3
 3873 1448 FFF7FEFF 		bl	ppp_trace
 3874              	.LVL578:
 3875 144c 0424     		mov	r4, #4
 3876              	.LVL579:
 3877 144e 05E0     		b	.L206
 3878              	.LVL580:
 3879              	.L226:
 3880 1450 0224     		mov	r4, #2
 3881              	.LVL581:
 3882              	.L220:
 3883              		.loc 1 1146 0
 3884 1452 022C     		cmp	r4, #2
 3885 1454 02D1     		bne	.L206
 3886              	.LVL582:
 3887 1456 5846     		mov	r0, fp
 3888 1458 0228     		cmp	r0, #2
 3889 145a 24D1     		bne	.L238
 3890              	.LVL583:
 3891              	.L206:
 3892              		.loc 1 1151 0
 3893 145c 032C     		cmp	r4, #3
 3894 145e 11D1     		bne	.L240
 3895              		.loc 1 1152 0
 3896 1460 0699     		ldr	r1, [sp, #24]
 3897 1462 0029     		cmp	r1, #0
 3898 1464 05D0     		beq	.L241
 3899              	.LVL584:
 3900              		.loc 1 1153 0
 3901 1466 0520     		mov	r0, #5
 3902 1468 0499     		ldr	r1, [sp, #16]
 3903 146a FFF7FEFF 		bl	ppp_trace
 3904 146e 0424     		mov	r4, #4
 3905 1470 08E0     		b	.L240
 3906              	.LVL585:
 3907              	.L241:
 3908              		.loc 1 1156 0
 3909 1472 5A46     		mov	r2, fp
 3910 1474 042A     		cmp	r2, #4
 3911 1476 16D0     		beq	.L238
 3912              		.loc 1 1159 0
 3913 1478 022A     		cmp	r2, #2
 3914 147a 03D1     		bne	.L240
 3915 147c 059B     		ldr	r3, [sp, #20]
 3916 147e 9846     		mov	r8, r3
 3917 1480 0320     		mov	r0, #3
 3918 1482 8346     		mov	fp, r0
 3919              	.LVL586:
 3920              	.L240:
 3921              		.loc 1 1166 0
 3922 1484 042C     		cmp	r4, #4
 3923 1486 06D1     		bne	.L242
 3924 1488 5946     		mov	r1, fp
 3925 148a 0429     		cmp	r1, #4
 3926 148c 03D0     		beq	.L242
 3927 148e 059A     		ldr	r2, [sp, #20]
 3928 1490 9046     		mov	r8, r2
 3929 1492 0423     		mov	r3, #4
 3930 1494 9B46     		mov	fp, r3
 3931              	.LVL587:
 3932              	.L242:
 3933              		.loc 1 1173 0
 3934 1496 4645     		cmp	r6, r8
 3935 1498 04D0     		beq	.L243
 3936              	.LVL588:
 3937              		.loc 1 1174 0
 3938 149a 4046     		mov	r0, r8
 3939 149c 311C     		mov	r1, r6
 3940 149e 3A1C     		mov	r2, r7
 3941 14a0 FFF7FEFF 		bl	memcpy
 3942              	.LVL589:
 3943              	.L243:
 3944              		.loc 1 1178 0
 3945 14a4 B844     		add	r8, r8, r7
 3946              	.LVL590:
 3947              	.L238:
 3948              		.loc 1 919 0
 3949 14a6 002D     		cmp	r5, #0
 3950 14a8 01D0     		beq	.L244
 3951 14aa 0C9E     		ldr	r6, [sp, #48]
 3952 14ac CEE5     		b	.L245
 3953              	.L244:
 3954 14ae 5D46     		mov	r5, fp
 3955              	.LVL591:
 3956 14b0 4146     		mov	r1, r8
 3957              		.loc 1 1188 0
 3958 14b2 042D     		cmp	r5, #4
 3959 14b4 55D0     		beq	.L246
 3960              	.LVL592:
 3961              	.L203:
 3962 14b6 0A98     		ldr	r0, [sp, #40]
 3963 14b8 0378     		ldrb	r3, [r0]
 3964 14ba DB07     		lsl	r3, r3, #31
 3965 14bc DB0F     		lsr	r3, r3, #31
 3966 14be 1B06     		lsl	r3, r3, #24
 3967 14c0 002B     		cmp	r3, #0
 3968 14c2 30D1     		bne	.L247
 3969 14c4 0999     		ldr	r1, [sp, #36]
 3970 14c6 0B78     		ldrb	r3, [r1]
 3971 14c8 5A07     		lsl	r2, r3, #29
 3972 14ca 2CD5     		bpl	.L247
 3973              	.LVL593:
 3974 14cc 069B     		ldr	r3, [sp, #24]
 3975 14ce 002B     		cmp	r3, #0
 3976 14d0 29D1     		bne	.L247
 3977              	.LVL594:
 3978              		.loc 1 1190 0
 3979 14d2 2A49     		ldr	r1, .L258+16
 3980 14d4 0520     		mov	r0, #5
 3981 14d6 FFF7FEFF 		bl	ppp_trace
 3982              		.loc 1 1191 0
 3983 14da 022D     		cmp	r5, #2
 3984 14dc 07D1     		bne	.L248
 3985              		.loc 1 1194 0
 3986 14de 0998     		ldr	r0, [sp, #36]
 3987 14e0 0378     		ldrb	r3, [r0]
 3988 14e2 0422     		mov	r2, #4
 3989 14e4 9343     		bic	r3, r3, r2
 3990 14e6 0370     		strb	r3, [r0]
 3991 14e8 0899     		ldr	r1, [sp, #32]
 3992 14ea 8846     		mov	r8, r1
 3993 14ec 0325     		mov	r5, #3
 3994              	.LVL595:
 3995              	.L248:
 3996              		.loc 1 1196 0
 3997 14ee 0323     		mov	r3, #3
 3998 14f0 4246     		mov	r2, r8
 3999 14f2 1370     		strb	r3, [r2]
 4000 14f4 4446     		mov	r4, r8
 4001              	.LVL596:
 4002 14f6 0134     		add	r4, r4, #1
 4003              	.LVL597:
 4004              		.loc 1 1197 0
 4005 14f8 0623     		mov	r3, #6
 4006 14fa 2370     		strb	r3, [r4]
 4007 14fc 0134     		add	r4, r4, #1
 4008              	.LVL598:
 4009              		.loc 1 1198 0
 4010 14fe 099B     		ldr	r3, [sp, #36]
 4011 1500 D868     		ldr	r0, [r3, #12]
 4012 1502 FFF7FEFF 		bl	ntohl
 4013 1506 1490     		str	r0, [sp, #80]
 4014              		.loc 1 1199 0
 4015 1508 000E     		lsr	r0, r0, #24
 4016 150a 2070     		strb	r0, [r4]
 4017 150c 0134     		add	r4, r4, #1
 4018              	.LVL599:
 4019 150e 149B     		ldr	r3, [sp, #80]
 4020 1510 1B0C     		lsr	r3, r3, #16
 4021 1512 2370     		strb	r3, [r4]
 4022 1514 0134     		add	r4, r4, #1
 4023              	.LVL600:
 4024 1516 149B     		ldr	r3, [sp, #80]
 4025 1518 1B0A     		lsr	r3, r3, #8
 4026 151a 2370     		strb	r3, [r4]
 4027 151c 0134     		add	r4, r4, #1
 4028              	.LVL601:
 4029 151e 149B     		ldr	r3, [sp, #80]
 4030 1520 2370     		strb	r3, [r4]
 4031 1522 0134     		add	r4, r4, #1
 4032              	.LVL602:
 4033 1524 A046     		mov	r8, r4
 4034              	.LVL603:
 4035              	.L247:
 4036              		.loc 1 1202 0
 4037 1526 4046     		mov	r0, r8
 4038 1528 0899     		ldr	r1, [sp, #32]
 4039 152a 431A     		sub	r3, r0, r1
 4040 152c 079A     		ldr	r2, [sp, #28]
 4041 152e 1360     		str	r3, [r2]
 4042              		.loc 1 1203 0
 4043 1530 022D     		cmp	r5, #2
 4044 1532 01D1     		bne	.L249
 4045 1534 124A     		ldr	r2, .L258+20
 4046 1536 04E0     		b	.L250
 4047              	.L249:
 4048 1538 032D     		cmp	r5, #3
 4049 153a 01D1     		bne	.L251
 4050 153c 114A     		ldr	r2, .L258+24
 4051 153e 00E0     		b	.L250
 4052              	.L251:
 4053 1540 114A     		ldr	r2, .L258+28
 4054              	.L250:
 4055 1542 1249     		ldr	r1, .L258+32
 4056 1544 0520     		mov	r0, #5
 4057 1546 FFF7FEFF 		bl	ppp_trace
 4058              		.loc 1 1205 0
 4059 154a 281C     		mov	r0, r5
 4060 154c 15B0     		add	sp, sp, #84
 4061              		@ sp needed for prologue
 4062              	.LVL604:
 4063              	.LVL605:
 4064              	.LVL606:
 4065              	.LVL607:
 4066              	.LVL608:
 4067              	.LVL609:
 4068              	.LVL610:
 4069 154e 3CBC     		pop	{r2, r3, r4, r5}
 4070 1550 9046     		mov	r8, r2
 4071 1552 9946     		mov	r9, r3
 4072 1554 A246     		mov	sl, r4
 4073 1556 AB46     		mov	fp, r5
 4074 1558 F0BC     		pop	{r4, r5, r6, r7}
 4075 155a 02BC     		pop	{r1}
 4076 155c 0847     		bx	r1
 4077              	.LVL611:
 4078              	.L225:
 4079              		.loc 1 1203 0
 4080 155e 0424     		mov	r4, #4
 4081              	.LVL612:
 4082 1560 7CE7     		b	.L206
 4083              	.LVL613:
 4084              	.L246:
 4085              		.loc 1 1202 0
 4086 1562 0898     		ldr	r0, [sp, #32]
 4087 1564 0B1A     		sub	r3, r1, r0
 4088 1566 0799     		ldr	r1, [sp, #28]
 4089              	.LVL614:
 4090 1568 0B60     		str	r3, [r1]
 4091 156a E9E7     		b	.L251
 4092              	.L259:
 4093              		.align	2
 4094              	.L258:
 4095 156c 28040000 		.word	.LC104
 4096 1570 4C040000 		.word	.LC106
 4097 1574 6C040000 		.word	.LC108
 4098 1578 B0040000 		.word	.LC110
 4099 157c 04050000 		.word	.LC114
 4100 1580 2C050000 		.word	.LC116
 4101 1584 30050000 		.word	.LC118
 4102 1588 34050000 		.word	.LC120
 4103 158c 38050000 		.word	.LC122
 4104              	.LFE303:
 4106              		.global	ipcp_protent
 4107              		.section	.rodata.str1.4
 4108              		.align	2
 4109              	.LC124:
 4110 055c 49504350 		.ascii	"IPCP\000"
 4110      00
 4111 0561 000000   		.data
 4112              		.align	2
 4115              	ipcp_protent:
 4116 0000 2180     		.short	-32735
 4117 0002 0000     		.space	2
 4118 0004 00000000 		.word	ipcp_init
 4119 0008 00000000 		.word	ipcp_input
 4120 000c 00000000 		.word	ipcp_protrej
 4121 0010 00000000 		.word	ipcp_lowerup
 4122 0014 00000000 		.word	ipcp_lowerdown
 4123 0018 00000000 		.word	ipcp_open
 4124 001c 00000000 		.word	ipcp_close
 4125 0020 01000000 		.word	1
 4126 0024 5C050000 		.word	.LC124
 4127              		.align	2
 4130              	ipcp_callbacks:
 4131 0028 00000000 		.word	ipcp_resetci
 4132 002c 00000000 		.word	ipcp_cilen
 4133 0030 00000000 		.word	ipcp_addci
 4134 0034 00000000 		.word	ipcp_ackci
 4135 0038 00000000 		.word	ipcp_nakci
 4136 003c 00000000 		.word	ipcp_rejci
 4137 0040 00000000 		.word	ipcp_reqci
 4138 0044 00000000 		.word	ipcp_up
 4139 0048 00000000 		.word	ipcp_down
 4140 004c 00000000 		.word	0
 4141 0050 00000000 		.word	ipcp_finished
 4142 0054 00000000 		.word	0
 4143 0058 00000000 		.word	0
 4144 005c 00000000 		.word	0
 4145 0060 5C050000 		.word	.LC124
 4146              		.bss
 4147              		.align	2
 4148              	cis_received:
 4149 0000 00000000 		.space	4
 4150              		.align	2
 4151              	default_route_set:
 4152 0004 00000000 		.space	4
 4153              		.comm	ipcp_fsm,56,4
 4154              		.comm	ipcp_wantoptions,32,4
 4155              		.comm	ipcp_gotoptions,32,4
 4156              		.comm	ipcp_allowoptions,32,4
 4157              		.comm	ipcp_hisoptions,32,4
 4538              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 ipcp.c
     /tmp/ccOAQarP.s:1      .text:00000000 $t
     /tmp/ccOAQarP.s:15     .text:00000000 ipcp_resetci
     /tmp/ccOAQarP.s:126    .text:000000a4 $d
                            *COM*:00000020 ipcp_wantoptions
                            *COM*:00000020 ipcp_allowoptions
                            *COM*:00000020 ipcp_gotoptions
     /tmp/ccOAQarP.s:4148   .bss:00000000 cis_received
     /tmp/ccOAQarP.s:134    .text:000000b8 $t
     /tmp/ccOAQarP.s:137    .text:000000b8 ipcp_cilen
     /tmp/ccOAQarP.s:302    .text:00000198 $d
                            *COM*:00000020 ipcp_hisoptions
     /tmp/ccOAQarP.s:309    .text:000001a8 $t
     /tmp/ccOAQarP.s:312    .text:000001a8 ipcp_close
     /tmp/ccOAQarP.s:334    .text:000001bc $d
                            *COM*:00000038 ipcp_fsm
     /tmp/ccOAQarP.s:338    .text:000001c0 $t
     /tmp/ccOAQarP.s:341    .text:000001c0 ipcp_open
     /tmp/ccOAQarP.s:362    .text:000001d4 $d
     /tmp/ccOAQarP.s:366    .text:000001d8 $t
     /tmp/ccOAQarP.s:369    .text:000001d8 ipcp_lowerdown
     /tmp/ccOAQarP.s:390    .text:000001ec $d
     /tmp/ccOAQarP.s:394    .text:000001f0 $t
     /tmp/ccOAQarP.s:397    .text:000001f0 ipcp_protrej
     /tmp/ccOAQarP.s:418    .text:00000204 $d
     /tmp/ccOAQarP.s:422    .text:00000208 $t
     /tmp/ccOAQarP.s:425    .text:00000208 ipcp_lowerup
     /tmp/ccOAQarP.s:446    .text:0000021c $d
     /tmp/ccOAQarP.s:450    .text:00000220 $t
     /tmp/ccOAQarP.s:453    .text:00000220 ipcp_input
     /tmp/ccOAQarP.s:475    .text:00000234 $d
     /tmp/ccOAQarP.s:479    .text:00000238 $t
     /tmp/ccOAQarP.s:482    .text:00000238 ipcp_init
     /tmp/ccOAQarP.s:590    .text:000002c8 $d
     /tmp/ccOAQarP.s:4130   .data:00000028 ipcp_callbacks
     /tmp/ccOAQarP.s:598    .text:000002dc $t
     /tmp/ccOAQarP.s:601    .text:000002dc ipcp_finished
     /tmp/ccOAQarP.s:627    .text:000002ec ipcp_down
     /tmp/ccOAQarP.s:703    .text:00000350 $d
     /tmp/ccOAQarP.s:4151   .bss:00000004 default_route_set
     /tmp/ccOAQarP.s:758    .text:00000360 $t
     /tmp/ccOAQarP.s:761    .text:00000360 ipcp_up
     /tmp/ccOAQarP.s:1011   .text:00000500 $d
     /tmp/ccOAQarP.s:1038   .text:0000054c $t
     /tmp/ccOAQarP.s:1041   .text:0000054c ipcp_rejci
     /tmp/ccOAQarP.s:1475   .text:000007a4 $d
     /tmp/ccOAQarP.s:1491   .text:000007ac $t
     /tmp/ccOAQarP.s:1494   .text:000007ac ipcp_nakci
     /tmp/ccOAQarP.s:2060   .text:00000aec $d
     /tmp/ccOAQarP.s:2067   .text:00000b00 $t
     /tmp/ccOAQarP.s:2409   .text:00000cdc $d
     /tmp/ccOAQarP.s:2418   .text:00000ce0 $t
     /tmp/ccOAQarP.s:2421   .text:00000ce0 ipcp_ackci
     /tmp/ccOAQarP.s:2737   .text:00000e68 $d
     /tmp/ccOAQarP.s:2742   .text:00000e70 $t
     /tmp/ccOAQarP.s:2745   .text:00000e70 ipcp_addci
     /tmp/ccOAQarP.s:3024   .text:00000fdc $d
     /tmp/ccOAQarP.s:3100   .text:00000fe0 $t
     /tmp/ccOAQarP.s:3103   .text:00000fe0 ipcp_reqci
     /tmp/ccOAQarP.s:3716   .text:00001344 $d
     /tmp/ccOAQarP.s:3737   .text:0000138c $t
     /tmp/ccOAQarP.s:4095   .text:0000156c $d
     /tmp/ccOAQarP.s:4115   .data:00000000 ipcp_protent
     /tmp/ccOAQarP.s:4116   .data:00000000 $d

UNDEFINED SYMBOLS
ppp_settings
fsm_close
fsm_open
fsm_lowerdown
fsm_lowerup
fsm_input
fsm_init
np_finished
ppp_trace
np_down
sifvjcomp
sifdown
cifdefaultroute
cifaddr
np_up
auth_ip_addr
inet_ntoa
GetMask
sifaddr
sifup
sifnpmode
sifdefaultroute
htonl
ntohl
memcpy
